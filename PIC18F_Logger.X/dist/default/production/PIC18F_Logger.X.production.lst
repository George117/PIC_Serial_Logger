

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Apr 08 19:18:32 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18  0000                     
    19                           ; Version 2.05
    20                           ; Generated 20/12/2018 GMT
    21                           ; 
    22                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F46K22 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     _ANSELAbits	set	3896
    54  0000                     _ANSELE	set	3900
    55  0000                     _ANSELD	set	3899
    56  0000                     _ANSELC	set	3898
    57  0000                     _ANSELB	set	3897
    58  0000                     _ANSELA	set	3896
    59  0000                     _TXREG2	set	3955
    60  0000                     _PIR3bits	set	4004
    61  0000                     _PIE3bits	set	4003
    62  0000                     _RCSTA2bits	set	3953
    63  0000                     _TXSTA2bits	set	3954
    64  0000                     _SPBRG2	set	3957
    65  0000                     _SPBRGH2	set	3958
    66  0000                     _BAUDCON2bits	set	3952
    67  0000                     _TRISDbits	set	3989
    68  0000                     _RCREG	set	4014
    69  0000                     _PORTBbits	set	3969
    70  0000                     _TXREG	set	4013
    71  0000                     _PIR1bits	set	3998
    72  0000                     _PIE1bits	set	3997
    73  0000                     _RCSTA1bits	set	4011
    74  0000                     _TXSTA1bits	set	4012
    75  0000                     _SPBRG1	set	4015
    76  0000                     _ADRESH	set	4036
    77  0000                     _ADCON0bits	set	4034
    78  0000                     _ADCON0	set	4034
    79  0000                     _LATDbits	set	3980
    80  0000                     _ADCON2bits	set	4032
    81  0000                     _ADCON2	set	4032
    82  0000                     _ADCON1	set	4033
    83  0000                     _TRISAbits	set	3986
    84  0000                     _LATE	set	3981
    85  0000                     _LATD	set	3980
    86  0000                     _LATC	set	3979
    87  0000                     _LATB	set	3978
    88  0000                     _LATA	set	3977
    89  0000                     _PORTE	set	3972
    90  0000                     _PORTD	set	3971
    91  0000                     _PORTC	set	3970
    92  0000                     _PORTB	set	3969
    93  0000                     _PORTA	set	3968
    94  0000                     _TRISE	set	3990
    95  0000                     _TRISD	set	3989
    96  0000                     _TRISC	set	3988
    97  0000                     _TRISB	set	3987
    98  0000                     _TRISA	set	3986
    99  0000                     _INTCONbits	set	4082
   100  0000                     _OSCTUNEbits	set	3995
   101  0000                     _OSCCONbits	set	4051
   102  0000                     _PEIE	set	32662
   103                           
   104                           ; #config settings
   105  0000                     
   106                           	psect	cinit
   107  00FE84                     __pcinit:
   108                           	opt callstack 0
   109  00FE84                     start_initialization:
   110                           	opt callstack 0
   111  00FE84                     __initialization:
   112                           	opt callstack 0
   113                           
   114                           ; Clear objects allocated to BANK0 (64 bytes)
   115  00FE84  EE00  F060         	lfsr	0,__pbssBANK0
   116  00FE88  0E40               	movlw	64
   117  00FE8A                     clear_0:
   118  00FE8A  6AEE               	clrf	postinc0,c
   119  00FE8C  06E8               	decf	wreg,f,c
   120  00FE8E  E1FD               	bnz	clear_0
   121                           
   122                           ; Clear objects allocated to COMRAM (22 bytes)
   123  00FE90  EE00  F001         	lfsr	0,__pbssCOMRAM
   124  00FE94  0E16               	movlw	22
   125  00FE96                     clear_1:
   126  00FE96  6AEE               	clrf	postinc0,c
   127  00FE98  06E8               	decf	wreg,f,c
   128  00FE9A  E1FD               	bnz	clear_1
   129  00FE9C                     end_of_initialization:
   130                           	opt callstack 0
   131  00FE9C                     __end_of__initialization:
   132                           	opt callstack 0
   133  00FE9C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   134  00FE9E  6EF8               	movwf	tblptru,c
   135  00FEA0  0100               	movlb	0
   136  00FEA2  EF53  F07F         	goto	_main	;jump to C main() function
   137                           
   138                           	psect	bssCOMRAM
   139  000001                     __pbssCOMRAM:
   140                           	opt callstack 0
   141  000001                     _str_i:
   142                           	opt callstack 0
   143  000001                     	ds	8
   144  000009                     	ds	5
   145  00000E                     	ds	5
   146  000013                     _rez_adc:
   147                           	opt callstack 0
   148  000013                     	ds	2
   149  000015                     _UQEnd:
   150                           	opt callstack 0
   151  000015                     	ds	1
   152  000016                     _UQFront:
   153                           	opt callstack 0
   154  000016                     	ds	1
   155                           
   156                           	psect	bssBANK0
   157  000060                     __pbssBANK0:
   158                           	opt callstack 0
   159  000060                     _URBuff:
   160                           	opt callstack 0
   161  000060                     	ds	64
   162                           
   163                           	psect	cstackCOMRAM
   164  000017                     __pcstackCOMRAM:
   165                           	opt callstack 0
   166  000017                     USARTWriteRaw@ch:
   167                           	opt callstack 0
   168  000017                     USARTInit@baud_rate:
   169                           	opt callstack 0
   170                           
   171                           ; 2 bytes @ 0x0
   172  000017                     	ds	1
   173  000018                     
   174                           ; 1 bytes @ 0x1
   175  000018                     	ds	1
   176  000019                     ??_USARTInit:
   177                           
   178                           ; 1 bytes @ 0x2
   179  000019                     	ds	2
   180  00001B                     ??_config:
   181                           
   182                           ; 1 bytes @ 0x4
   183  00001B                     	ds	2
   184  00001D                     ??_main:
   185                           
   186                           ; 1 bytes @ 0x6
   187  00001D                     	ds	2
   188  00001F                     main@i:
   189                           	opt callstack 0
   190                           
   191                           ; 2 bytes @ 0x8
   192  00001F                     	ds	2
   193                           
   194 ;;
   195 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   196 ;;
   197 ;; *************** function _main *****************
   198 ;; Defined at:
   199 ;;		line 20 in file "main.c"
   200 ;; Parameters:    Size  Location     Type
   201 ;;		None
   202 ;; Auto vars:     Size  Location     Type
   203 ;;  i               2    8[COMRAM] int 
   204 ;; Return value:  Size  Location     Type
   205 ;;                  1    wreg      void 
   206 ;; Registers used:
   207 ;;		wreg, status,2, status,0, cstack
   208 ;; Tracked objects:
   209 ;;		On entry : 0/0
   210 ;;		On exit  : 0/0
   211 ;;		Unchanged: 0/0
   212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   214 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   215 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   216 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   217 ;;Total ram usage:        4 bytes
   218 ;; Hardware stack levels required when called:    2
   219 ;; This function calls:
   220 ;;		_adc_config
   221 ;;		_config
   222 ;;		_read_Uout
   223 ;;		_send_data
   224 ;; This function is called by:
   225 ;;		Startup code after reset
   226 ;; This function uses a non-reentrant model
   227 ;;
   228                           
   229                           	psect	text0
   230  00FEA6                     __ptext0:
   231                           	opt callstack 0
   232  00FEA6                     _main:
   233                           	opt callstack 29
   234                           
   235                           ;main.c: 21:     config();
   236                           
   237                           ;incstack = 0
   238  00FEA6  ECBF  F07F         	call	_config	;wreg free
   239                           
   240                           ;main.c: 22:     adc_config();
   241  00FEAA  EC29  F07F         	call	_adc_config	;wreg free
   242  00FEAE                     l1445:
   243                           
   244                           ;main.c: 28:     {;main.c: 30:         for(int i=0;i<10;i++)
   245  00FEAE  0E00               	movlw	0
   246  00FEB0  6E20               	movwf	main@i+1,c
   247  00FEB2  0E00               	movlw	0
   248  00FEB4  6E1F               	movwf	main@i,c
   249  00FEB6                     l1449:
   250                           
   251                           ;main.c: 31:         {;main.c: 34:           read_Uout();
   252  00FEB6  EC32  F07F         	call	_read_Uout	;wreg free
   253                           
   254                           ;main.c: 35:           send_data();
   255  00FEBA  EC1F  F07F         	call	_send_data	;wreg free
   256                           
   257                           ;main.c: 39:         }
   258  00FEBE  4A1F               	infsnz	main@i,f,c
   259  00FEC0  2A20               	incf	main@i+1,f,c
   260  00FEC2  BE20               	btfsc	main@i+1,7,c
   261  00FEC4  D7F8               	goto	l1449
   262  00FEC6  5020               	movf	main@i+1,w,c
   263  00FEC8  E104               	bnz	u460
   264  00FECA  0E0A               	movlw	10
   265  00FECC  5C1F               	subwf	main@i,w,c
   266  00FECE  A0D8               	btfss	status,0,c
   267  00FED0  D7F2               	goto	l1449
   268  00FED2                     u460:
   269                           
   270                           ;main.c: 41:         _delay((unsigned long)((100)*(64000000/4000.0)));
   271  00FED2  0E09               	movlw	9
   272  00FED4  6E1E               	movwf	(??_main+1)& (0+255),c
   273  00FED6  0E1E               	movlw	30
   274  00FED8  6E1D               	movwf	??_main& (0+255),c
   275  00FEDA  0EE4               	movlw	228
   276  00FEDC                     u587:
   277  00FEDC  2EE8               	decfsz	wreg,f,c
   278  00FEDE  D7FE               	bra	u587
   279  00FEE0  2E1D               	decfsz	??_main& (0+255),f,c
   280  00FEE2  D7FC               	bra	u587
   281  00FEE4  2E1E               	decfsz	(??_main+1)& (0+255),f,c
   282  00FEE6  D7FA               	bra	u587
   283  00FEE8  D000               	nop2	
   284                           
   285                           ;main.c: 43:     LATDbits.LATD1=!LATDbits.LATD1;
   286  00FEEA  B28C               	btfsc	3980,1,c	;volatile
   287  00FEEC  D003               	goto	u470
   288  00FEEE  6A1D               	clrf	??_main& (0+255),c
   289  00FEF0  2A1D               	incf	??_main& (0+255),f,c
   290  00FEF2  D001               	goto	u488
   291  00FEF4                     u470:
   292  00FEF4  6A1D               	clrf	??_main& (0+255),c
   293  00FEF6                     u488:
   294  00FEF6  461D               	rlncf	??_main,f,c
   295  00FEF8  508C               	movf	3980,w,c	;volatile
   296  00FEFA  181D               	xorwf	??_main,w,c
   297  00FEFC  0BFD               	andlw	-3
   298  00FEFE  181D               	xorwf	??_main,w,c
   299  00FF00  6E8C               	movwf	3980,c	;volatile
   300  00FF02  D7D5               	goto	l1445
   301  00FF04                     __end_of_main:
   302                           	opt callstack 0
   303                           
   304 ;; *************** function _send_data *****************
   305 ;; Defined at:
   306 ;;		line 12 in file "data_out.c"
   307 ;; Parameters:    Size  Location     Type
   308 ;;		None
   309 ;; Auto vars:     Size  Location     Type
   310 ;;		None
   311 ;; Return value:  Size  Location     Type
   312 ;;                  1    wreg      void 
   313 ;; Registers used:
   314 ;;		wreg, cstack
   315 ;; Tracked objects:
   316 ;;		On entry : 0/0
   317 ;;		On exit  : 0/0
   318 ;;		Unchanged: 0/0
   319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   324 ;;Total ram usage:        0 bytes
   325 ;; Hardware stack levels used:    1
   326 ;; Hardware stack levels required when called:    1
   327 ;; This function calls:
   328 ;;		_USARTWriteRaw
   329 ;; This function is called by:
   330 ;;		_main
   331 ;; This function uses a non-reentrant model
   332 ;;
   333                           
   334                           	psect	text1
   335  00FE3E                     __ptext1:
   336                           	opt callstack 0
   337  00FE3E                     _send_data:
   338                           	opt callstack 29
   339                           
   340                           ;data_out.c: 13:     USARTWriteRaw(0x69);
   341                           
   342                           ;incstack = 0
   343  00FE3E  0E69               	movlw	105
   344  00FE40  EC23  F07F         	call	_USARTWriteRaw
   345  00FE44  0012               	return		;funcret
   346  00FE46                     __end_of_send_data:
   347                           	opt callstack 0
   348                           
   349 ;; *************** function _USARTWriteRaw *****************
   350 ;; Defined at:
   351 ;;		line 79 in file "usart.c"
   352 ;; Parameters:    Size  Location     Type
   353 ;;  ch              1    wreg     unsigned char 
   354 ;; Auto vars:     Size  Location     Type
   355 ;;  ch              1    0[COMRAM] unsigned char 
   356 ;; Return value:  Size  Location     Type
   357 ;;                  1    wreg      void 
   358 ;; Registers used:
   359 ;;		wreg
   360 ;; Tracked objects:
   361 ;;		On entry : 0/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   368 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   369 ;;Total ram usage:        1 bytes
   370 ;; Hardware stack levels used:    1
   371 ;; This function calls:
   372 ;;		Nothing
   373 ;; This function is called by:
   374 ;;		_send_data
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           	psect	text2
   379  00FE46                     __ptext2:
   380                           	opt callstack 0
   381  00FE46                     _USARTWriteRaw:
   382                           	opt callstack 29
   383                           
   384                           ;incstack = 0
   385                           ;USARTWriteRaw@ch stored from wreg
   386  00FE46  6E17               	movwf	USARTWriteRaw@ch,c
   387  00FE48                     
   388                           ;usart.c: 79: void USARTWriteRaw(char ch);usart.c: 80: {;usart.c: 81:   while(!PIR1bits.
      +                          TXIF);
   389  00FE48  A89E               	btfss	3998,4,c	;volatile
   390  00FE4A  D7FE               	goto	l1011
   391                           
   392                           ;usart.c: 83:   TXREG=ch;
   393  00FE4C  C017  FFAD         	movff	USARTWriteRaw@ch,4013	;volatile
   394  00FE50  0012               	return		;funcret
   395  00FE52                     __end_of_USARTWriteRaw:
   396                           	opt callstack 0
   397                           
   398 ;; *************** function _read_Uout *****************
   399 ;; Defined at:
   400 ;;		line 54 in file "main.c"
   401 ;; Parameters:    Size  Location     Type
   402 ;;		None
   403 ;; Auto vars:     Size  Location     Type
   404 ;;		None
   405 ;; Return value:  Size  Location     Type
   406 ;;                  1    wreg      void 
   407 ;; Registers used:
   408 ;;		wreg, status,2
   409 ;; Tracked objects:
   410 ;;		On entry : 0/0
   411 ;;		On exit  : 0/0
   412 ;;		Unchanged: 0/0
   413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   418 ;;Total ram usage:        0 bytes
   419 ;; Hardware stack levels used:    1
   420 ;; This function calls:
   421 ;;		Nothing
   422 ;; This function is called by:
   423 ;;		_main
   424 ;; This function uses a non-reentrant model
   425 ;;
   426                           
   427                           	psect	text3
   428  00FE64                     __ptext3:
   429                           	opt callstack 0
   430  00FE64                     _read_Uout:
   431                           	opt callstack 30
   432                           
   433                           ;main.c: 56:     ADCON0=0b00000011;
   434                           
   435                           ;incstack = 0
   436  00FE64  0E03               	movlw	3
   437  00FE66  6EC2               	movwf	4034,c	;volatile
   438                           
   439                           ;main.c: 57:     _delay((unsigned long)((100)*(64000000/4000000.0)));
   440  00FE68  0EE4               	movlw	228
   441  00FE6A                     u597:
   442  00FE6A  D000               	nop2	
   443  00FE6C  D000               	nop2	
   444  00FE6E  2EE8               	decfsz	wreg,f,c
   445  00FE70  D7FC               	bra	u597
   446  00FE72  D000               	nop2	
   447  00FE74  D000               	nop2	
   448                           
   449                           ;main.c: 58:     ADCON0bits.GO=1;
   450  00FE76  82C2               	bsf	4034,1,c	;volatile
   451  00FE78                     l113:
   452  00FE78  B2C2               	btfsc	4034,1,c	;volatile
   453  00FE7A  D7FE               	goto	l113
   454                           
   455                           ;main.c: 60:     rez_adc=ADRESH;
   456  00FE7C  CFC4 F013          	movff	4036,_rez_adc	;volatile
   457  00FE80  6A14               	clrf	_rez_adc+1,c
   458  00FE82  0012               	return		;funcret
   459  00FE84                     __end_of_read_Uout:
   460                           	opt callstack 0
   461                           
   462 ;; *************** function _config *****************
   463 ;; Defined at:
   464 ;;		line 14 in file "config.c"
   465 ;; Parameters:    Size  Location     Type
   466 ;;		None
   467 ;; Auto vars:     Size  Location     Type
   468 ;;		None
   469 ;; Return value:  Size  Location     Type
   470 ;;                  1    wreg      void 
   471 ;; Registers used:
   472 ;;		wreg, status,2, status,0, cstack
   473 ;; Tracked objects:
   474 ;;		On entry : 0/0
   475 ;;		On exit  : 0/0
   476 ;;		Unchanged: 0/0
   477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   480 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   481 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   482 ;;Total ram usage:        2 bytes
   483 ;; Hardware stack levels used:    1
   484 ;; Hardware stack levels required when called:    1
   485 ;; This function calls:
   486 ;;		_USARTInit
   487 ;; This function is called by:
   488 ;;		_main
   489 ;; This function uses a non-reentrant model
   490 ;;
   491                           
   492                           	psect	text4
   493  00FF7E                     __ptext4:
   494                           	opt callstack 0
   495  00FF7E                     _config:
   496                           	opt callstack 29
   497                           
   498                           ;config.c: 17:     OSCCONbits.IRCF0=1;
   499                           
   500                           ;incstack = 0
   501  00FF7E  88D3               	bsf	4051,4,c	;volatile
   502                           
   503                           ;config.c: 18:     OSCCONbits.IRCF1=1;
   504  00FF80  8AD3               	bsf	4051,5,c	;volatile
   505                           
   506                           ;config.c: 19:     OSCCONbits.IRCF2=1;
   507  00FF82  8CD3               	bsf	4051,6,c	;volatile
   508                           
   509                           ;config.c: 20:     OSCTUNEbits.PLLEN = 1;
   510  00FF84  8C9B               	bsf	3995,6,c	;volatile
   511                           
   512                           ;config.c: 21:     INTCONbits.GIE=0;
   513  00FF86  9EF2               	bcf	4082,7,c	;volatile
   514                           
   515                           ;config.c: 23:     ANSELA=0X00;
   516  00FF88  0E00               	movlw	0
   517  00FF8A  010F               	movlb	15	; () banked
   518  00FF8C  6F38               	movwf	56,b	;volatile
   519                           
   520                           ;config.c: 24:     ANSELB=0X00;
   521  00FF8E  0E00               	movlw	0
   522  00FF90  6F39               	movwf	57,b	;volatile
   523                           
   524                           ;config.c: 25:     ANSELC=0X00;
   525  00FF92  0E00               	movlw	0
   526  00FF94  6F3A               	movwf	58,b	;volatile
   527                           
   528                           ;config.c: 26:     ANSELD=0X00;
   529  00FF96  0E00               	movlw	0
   530  00FF98  6F3B               	movwf	59,b	;volatile
   531                           
   532                           ;config.c: 27:     ANSELE=0X00;
   533  00FF9A  0E00               	movlw	0
   534  00FF9C  6F3C               	movwf	60,b	;volatile
   535                           
   536                           ;config.c: 28:     TRISA=0X00;
   537  00FF9E  0E00               	movlw	0
   538  00FFA0  6E92               	movwf	3986,c	;volatile
   539                           
   540                           ;config.c: 29:     TRISB=0X00;
   541  00FFA2  0E00               	movlw	0
   542  00FFA4  6E93               	movwf	3987,c	;volatile
   543                           
   544                           ;config.c: 30:     TRISC=0X00;
   545  00FFA6  0E00               	movlw	0
   546  00FFA8  6E94               	movwf	3988,c	;volatile
   547                           
   548                           ;config.c: 31:     TRISD=0X00;
   549  00FFAA  0E00               	movlw	0
   550  00FFAC  6E95               	movwf	3989,c	;volatile
   551                           
   552                           ;config.c: 32:     TRISE=0X00;
   553  00FFAE  0E00               	movlw	0
   554  00FFB0  6E96               	movwf	3990,c	;volatile
   555                           
   556                           ;config.c: 33:     PORTA=0X00;
   557  00FFB2  0E00               	movlw	0
   558  00FFB4  6E80               	movwf	3968,c	;volatile
   559                           
   560                           ;config.c: 34:     PORTB=0X00;
   561  00FFB6  0E00               	movlw	0
   562  00FFB8  6E81               	movwf	3969,c	;volatile
   563                           
   564                           ;config.c: 35:     PORTC=0X00;
   565  00FFBA  0E00               	movlw	0
   566  00FFBC  6E82               	movwf	3970,c	;volatile
   567                           
   568                           ;config.c: 36:     PORTD=0X00;
   569  00FFBE  0E00               	movlw	0
   570  00FFC0  6E83               	movwf	3971,c	;volatile
   571                           
   572                           ;config.c: 37:     PORTE=0X00;
   573  00FFC2  0E00               	movlw	0
   574  00FFC4  6E84               	movwf	3972,c	;volatile
   575                           
   576                           ;config.c: 38:     LATA=0X00;
   577  00FFC6  0E00               	movlw	0
   578  00FFC8  6E89               	movwf	3977,c	;volatile
   579                           
   580                           ;config.c: 39:     LATB=0X00;
   581  00FFCA  0E00               	movlw	0
   582  00FFCC  6E8A               	movwf	3978,c	;volatile
   583                           
   584                           ;config.c: 40:     LATC=0X00;
   585  00FFCE  0E00               	movlw	0
   586  00FFD0  6E8B               	movwf	3979,c	;volatile
   587                           
   588                           ;config.c: 41:     LATD=0X00;
   589  00FFD2  0E00               	movlw	0
   590  00FFD4  6E8C               	movwf	3980,c	;volatile
   591                           
   592                           ;config.c: 42:     LATE=0X00;
   593  00FFD6  0E00               	movlw	0
   594  00FFD8  6E8D               	movwf	3981,c	;volatile
   595                           
   596                           ; BSR set to: 15
   597                           ;config.c: 44:     _delay((unsigned long)((100)*(64000000/4000.0)));
   598  00FFDA  0E09               	movlw	9
   599  00FFDC  6E1C               	movwf	(??_config+1)& (0+255),c
   600  00FFDE  0E1E               	movlw	30
   601  00FFE0  6E1B               	movwf	??_config& (0+255),c
   602  00FFE2  0EE4               	movlw	228
   603  00FFE4                     u607:
   604  00FFE4  2EE8               	decfsz	wreg,f,c
   605  00FFE6  D7FE               	bra	u607
   606  00FFE8  2E1B               	decfsz	??_config& (0+255),f,c
   607  00FFEA  D7FC               	bra	u607
   608  00FFEC  2E1C               	decfsz	(??_config+1)& (0+255),f,c
   609  00FFEE  D7FA               	bra	u607
   610  00FFF0  D000               	nop2	
   611                           
   612                           ;config.c: 45:     USARTInit(115200);
   613  00FFF2  0EC2               	movlw	194
   614  00FFF4  6E18               	movwf	USARTInit@baud_rate+1,c
   615  00FFF6  0E00               	movlw	0
   616  00FFF8  6E17               	movwf	USARTInit@baud_rate,c
   617  00FFFA  EC82  F07F         	call	_USARTInit	;wreg free
   618  00FFFE  0012               	return		;funcret
   619  010000                     __end_of_config:
   620                           	opt callstack 0
   621                           
   622 ;; *************** function _USARTInit *****************
   623 ;; Defined at:
   624 ;;		line 31 in file "usart.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;  baud_rate       2    0[COMRAM] unsigned short 
   627 ;; Auto vars:     Size  Location     Type
   628 ;;		None
   629 ;; Return value:  Size  Location     Type
   630 ;;                  1    wreg      void 
   631 ;; Registers used:
   632 ;;		wreg, status,2, status,0
   633 ;; Tracked objects:
   634 ;;		On entry : 0/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   638 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   640 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   641 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   642 ;;Total ram usage:        4 bytes
   643 ;; Hardware stack levels used:    1
   644 ;; This function calls:
   645 ;;		Nothing
   646 ;; This function is called by:
   647 ;;		_config
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651                           	psect	text5
   652  00FF04                     __ptext5:
   653                           	opt callstack 0
   654  00FF04                     _USARTInit:
   655                           	opt callstack 29
   656                           
   657                           ;usart.c: 31: void USARTInit(uint16_t baud_rate);usart.c: 32: {;usart.c: 34:     UQFront
      +                          =UQEnd=-1;
   658                           
   659                           ;incstack = 0
   660  00FF04  6815               	setf	_UQEnd,c	;volatile
   661  00FF06  6816               	setf	_UQFront,c	;volatile
   662                           
   663                           ;usart.c: 37:     switch(baud_rate)
   664  00FF08  D009               	goto	l1395
   665  00FF0A                     l1385:
   666                           
   667                           ;usart.c: 40:         SPBRG1=103;
   668  00FF0A  0E67               	movlw	103
   669  00FF0C  D005               	goto	L3
   670  00FF0E                     l1387:
   671                           
   672                           ;usart.c: 43:         SPBRG1=207;
   673  00FF0E  0ECF               	movlw	207
   674  00FF10  D003               	goto	L3
   675  00FF12                     l1389:
   676                           
   677                           ;usart.c: 46:         SPBRG1=68;
   678  00FF12  0E44               	movlw	68
   679  00FF14  D001               	goto	L3
   680  00FF16                     l1391:
   681                           
   682                           ;usart.c: 49:         SPBRG1=34;
   683  00FF16  0E22               	movlw	34
   684  00FF18                     L3:
   685  00FF18  6EAF               	movwf	4015,c	;volatile
   686                           
   687                           ;usart.c: 50:         break;
   688  00FF1A  D025               	goto	l165
   689  00FF1C                     l1395:
   690  00FF1C  C017  F019         	movff	USARTInit@baud_rate,??_USARTInit
   691  00FF20  C018  F01A         	movff	USARTInit@baud_rate+1,??_USARTInit+1
   692                           
   693                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 4 sub-sw
      +                          itches
   694                           ; Switch size 1, requested type "simple"
   695                           ; Number of cases is 4, Range of values is 37 to 225
   696                           ; switch strategies available:
   697                           ; Name         Instructions Cycles
   698                           ; simple_byte           13     7 (average)
   699                           ;	Chosen strategy is simple_byte
   700  00FF24  501A               	movf	??_USARTInit+1,w,c
   701  00FF26  0A25               	xorlw	37	; case 37
   702  00FF28  B4D8               	btfsc	status,2,c
   703  00FF2A  D00A               	goto	l1583
   704  00FF2C  0A6E               	xorlw	110	; case 75
   705  00FF2E  B4D8               	btfsc	status,2,c
   706  00FF30  D00C               	goto	l1585
   707  00FF32  0A89               	xorlw	137	; case 194
   708  00FF34  B4D8               	btfsc	status,2,c
   709  00FF36  D00E               	goto	l1587
   710  00FF38  0A23               	xorlw	35	; case 225
   711  00FF3A  B4D8               	btfsc	status,2,c
   712  00FF3C  D010               	goto	l1589
   713  00FF3E  D013               	goto	l165
   714  00FF40                     l1583:
   715                           
   716                           ; Switch size 1, requested type "simple"
   717                           ; Number of cases is 1, Range of values is 128 to 128
   718                           ; switch strategies available:
   719                           ; Name         Instructions Cycles
   720                           ; simple_byte            4     3 (average)
   721                           ;	Chosen strategy is simple_byte
   722  00FF40  5019               	movf	??_USARTInit,w,c
   723  00FF42  0A80               	xorlw	128	; case 128
   724  00FF44  B4D8               	btfsc	status,2,c
   725  00FF46  D7E1               	goto	l1385
   726  00FF48  D00E               	goto	l165
   727  00FF4A                     l1585:
   728                           
   729                           ; Switch size 1, requested type "simple"
   730                           ; Number of cases is 1, Range of values is 0 to 0
   731                           ; switch strategies available:
   732                           ; Name         Instructions Cycles
   733                           ; simple_byte            4     3 (average)
   734                           ;	Chosen strategy is simple_byte
   735  00FF4A  5019               	movf	??_USARTInit,w,c
   736  00FF4C  0A00               	xorlw	0	; case 0
   737  00FF4E  B4D8               	btfsc	status,2,c
   738  00FF50  D7DE               	goto	l1387
   739  00FF52  D009               	goto	l165
   740  00FF54                     l1587:
   741                           
   742                           ; Switch size 1, requested type "simple"
   743                           ; Number of cases is 1, Range of values is 0 to 0
   744                           ; switch strategies available:
   745                           ; Name         Instructions Cycles
   746                           ; simple_byte            4     3 (average)
   747                           ;	Chosen strategy is simple_byte
   748  00FF54  5019               	movf	??_USARTInit,w,c
   749  00FF56  0A00               	xorlw	0	; case 0
   750  00FF58  B4D8               	btfsc	status,2,c
   751  00FF5A  D7DD               	goto	l1391
   752  00FF5C  D004               	goto	l165
   753  00FF5E                     l1589:
   754                           
   755                           ; Switch size 1, requested type "simple"
   756                           ; Number of cases is 1, Range of values is 0 to 0
   757                           ; switch strategies available:
   758                           ; Name         Instructions Cycles
   759                           ; simple_byte            4     3 (average)
   760                           ;	Chosen strategy is simple_byte
   761  00FF5E  5019               	movf	??_USARTInit,w,c
   762  00FF60  0A00               	xorlw	0	; case 0
   763  00FF62  B4D8               	btfsc	status,2,c
   764  00FF64  D7D6               	goto	l1389
   765  00FF66                     l165:
   766                           
   767                           ;usart.c: 53:     TXSTA1bits.TX9=0;
   768  00FF66  9CAC               	bcf	4012,6,c	;volatile
   769                           
   770                           ;usart.c: 54:     TXSTA1bits.TXEN=1;
   771  00FF68  8AAC               	bsf	4012,5,c	;volatile
   772                           
   773                           ;usart.c: 55:     TXSTA1bits.SYNC=0;
   774  00FF6A  98AC               	bcf	4012,4,c	;volatile
   775                           
   776                           ;usart.c: 56:     TXSTA1bits.BRGH=1;
   777  00FF6C  84AC               	bsf	4012,2,c	;volatile
   778                           
   779                           ;usart.c: 59:     RCSTA1bits.SPEN=1;
   780  00FF6E  8EAB               	bsf	4011,7,c	;volatile
   781                           
   782                           ;usart.c: 60:     RCSTA1bits.RX9=0;
   783  00FF70  9CAB               	bcf	4011,6,c	;volatile
   784                           
   785                           ;usart.c: 61:     RCSTA1bits.CREN=1;
   786  00FF72  88AB               	bsf	4011,4,c	;volatile
   787                           
   788                           ;usart.c: 62:     RCSTA1bits.ADDEN=0;
   789  00FF74  96AB               	bcf	4011,3,c	;volatile
   790                           
   791                           ;usart.c: 66:     PIE1bits.RC1IE=1;
   792  00FF76  8A9D               	bsf	3997,5,c	;volatile
   793                           
   794                           ;usart.c: 67:     PEIE=1;
   795  00FF78  8CF2               	bsf	4082,6,c	;volatile
   796                           
   797                           ;usart.c: 69:     (INTCONbits.GIE = 1);
   798  00FF7A  8EF2               	bsf	4082,7,c	;volatile
   799  00FF7C  0012               	return		;funcret
   800  00FF7E                     __end_of_USARTInit:
   801                           	opt callstack 0
   802                           
   803 ;; *************** function _adc_config *****************
   804 ;; Defined at:
   805 ;;		line 50 in file "config.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;		None
   808 ;; Auto vars:     Size  Location     Type
   809 ;;		None
   810 ;; Return value:  Size  Location     Type
   811 ;;                  1    wreg      void 
   812 ;; Registers used:
   813 ;;		wreg, status,2
   814 ;; Tracked objects:
   815 ;;		On entry : 0/0
   816 ;;		On exit  : 0/0
   817 ;;		Unchanged: 0/0
   818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   823 ;;Total ram usage:        0 bytes
   824 ;; Hardware stack levels used:    1
   825 ;; This function calls:
   826 ;;		Nothing
   827 ;; This function is called by:
   828 ;;		_main
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           	psect	text6
   833  00FE52                     __ptext6:
   834                           	opt callstack 0
   835  00FE52                     _adc_config:
   836                           	opt callstack 30
   837                           
   838                           ;config.c: 53:     TRISAbits.RA0=1;
   839                           
   840                           ;incstack = 0
   841  00FE52  8092               	bsf	3986,0,c	;volatile
   842                           
   843                           ;config.c: 54:     ANSELAbits.ANSA0=1;
   844  00FE54  010F               	movlb	15	; () banked
   845  00FE56  8138               	bsf	56,0,b	;volatile
   846                           
   847                           ; BSR set to: 15
   848                           ;config.c: 55:     ADCON1=0b10000000;
   849  00FE58  0E80               	movlw	128
   850  00FE5A  6EC1               	movwf	4033,c	;volatile
   851                           
   852                           ;config.c: 56:     ADCON2=0b00111110;
   853  00FE5C  0E3E               	movlw	62
   854  00FE5E  6EC0               	movwf	4032,c	;volatile
   855                           
   856                           ; BSR set to: 15
   857                           ;config.c: 57:     ADCON2bits.ADFM=0;
   858  00FE60  9EC0               	bcf	4032,7,c	;volatile
   859                           
   860                           ; BSR set to: 15
   861  00FE62  0012               	return		;funcret
   862  00FE64                     __end_of_adc_config:
   863                           	opt callstack 0
   864  0000                     
   865                           	psect	rparam
   866  0000                     tosu	equ	0xFFF
   867                           tosh	equ	0xFFE
   868                           tosl	equ	0xFFD
   869                           stkptr	equ	0xFFC
   870                           pclatu	equ	0xFFB
   871                           pclath	equ	0xFFA
   872                           pcl	equ	0xFF9
   873                           tblptru	equ	0xFF8
   874                           tblptrh	equ	0xFF7
   875                           tblptrl	equ	0xFF6
   876                           tablat	equ	0xFF5
   877                           prodh	equ	0xFF4
   878                           prodl	equ	0xFF3
   879                           indf0	equ	0xFEF
   880                           postinc0	equ	0xFEE
   881                           postdec0	equ	0xFED
   882                           preinc0	equ	0xFEC
   883                           plusw0	equ	0xFEB
   884                           fsr0h	equ	0xFEA
   885                           fsr0l	equ	0xFE9
   886                           wreg	equ	0xFE8
   887                           indf1	equ	0xFE7
   888                           postinc1	equ	0xFE6
   889                           postdec1	equ	0xFE5
   890                           preinc1	equ	0xFE4
   891                           plusw1	equ	0xFE3
   892                           fsr1h	equ	0xFE2
   893                           fsr1l	equ	0xFE1
   894                           bsr	equ	0xFE0
   895                           indf2	equ	0xFDF
   896                           postinc2	equ	0xFDE
   897                           postdec2	equ	0xFDD
   898                           preinc2	equ	0xFDC
   899                           plusw2	equ	0xFDB
   900                           fsr2h	equ	0xFDA
   901                           fsr2l	equ	0xFD9
   902                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         86
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      32
    BANK0           160      0      64
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_config
    _send_data->_USARTWriteRaw
    _config->_USARTInit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     159
                                              6 COMRAM     4     4      0
                         _adc_config
                             _config
                          _read_Uout
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            0     0      0      15
                      _USARTWriteRaw
 ---------------------------------------------------------------------------------
 (2) _USARTWriteRaw                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _read_Uout                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config                                               2     2      0      98
                                              4 COMRAM     2     2      0
                          _USARTInit
 ---------------------------------------------------------------------------------
 (2) _USARTInit                                            4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _adc_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_config
   _config
     _USARTInit
   _read_Uout
   _send_data
     _USARTWriteRaw

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      40       5       40.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A      20       1       33.7%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      60      12        0.0%
DATA                 0      0      60       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Apr 08 19:18:32 2019

     USARTInit@baud_rate 0017             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_LVP$ON 000000  
                    l113 FE78                      l165 FF66             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000                      u460 FED2                      u470 FEF4  
                    u607 FFE4                      u488 FEF6                      u587 FEDC  
                    u597 FE6A                      wreg 000FE8               _TXSTA1bits 000FAC  
             _TXSTA2bits 000F72                     l1011 FE48                     l1445 FEAE  
                   l1391 FF16                     l1385 FF0A                     l1449 FEB6  
                   l1387 FF0E                     l1395 FF1C                     l1389 FF12  
                   l1583 FF40                     l1585 FF4A                     l1587 FF54  
                   l1589 FF5E                     _LATA 000F89                     _LATB 000F8A  
                   _LATC 000F8B                     _LATD 000F8C                     _LATE 000F8D  
                   _PEIE 007F96          USARTWriteRaw@ch 0017                     _main FEA6  
          __CFG_BORV$190 000000                     start 0000           ?_USARTWriteRaw 0017  
          __CFG_IESO$OFF 000000             ___param_bank 000000             _BAUDCON2bits 000F70  
                  ?_main 0017                    _RCREG 000FAE                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
                  _TXREG 000FAD                    _UQEnd 0015            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
     __CFG_MCLRE$EXTMCLR 000000                    main@i 001F                    _str_i 0001  
         __CFG_BOREN$OFF 000000       __size_of_USARTInit 007A                    status 000FD8  
         __CFG_HFOFST$ON 000000          __initialization FE84             __end_of_main FF04  
                 ??_main 001D            __activetblptr 000002                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _ADRESH 000FC4  
                 _ANSELA 000F38                   _ANSELB 000F39                   _ANSELC 000F3A  
                 _ANSELD 000F3B                   _ANSELE 000F3C           __CFG_WDTEN$OFF 000000  
                 _SPBRG1 000FAF                   _SPBRG2 000F75          ??_USARTWriteRaw 0017  
                 _TXREG2 000F73                   _URBuff 0060           __CFG_XINST$OFF 000000  
                 _config FF7E                   clear_0 FE8A                   clear_1 FE96  
      __end_of_USARTInit FF7E                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization FE9C          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0017               _adc_config FE52               __pbssBANK0 0060  
        __CFG_PLLCFG$OFF 000000       __size_of_read_Uout 0020       __CFG_CCP2MX$PORTC1 000000  
     __CFG_CCP3MX$PORTB5 000000                  ?_config 0017       __size_of_send_data 0008  
                _SPBRGH2 000F76       USARTWriteInt@F6046 000E                  _UQFront 0016  
        __CFG_PWRTEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
            ?_adc_config 0017          __size_of_config 0082          __CFG_STVREN$OFF 000000  
                __pcinit FE84                  __ramtop 1000                  __ptext0 FEA6  
                __ptext1 FE3E                  __ptext2 FE46                  __ptext3 FE64  
                __ptext4 FF7E                  __ptext5 FF04                  __ptext6 FE52  
      __end_of_read_Uout FE84                  _rez_adc 0013     end_of_initialization FE9C  
      __end_of_send_data FE46            __Lmediumconst 0000                  postinc0 000FEE  
              _PORTBbits 000F81                _USARTInit FF04                _TRISAbits 000F92  
              _TRISDbits 000F95      __size_of_adc_config 0012    __end_of_USARTWriteRaw FE52  
         __end_of_config 0000      start_initialization FE84               ?_USARTInit 0017  
               ??_config 001B              __pbssCOMRAM 0001             ??_adc_config 0017  
       __CFG_PRICLKEN$ON 000000      USART2WriteInt@F6066 0009              ??_USARTInit 0019  
              _read_Uout FE64       __end_of_adc_config FE64                 _LATDbits 000F8C  
               _PIE1bits 000F9D                _send_data FE3E                 _PIE3bits 000FA3  
               _PIR1bits 000F9E                 _PIR3bits 000FA4         __CFG_WDTPS$32768 000000  
             _ADCON0bits 000FC2               _ADCON2bits 000FC0               ?_read_Uout 0017  
             ?_send_data 0017                 __Hrparam 0000                 __Lrparam 0000  
      __CFG_P2BMX$PORTD2 000000               _ANSELAbits 000F38            __size_of_main 005E  
            _OSCTUNEbits 000F9B               _INTCONbits 000FF2   __size_of_USARTWriteRaw 000C  
            ??_read_Uout 0017               _RCSTA1bits 000FAB              ??_send_data 0018  
             _RCSTA2bits 000F71               _OSCCONbits 000FD3        __CFG_T3CMX$PORTC0 000000  
      __CFG_FOSC$INTIO67 000000            _USARTWriteRaw FE46  
