

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Apr 06 10:54:12 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31  0000                     
    32                           ; Version 2.05
    33                           ; Generated 20/12/2018 GMT
    34                           ; 
    35                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F46K22 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     _ANSELE	set	3900
    67  0000                     _ANSELD	set	3899
    68  0000                     _ANSELC	set	3898
    69  0000                     _ANSELB	set	3897
    70  0000                     _ANSELA	set	3896
    71  0000                     _TXREG2	set	3955
    72  0000                     _PIR3bits	set	4004
    73  0000                     _PIE3bits	set	4003
    74  0000                     _RCSTA2bits	set	3953
    75  0000                     _TXSTA2bits	set	3954
    76  0000                     _SPBRG2	set	3957
    77  0000                     _SPBRGH2	set	3958
    78  0000                     _BAUDCON2bits	set	3952
    79  0000                     _TRISDbits	set	3989
    80  0000                     _RCREG	set	4014
    81  0000                     _PORTBbits	set	3969
    82  0000                     _TXREG	set	4013
    83  0000                     _PIR1bits	set	3998
    84  0000                     _PIE1bits	set	3997
    85  0000                     _RCSTA1bits	set	4011
    86  0000                     _TXSTA1bits	set	4012
    87  0000                     _SPBRG1	set	4015
    88  0000                     _SSPBUF	set	4041
    89  0000                     _SSP1BUF	set	4041
    90  0000                     _SSP1CON2bits	set	4037
    91  0000                     _SSP1STAT	set	4039
    92  0000                     _SSP1ADD	set	4040
    93  0000                     _SSP1CON2	set	4037
    94  0000                     _SSP1CON1	set	4038
    95  0000                     _TRISCbits	set	3988
    96  0000                     _LATE	set	3981
    97  0000                     _LATD	set	3980
    98  0000                     _LATC	set	3979
    99  0000                     _LATB	set	3978
   100  0000                     _LATA	set	3977
   101  0000                     _PORTE	set	3972
   102  0000                     _PORTD	set	3971
   103  0000                     _PORTC	set	3970
   104  0000                     _PORTB	set	3969
   105  0000                     _PORTA	set	3968
   106  0000                     _TRISE	set	3990
   107  0000                     _TRISD	set	3989
   108  0000                     _TRISC	set	3988
   109  0000                     _TRISB	set	3987
   110  0000                     _TRISA	set	3986
   111  0000                     _INTCONbits	set	4082
   112  0000                     _OSCTUNEbits	set	3995
   113  0000                     _OSCCONbits	set	4051
   114  0000                     _PEIE	set	32662
   115                           
   116                           	psect	smallconst
   117  001000                     __psmallconst:
   118                           	opt callstack 0
   119  001000  00                 	db	0
   120  001001                     STR_3:
   121  001001  48                 	db	72	;'H'
   122  001002  65                 	db	101	;'e'
   123  001003  6C                 	db	108	;'l'
   124  001004  6C                 	db	108	;'l'
   125  001005  6F                 	db	111	;'o'
   126  001006  0D                 	db	13
   127  001007  0A                 	db	10
   128  001008  00                 	db	0
   129  001009                     STR_2:
   130  001009  54                 	db	84	;'T'
   131  00100A  65                 	db	101	;'e'
   132  00100B  73                 	db	115	;'s'
   133  00100C  74                 	db	116	;'t'
   134  00100D  31                 	db	49	;'1'
   135  00100E  00                 	db	0
   136  00100F                     STR_1:
   137  00100F  54                 	db	84	;'T'
   138  001010  65                 	db	101	;'e'
   139  001011  73                 	db	115	;'s'
   140  001012  74                 	db	116	;'t'
   141  001013  00                 	db	0
   142                           
   143                           ; #config settings
   144  001014  00                 	db	0	; dummy byte at the end
   145  0000                     
   146                           	psect	cinit
   147  001478                     __pcinit:
   148                           	opt callstack 0
   149  001478                     start_initialization:
   150                           	opt callstack 0
   151  001478                     __initialization:
   152                           	opt callstack 0
   153                           
   154                           ; Clear objects allocated to BANK0 (64 bytes)
   155  001478  EE00  F060         	lfsr	0,__pbssBANK0
   156  00147C  0E40               	movlw	64
   157  00147E                     clear_0:
   158  00147E  6AEE               	clrf	postinc0,c
   159  001480  06E8               	decf	wreg,f,c
   160  001482  E1FD               	bnz	clear_0
   161                           
   162                           ; Clear objects allocated to COMRAM (14 bytes)
   163  001484  EE00  F01A         	lfsr	0,__pbssCOMRAM
   164  001488  0E0E               	movlw	14
   165  00148A                     clear_1:
   166  00148A  6AEE               	clrf	postinc0,c
   167  00148C  06E8               	decf	wreg,f,c
   168  00148E  E1FD               	bnz	clear_1
   169  001490                     end_of_initialization:
   170                           	opt callstack 0
   171  001490                     __end_of__initialization:
   172                           	opt callstack 0
   173  001490  0E00               	movlw	low (__Lmediumconst shr (0+16))
   174  001492  6EF8               	movwf	tblptru,c
   175  001494  0100               	movlb	0
   176  001496  EF5E  F009         	goto	_main	;jump to C main() function
   177                           
   178                           	psect	bssCOMRAM
   179  00001A                     __pbssCOMRAM:
   180                           	opt callstack 0
   181  00001A                     	ds	5
   182  00001F                     	ds	5
   183  000024                     _data:
   184                           	opt callstack 0
   185  000024                     	ds	2
   186  000026                     _UQEnd:
   187                           	opt callstack 0
   188  000026                     	ds	1
   189  000027                     _UQFront:
   190                           	opt callstack 0
   191  000027                     	ds	1
   192                           
   193                           	psect	bssBANK0
   194  000060                     __pbssBANK0:
   195                           	opt callstack 0
   196  000060                     _URBuff:
   197                           	opt callstack 0
   198  000060                     	ds	64
   199                           
   200                           	psect	cstackCOMRAM
   201  000001                     __pcstackCOMRAM:
   202                           	opt callstack 0
   203  000001                     ??_I2C_Master_Wait:
   204  000001                     ?___lldiv:
   205                           	opt callstack 0
   206  000001                     USARTWriteChar@ch:
   207                           	opt callstack 0
   208  000001                     USARTInit@baud_rate:
   209                           	opt callstack 0
   210  000001                     ___lldiv@dividend:
   211                           	opt callstack 0
   212                           
   213                           ; 4 bytes @ 0x0
   214  000001                     	ds	1
   215  000002                     I2C_Write_Display@d:
   216                           	opt callstack 0
   217  000002                     USARTWriteString@str:
   218                           	opt callstack 0
   219                           
   220                           ; 2 bytes @ 0x1
   221  000002                     	ds	1
   222  000003                     ??_USARTInit:
   223                           
   224                           ; 1 bytes @ 0x2
   225  000003                     	ds	1
   226  000004                     Lcd_Port@data:
   227                           	opt callstack 0
   228                           
   229                           ; 1 bytes @ 0x3
   230  000004                     	ds	1
   231  000005                     ??_Lcd_Cmd:
   232  000005                     Lcd_Write_Char@a:
   233                           	opt callstack 0
   234  000005                     ___lldiv@divisor:
   235                           	opt callstack 0
   236                           
   237                           ; 4 bytes @ 0x4
   238  000005                     	ds	1
   239  000006                     Lcd_Write_Char@y:
   240                           	opt callstack 0
   241                           
   242                           ; 1 bytes @ 0x5
   243  000006                     	ds	1
   244  000007                     Lcd_Write_Char@temp:
   245                           	opt callstack 0
   246                           
   247                           ; 1 bytes @ 0x6
   248  000007                     	ds	1
   249  000008                     Lcd_Cmd@buff:
   250                           	opt callstack 0
   251  000008                     Lcd_Write_String@a:
   252                           	opt callstack 0
   253                           
   254                           ; 2 bytes @ 0x7
   255  000008                     	ds	1
   256  000009                     ___lldiv@quotient:
   257                           	opt callstack 0
   258                           
   259                           ; 4 bytes @ 0x8
   260  000009                     	ds	1
   261  00000A                     ??_Lcd_Write_String:
   262  00000A                     Lcd_Cmd@a:
   263                           	opt callstack 0
   264                           
   265                           ; 1 bytes @ 0x9
   266  00000A                     	ds	1
   267  00000B                     ??_Lcd_Init:
   268  00000B                     Lcd_Set_Cursor@b:
   269                           	opt callstack 0
   270                           
   271                           ; 1 bytes @ 0xA
   272  00000B                     	ds	1
   273  00000C                     Lcd_Set_Cursor@a:
   274                           	opt callstack 0
   275  00000C                     Lcd_Write_String@i:
   276                           	opt callstack 0
   277                           
   278                           ; 2 bytes @ 0xB
   279  00000C                     	ds	1
   280  00000D                     Lcd_Set_Cursor@z:
   281                           	opt callstack 0
   282  00000D                     ___lldiv@counter:
   283                           	opt callstack 0
   284                           
   285                           ; 1 bytes @ 0xC
   286  00000D                     	ds	1
   287  00000E                     Lcd_Set_Cursor@y:
   288                           	opt callstack 0
   289  00000E                     I2C_Master_Init@c:
   290                           	opt callstack 0
   291                           
   292                           ; 4 bytes @ 0xD
   293  00000E                     	ds	1
   294  00000F                     Lcd_Set_Cursor@temp:
   295                           	opt callstack 0
   296                           
   297                           ; 1 bytes @ 0xE
   298  00000F                     	ds	3
   299  000012                     ??_I2C_Master_Init:
   300                           
   301                           ; 1 bytes @ 0x11
   302  000012                     	ds	4
   303  000016                     ??_config:
   304                           
   305                           ; 1 bytes @ 0x15
   306  000016                     	ds	2
   307  000018                     ??_main:
   308                           
   309                           ; 1 bytes @ 0x17
   310  000018                     	ds	2
   311                           
   312 ;;
   313 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   314 ;;
   315 ;; *************** function _main *****************
   316 ;; Defined at:
   317 ;;		line 16 in file "main.c"
   318 ;; Parameters:    Size  Location     Type
   319 ;;		None
   320 ;; Auto vars:     Size  Location     Type
   321 ;;		None
   322 ;; Return value:  Size  Location     Type
   323 ;;                  1    wreg      void 
   324 ;; Registers used:
   325 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   326 ;; Tracked objects:
   327 ;;		On entry : 0/0
   328 ;;		On exit  : 0/0
   329 ;;		Unchanged: 0/0
   330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   333 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   334 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   335 ;;Total ram usage:        2 bytes
   336 ;; Hardware stack levels required when called:    6
   337 ;; This function calls:
   338 ;;		_Lcd_Set_Cursor
   339 ;;		_Lcd_Write_String
   340 ;;		_USARTWriteString
   341 ;;		_config
   342 ;; This function is called by:
   343 ;;		Startup code after reset
   344 ;; This function uses a non-reentrant model
   345 ;;
   346                           
   347                           	psect	text0
   348  0012BC                     __ptext0:
   349                           	opt callstack 0
   350  0012BC                     _main:
   351                           	opt callstack 25
   352                           
   353                           ;main.c: 17:     config();
   354                           
   355                           ;incstack = 0
   356  0012BC  EC0B  F008         	call	_config	;wreg free
   357  0012C0                     l1837:
   358                           
   359                           ;main.c: 21:     { Lcd_Set_Cursor(1,1);
   360  0012C0  0E01               	movlw	1
   361  0012C2  6E0B               	movwf	Lcd_Set_Cursor@b,c
   362  0012C4  0E01               	movlw	1
   363  0012C6  ECB6  F009         	call	_Lcd_Set_Cursor
   364                           
   365                           ;main.c: 22:         Lcd_Write_String("Test1");
   366  0012CA  0E09               	movlw	low STR_2
   367  0012CC  6E08               	movwf	Lcd_Write_String@a,c
   368  0012CE  0E10               	movlw	high STR_2
   369  0012D0  6E09               	movwf	Lcd_Write_String@a+1,c
   370  0012D2  ECDE  F009         	call	_Lcd_Write_String	;wreg free
   371                           
   372                           ;main.c: 23:         _delay((unsigned long)((100)*(64000000/4000.0)));
   373  0012D6  0E09               	movlw	9
   374  0012D8  6E19               	movwf	(??_main+1)& (0+255),c
   375  0012DA  0E1E               	movlw	30
   376  0012DC  6E18               	movwf	??_main& (0+255),c
   377  0012DE  0EE4               	movlw	228
   378  0012E0                     u737:
   379  0012E0  2EE8               	decfsz	wreg,f,c
   380  0012E2  D7FE               	bra	u737
   381  0012E4  2E18               	decfsz	??_main& (0+255),f,c
   382  0012E6  D7FC               	bra	u737
   383  0012E8  2E19               	decfsz	(??_main+1)& (0+255),f,c
   384  0012EA  D7FA               	bra	u737
   385  0012EC  D000               	nop2	
   386                           
   387                           ;main.c: 24:         USARTWriteString("Hello\r\n");
   388  0012EE  0E01               	movlw	low STR_3
   389  0012F0  6E02               	movwf	USARTWriteString@str,c
   390  0012F2  0E10               	movlw	high STR_3
   391  0012F4  6E03               	movwf	USARTWriteString@str+1,c
   392  0012F6  EC27  F00A         	call	_USARTWriteString	;wreg free
   393                           
   394                           ;main.c: 25:         _delay((unsigned long)((100)*(64000000/4000.0)));
   395  0012FA  0E09               	movlw	9
   396  0012FC  6E19               	movwf	(??_main+1)& (0+255),c
   397  0012FE  0E1E               	movlw	30
   398  001300  6E18               	movwf	??_main& (0+255),c
   399  001302  0EE4               	movlw	228
   400  001304                     u747:
   401  001304  2EE8               	decfsz	wreg,f,c
   402  001306  D7FE               	bra	u747
   403  001308  2E18               	decfsz	??_main& (0+255),f,c
   404  00130A  D7FC               	bra	u747
   405  00130C  2E19               	decfsz	(??_main+1)& (0+255),f,c
   406  00130E  D7FA               	bra	u747
   407  001310  D000               	nop2	
   408  001312  D7D6               	goto	l1837
   409  001314                     __end_of_main:
   410                           	opt callstack 0
   411                           
   412 ;; *************** function _config *****************
   413 ;; Defined at:
   414 ;;		line 15 in file "config.c"
   415 ;; Parameters:    Size  Location     Type
   416 ;;		None
   417 ;; Auto vars:     Size  Location     Type
   418 ;;		None
   419 ;; Return value:  Size  Location     Type
   420 ;;                  1    wreg      void 
   421 ;; Registers used:
   422 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   423 ;; Tracked objects:
   424 ;;		On entry : 0/0
   425 ;;		On exit  : 0/0
   426 ;;		Unchanged: 0/0
   427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   430 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   431 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   432 ;;Total ram usage:        2 bytes
   433 ;; Hardware stack levels used:    1
   434 ;; Hardware stack levels required when called:    5
   435 ;; This function calls:
   436 ;;		_Cursor_Off
   437 ;;		_I2C_Master_Init
   438 ;;		_Lcd_Clear
   439 ;;		_Lcd_Init
   440 ;;		_Lcd_Set_Cursor
   441 ;;		_Lcd_Write_String
   442 ;;		_USARTInit
   443 ;; This function is called by:
   444 ;;		_main
   445 ;; This function uses a non-reentrant model
   446 ;;
   447                           
   448                           	psect	text1
   449  001016                     __ptext1:
   450                           	opt callstack 0
   451  001016                     _config:
   452                           	opt callstack 25
   453                           
   454                           ;config.c: 18:     OSCCONbits.IRCF0=1;
   455                           
   456                           ;incstack = 0
   457  001016  88D3               	bsf	4051,4,c	;volatile
   458                           
   459                           ;config.c: 19:     OSCCONbits.IRCF1=1;
   460  001018  8AD3               	bsf	4051,5,c	;volatile
   461                           
   462                           ;config.c: 20:     OSCCONbits.IRCF2=1;
   463  00101A  8CD3               	bsf	4051,6,c	;volatile
   464                           
   465                           ;config.c: 21:     OSCTUNEbits.PLLEN = 1;
   466  00101C  8C9B               	bsf	3995,6,c	;volatile
   467                           
   468                           ;config.c: 22:     INTCONbits.GIE=0;
   469  00101E  9EF2               	bcf	4082,7,c	;volatile
   470                           
   471                           ;config.c: 24:     ANSELA=0X00;
   472  001020  0E00               	movlw	0
   473  001022  010F               	movlb	15	; () banked
   474  001024  6F38               	movwf	56,b	;volatile
   475                           
   476                           ;config.c: 25:     ANSELB=0X00;
   477  001026  0E00               	movlw	0
   478  001028  6F39               	movwf	57,b	;volatile
   479                           
   480                           ;config.c: 26:     ANSELC=0X00;
   481  00102A  0E00               	movlw	0
   482  00102C  6F3A               	movwf	58,b	;volatile
   483                           
   484                           ;config.c: 27:     ANSELD=0X00;
   485  00102E  0E00               	movlw	0
   486  001030  6F3B               	movwf	59,b	;volatile
   487                           
   488                           ;config.c: 28:     ANSELE=0X00;
   489  001032  0E00               	movlw	0
   490  001034  6F3C               	movwf	60,b	;volatile
   491                           
   492                           ;config.c: 29:     TRISA=0X00;
   493  001036  0E00               	movlw	0
   494  001038  6E92               	movwf	3986,c	;volatile
   495                           
   496                           ;config.c: 30:     TRISB=0X00;
   497  00103A  0E00               	movlw	0
   498  00103C  6E93               	movwf	3987,c	;volatile
   499                           
   500                           ;config.c: 31:     TRISC=0X00;
   501  00103E  0E00               	movlw	0
   502  001040  6E94               	movwf	3988,c	;volatile
   503                           
   504                           ;config.c: 32:     TRISD=0X00;
   505  001042  0E00               	movlw	0
   506  001044  6E95               	movwf	3989,c	;volatile
   507                           
   508                           ;config.c: 33:     TRISE=0X00;
   509  001046  0E00               	movlw	0
   510  001048  6E96               	movwf	3990,c	;volatile
   511                           
   512                           ;config.c: 34:     PORTA=0X00;
   513  00104A  0E00               	movlw	0
   514  00104C  6E80               	movwf	3968,c	;volatile
   515                           
   516                           ;config.c: 35:     PORTB=0X00;
   517  00104E  0E00               	movlw	0
   518  001050  6E81               	movwf	3969,c	;volatile
   519                           
   520                           ;config.c: 36:     PORTC=0X00;
   521  001052  0E00               	movlw	0
   522  001054  6E82               	movwf	3970,c	;volatile
   523                           
   524                           ;config.c: 37:     PORTD=0X00;
   525  001056  0E00               	movlw	0
   526  001058  6E83               	movwf	3971,c	;volatile
   527                           
   528                           ;config.c: 38:     PORTE=0X00;
   529  00105A  0E00               	movlw	0
   530  00105C  6E84               	movwf	3972,c	;volatile
   531                           
   532                           ;config.c: 39:     LATA=0X00;
   533  00105E  0E00               	movlw	0
   534  001060  6E89               	movwf	3977,c	;volatile
   535                           
   536                           ;config.c: 40:     LATB=0X00;
   537  001062  0E00               	movlw	0
   538  001064  6E8A               	movwf	3978,c	;volatile
   539                           
   540                           ;config.c: 41:     LATC=0X00;
   541  001066  0E00               	movlw	0
   542  001068  6E8B               	movwf	3979,c	;volatile
   543                           
   544                           ;config.c: 42:     LATD=0X00;
   545  00106A  0E00               	movlw	0
   546  00106C  6E8C               	movwf	3980,c	;volatile
   547                           
   548                           ;config.c: 43:     LATE=0X00;
   549  00106E  0E00               	movlw	0
   550  001070  6E8D               	movwf	3981,c	;volatile
   551                           
   552                           ; BSR set to: 15
   553                           ;config.c: 45:     TRISCbits.TRISC3=1;
   554  001072  8694               	bsf	3988,3,c	;volatile
   555                           
   556                           ; BSR set to: 15
   557                           ;config.c: 46:     TRISCbits.TRISC4=1;
   558  001074  8894               	bsf	3988,4,c	;volatile
   559                           
   560                           ; BSR set to: 15
   561                           ;config.c: 47:     I2C_Master_Init(100000);
   562  001076  0EA0               	movlw	160
   563  001078  6E0E               	movwf	I2C_Master_Init@c,c
   564  00107A  0E86               	movlw	134
   565  00107C  6E0F               	movwf	I2C_Master_Init@c+1,c
   566  00107E  0E01               	movlw	1
   567  001080  6E10               	movwf	I2C_Master_Init@c+2,c
   568  001082  0E00               	movlw	0
   569  001084  6E11               	movwf	I2C_Master_Init@c+3,c
   570  001086  EC31  F009         	call	_I2C_Master_Init	;wreg free
   571                           
   572                           ;config.c: 48:     _delay((unsigned long)((100)*(64000000/4000.0)));
   573  00108A  0E09               	movlw	9
   574  00108C  6E17               	movwf	(??_config+1)& (0+255),c
   575  00108E  0E1E               	movlw	30
   576  001090  6E16               	movwf	??_config& (0+255),c
   577  001092  0EE4               	movlw	228
   578  001094                     u757:
   579  001094  2EE8               	decfsz	wreg,f,c
   580  001096  D7FE               	bra	u757
   581  001098  2E16               	decfsz	??_config& (0+255),f,c
   582  00109A  D7FC               	bra	u757
   583  00109C  2E17               	decfsz	(??_config+1)& (0+255),f,c
   584  00109E  D7FA               	bra	u757
   585  0010A0  D000               	nop2	
   586                           
   587                           ;config.c: 49:     USARTInit(19200);
   588  0010A2  0E4B               	movlw	75
   589  0010A4  6E02               	movwf	USARTInit@baud_rate+1,c
   590  0010A6  0E00               	movlw	0
   591  0010A8  6E01               	movwf	USARTInit@baud_rate,c
   592  0010AA  ECF4  F008         	call	_USARTInit	;wreg free
   593                           
   594                           ;config.c: 51:     Lcd_Init();
   595  0010AE  ECB6  F008         	call	_Lcd_Init	;wreg free
   596                           
   597                           ;config.c: 52:     Lcd_Clear();
   598  0010B2  EC67  F00A         	call	_Lcd_Clear	;wreg free
   599                           
   600                           ;config.c: 53:     Cursor_Off();
   601  0010B6  EC6E  F00A         	call	_Cursor_Off	;wreg free
   602                           
   603                           ;config.c: 54:     Lcd_Set_Cursor(1,1);
   604  0010BA  0E01               	movlw	1
   605  0010BC  6E0B               	movwf	Lcd_Set_Cursor@b,c
   606  0010BE  0E01               	movlw	1
   607  0010C0  ECB6  F009         	call	_Lcd_Set_Cursor
   608                           
   609                           ;config.c: 55:     Lcd_Write_String("Test");
   610  0010C4  0E0F               	movlw	low STR_1
   611  0010C6  6E08               	movwf	Lcd_Write_String@a,c
   612  0010C8  0E10               	movlw	high STR_1
   613  0010CA  6E09               	movwf	Lcd_Write_String@a+1,c
   614  0010CC  ECDE  F009         	call	_Lcd_Write_String	;wreg free
   615                           
   616                           ;config.c: 56:     _delay((unsigned long)((100)*(64000000/4000.0)));
   617  0010D0  0E09               	movlw	9
   618  0010D2  6E17               	movwf	(??_config+1)& (0+255),c
   619  0010D4  0E1E               	movlw	30
   620  0010D6  6E16               	movwf	??_config& (0+255),c
   621  0010D8  0EE4               	movlw	228
   622  0010DA                     u767:
   623  0010DA  2EE8               	decfsz	wreg,f,c
   624  0010DC  D7FE               	bra	u767
   625  0010DE  2E16               	decfsz	??_config& (0+255),f,c
   626  0010E0  D7FC               	bra	u767
   627  0010E2  2E17               	decfsz	(??_config+1)& (0+255),f,c
   628  0010E4  D7FA               	bra	u767
   629  0010E6  D000               	nop2	
   630  0010E8  0012               	return		;funcret
   631  0010EA                     __end_of_config:
   632                           	opt callstack 0
   633                           
   634 ;; *************** function _USARTInit *****************
   635 ;; Defined at:
   636 ;;		line 31 in file "usart.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;  baud_rate       2    0[COMRAM] unsigned short 
   639 ;; Auto vars:     Size  Location     Type
   640 ;;		None
   641 ;; Return value:  Size  Location     Type
   642 ;;                  1    wreg      void 
   643 ;; Registers used:
   644 ;;		wreg, status,2, status,0
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   650 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   652 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   653 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   654 ;;Total ram usage:        4 bytes
   655 ;; Hardware stack levels used:    1
   656 ;; This function calls:
   657 ;;		Nothing
   658 ;; This function is called by:
   659 ;;		_config
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           	psect	text2
   664  0011E8                     __ptext2:
   665                           	opt callstack 0
   666  0011E8                     _USARTInit:
   667                           	opt callstack 29
   668                           
   669                           ;usart.c: 31: void USARTInit(uint16_t baud_rate);usart.c: 32: {;usart.c: 34:     UQFront
      +                          =UQEnd=-1;
   670                           
   671                           ;incstack = 0
   672  0011E8  6826               	setf	_UQEnd,c	;volatile
   673  0011EA  6827               	setf	_UQFront,c	;volatile
   674                           
   675                           ;usart.c: 37:     switch(baud_rate)
   676  0011EC  D009               	goto	l1695
   677  0011EE                     l1685:
   678                           
   679                           ;usart.c: 40:         SPBRG1=103;
   680  0011EE  0E67               	movlw	103
   681  0011F0  D005               	goto	L3
   682  0011F2                     l1687:
   683                           
   684                           ;usart.c: 43:         SPBRG1=207;
   685  0011F2  0ECF               	movlw	207
   686  0011F4  D003               	goto	L3
   687  0011F6                     l1689:
   688                           
   689                           ;usart.c: 46:         SPBRG1=42;
   690  0011F6  0E2A               	movlw	42
   691  0011F8  D001               	goto	L3
   692  0011FA                     l1691:
   693                           
   694                           ;usart.c: 49:         SPBRG1=36;
   695  0011FA  0E24               	movlw	36
   696  0011FC                     L3:
   697  0011FC  6EAF               	movwf	4015,c	;volatile
   698                           
   699                           ;usart.c: 50:         break;
   700  0011FE  D025               	goto	l246
   701  001200                     l1695:
   702  001200  C001  F003         	movff	USARTInit@baud_rate,??_USARTInit
   703  001204  C002  F004         	movff	USARTInit@baud_rate+1,??_USARTInit+1
   704                           
   705                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 4 sub-sw
      +                          itches
   706                           ; Switch size 1, requested type "simple"
   707                           ; Number of cases is 4, Range of values is 37 to 131
   708                           ; switch strategies available:
   709                           ; Name         Instructions Cycles
   710                           ; simple_byte           13     7 (average)
   711                           ;	Chosen strategy is simple_byte
   712  001208  5004               	movf	??_USARTInit+1,w,c
   713  00120A  0A25               	xorlw	37	; case 37
   714  00120C  B4D8               	btfsc	status,2,c
   715  00120E  D00A               	goto	l1973
   716  001210  0A6E               	xorlw	110	; case 75
   717  001212  B4D8               	btfsc	status,2,c
   718  001214  D00C               	goto	l1975
   719  001216  0A3B               	xorlw	59	; case 112
   720  001218  B4D8               	btfsc	status,2,c
   721  00121A  D00E               	goto	l1977
   722  00121C  0AF3               	xorlw	243	; case 131
   723  00121E  B4D8               	btfsc	status,2,c
   724  001220  D010               	goto	l1979
   725  001222  D013               	goto	l246
   726  001224                     l1973:
   727                           
   728                           ; Switch size 1, requested type "simple"
   729                           ; Number of cases is 1, Range of values is 128 to 128
   730                           ; switch strategies available:
   731                           ; Name         Instructions Cycles
   732                           ; simple_byte            4     3 (average)
   733                           ;	Chosen strategy is simple_byte
   734  001224  5003               	movf	??_USARTInit,w,c
   735  001226  0A80               	xorlw	128	; case 128
   736  001228  B4D8               	btfsc	status,2,c
   737  00122A  D7E1               	goto	l1685
   738  00122C  D00E               	goto	l246
   739  00122E                     l1975:
   740                           
   741                           ; Switch size 1, requested type "simple"
   742                           ; Number of cases is 1, Range of values is 0 to 0
   743                           ; switch strategies available:
   744                           ; Name         Instructions Cycles
   745                           ; simple_byte            4     3 (average)
   746                           ;	Chosen strategy is simple_byte
   747  00122E  5003               	movf	??_USARTInit,w,c
   748  001230  0A00               	xorlw	0	; case 0
   749  001232  B4D8               	btfsc	status,2,c
   750  001234  D7DE               	goto	l1687
   751  001236  D009               	goto	l246
   752  001238                     l1977:
   753                           
   754                           ; Switch size 1, requested type "simple"
   755                           ; Number of cases is 1, Range of values is 128 to 128
   756                           ; switch strategies available:
   757                           ; Name         Instructions Cycles
   758                           ; simple_byte            4     3 (average)
   759                           ;	Chosen strategy is simple_byte
   760  001238  5003               	movf	??_USARTInit,w,c
   761  00123A  0A80               	xorlw	128	; case 128
   762  00123C  B4D8               	btfsc	status,2,c
   763  00123E  D7DB               	goto	l1689
   764  001240  D004               	goto	l246
   765  001242                     l1979:
   766                           
   767                           ; Switch size 1, requested type "simple"
   768                           ; Number of cases is 1, Range of values is 64 to 64
   769                           ; switch strategies available:
   770                           ; Name         Instructions Cycles
   771                           ; simple_byte            4     3 (average)
   772                           ;	Chosen strategy is simple_byte
   773  001242  5003               	movf	??_USARTInit,w,c
   774  001244  0A40               	xorlw	64	; case 64
   775  001246  B4D8               	btfsc	status,2,c
   776  001248  D7D8               	goto	l1691
   777  00124A                     l246:
   778                           
   779                           ;usart.c: 53:     TXSTA1bits.TX9=0;
   780  00124A  9CAC               	bcf	4012,6,c	;volatile
   781                           
   782                           ;usart.c: 54:     TXSTA1bits.TXEN=1;
   783  00124C  8AAC               	bsf	4012,5,c	;volatile
   784                           
   785                           ;usart.c: 55:     TXSTA1bits.SYNC=0;
   786  00124E  98AC               	bcf	4012,4,c	;volatile
   787                           
   788                           ;usart.c: 56:     TXSTA1bits.BRGH=1;
   789  001250  84AC               	bsf	4012,2,c	;volatile
   790                           
   791                           ;usart.c: 59:     RCSTA1bits.SPEN=1;
   792  001252  8EAB               	bsf	4011,7,c	;volatile
   793                           
   794                           ;usart.c: 60:     RCSTA1bits.RX9=0;
   795  001254  9CAB               	bcf	4011,6,c	;volatile
   796                           
   797                           ;usart.c: 61:     RCSTA1bits.CREN=1;
   798  001256  88AB               	bsf	4011,4,c	;volatile
   799                           
   800                           ;usart.c: 62:     RCSTA1bits.ADDEN=0;
   801  001258  96AB               	bcf	4011,3,c	;volatile
   802                           
   803                           ;usart.c: 66:     PIE1bits.RC1IE=1;
   804  00125A  8A9D               	bsf	3997,5,c	;volatile
   805                           
   806                           ;usart.c: 67:     PEIE=1;
   807  00125C  8CF2               	bsf	4082,6,c	;volatile
   808                           
   809                           ;usart.c: 69:     (INTCONbits.GIE = 1);
   810  00125E  8EF2               	bsf	4082,7,c	;volatile
   811  001260  0012               	return		;funcret
   812  001262                     __end_of_USARTInit:
   813                           	opt callstack 0
   814                           
   815 ;; *************** function _Lcd_Write_String *****************
   816 ;; Defined at:
   817 ;;		line 114 in file "i2c_display.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;  a               2    7[COMRAM] PTR unsigned char 
   820 ;;		 -> STR_2(6), STR_1(5), 
   821 ;; Auto vars:     Size  Location     Type
   822 ;;  i               2   11[COMRAM] int 
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   832 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   833 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   834 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   835 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   836 ;;Total ram usage:        6 bytes
   837 ;; Hardware stack levels used:    1
   838 ;; Hardware stack levels required when called:    4
   839 ;; This function calls:
   840 ;;		_Lcd_Write_Char
   841 ;; This function is called by:
   842 ;;		_config
   843 ;;		_main
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847                           	psect	text3
   848  0013BC                     __ptext3:
   849                           	opt callstack 0
   850  0013BC                     _Lcd_Write_String:
   851                           	opt callstack 25
   852                           
   853                           ;i2c_display.c: 114: void Lcd_Write_String(char *a);i2c_display.c: 115: {;i2c_display.c:
      +                           116:  int i;;i2c_display.c: 117:  for(i=0;a[i]!='\0';i++)
   854                           
   855                           ;incstack = 0
   856  0013BC  0E00               	movlw	0
   857  0013BE  6E0D               	movwf	Lcd_Write_String@i+1,c
   858  0013C0  0E00               	movlw	0
   859  0013C2  6E0C               	movwf	Lcd_Write_String@i,c
   860  0013C4  D010               	goto	l1749
   861  0013C6                     l1745:
   862                           
   863                           ;i2c_display.c: 118:     Lcd_Write_Char(a[i]);
   864  0013C6  500C               	movf	Lcd_Write_String@i,w,c
   865  0013C8  2408               	addwf	Lcd_Write_String@a,w,c
   866  0013CA  6E0A               	movwf	??_Lcd_Write_String& (0+255),c
   867  0013CC  500D               	movf	Lcd_Write_String@i+1,w,c
   868  0013CE  2009               	addwfc	Lcd_Write_String@a+1,w,c
   869  0013D0  6E0B               	movwf	(??_Lcd_Write_String+1)& (0+255),c
   870  0013D2  C00A  FFF6         	movff	??_Lcd_Write_String,tblptrl
   871  0013D6  C00B  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
   872  0013DA                     	if	0	;tblptru may be non-zero
   873  0013DA                     	endif
   874  0013DA                     	if	0	;tblptru may be non-zero
   875  0013DA                     	endif
   876  0013DA  0008               	tblrd		*
   877  0013DC  50F5               	movf	tablat,w,c
   878  0013DE  EC8A  F009         	call	_Lcd_Write_Char
   879  0013E2  4A0C               	infsnz	Lcd_Write_String@i,f,c
   880  0013E4  2A0D               	incf	Lcd_Write_String@i+1,f,c
   881  0013E6                     l1749:
   882  0013E6  500C               	movf	Lcd_Write_String@i,w,c
   883  0013E8  2408               	addwf	Lcd_Write_String@a,w,c
   884  0013EA  6E0A               	movwf	??_Lcd_Write_String& (0+255),c
   885  0013EC  500D               	movf	Lcd_Write_String@i+1,w,c
   886  0013EE  2009               	addwfc	Lcd_Write_String@a+1,w,c
   887  0013F0  6E0B               	movwf	(??_Lcd_Write_String+1)& (0+255),c
   888  0013F2  C00A  FFF6         	movff	??_Lcd_Write_String,tblptrl
   889  0013F6  C00B  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
   890  0013FA                     	if	0	;tblptru may be non-zero
   891  0013FA                     	endif
   892  0013FA                     	if	0	;tblptru may be non-zero
   893  0013FA                     	endif
   894  0013FA  0008               	tblrd		*
   895  0013FC  50F5               	movf	tablat,w,c
   896  0013FE  0900               	iorlw	0
   897  001400  B4D8               	btfsc	status,2,c
   898  001402  0012               	return	
   899  001404  D7E0               	goto	l1745
   900  001406                     __end_of_Lcd_Write_String:
   901                           	opt callstack 0
   902                           
   903 ;; *************** function _Lcd_Write_Char *****************
   904 ;; Defined at:
   905 ;;		line 90 in file "i2c_display.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;  a               1    wreg     unsigned char 
   908 ;; Auto vars:     Size  Location     Type
   909 ;;  a               1    4[COMRAM] unsigned char 
   910 ;;  temp            1    6[COMRAM] unsigned char 
   911 ;;  y               1    5[COMRAM] unsigned char 
   912 ;; Return value:  Size  Location     Type
   913 ;;                  1    wreg      void 
   914 ;; Registers used:
   915 ;;		wreg, status,2, status,0, cstack
   916 ;; Tracked objects:
   917 ;;		On entry : 0/0
   918 ;;		On exit  : 0/0
   919 ;;		Unchanged: 0/0
   920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   922 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   924 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   925 ;;Total ram usage:        3 bytes
   926 ;; Hardware stack levels used:    1
   927 ;; Hardware stack levels required when called:    3
   928 ;; This function calls:
   929 ;;		_Lcd_Port
   930 ;; This function is called by:
   931 ;;		_Lcd_Write_String
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           	psect	text4
   936  001314                     __ptext4:
   937                           	opt callstack 0
   938  001314                     _Lcd_Write_Char:
   939                           	opt callstack 25
   940                           
   941                           ;incstack = 0
   942                           ;Lcd_Write_Char@a stored from wreg
   943  001314  6E05               	movwf	Lcd_Write_Char@a,c
   944                           
   945                           ;i2c_display.c: 90: void Lcd_Write_Char(char a);i2c_display.c: 91: {;i2c_display.c: 92: 
      +                             char temp,y;;i2c_display.c: 93:    temp = a&0x0F;
   946  001316  5005               	movf	Lcd_Write_Char@a,w,c
   947  001318  0B0F               	andlw	15
   948  00131A  6E07               	movwf	Lcd_Write_Char@temp,c
   949                           
   950                           ;i2c_display.c: 94:    temp=temp<<4;
   951  00131C  3807               	swapf	Lcd_Write_Char@temp,w,c
   952  00131E  0BF0               	andlw	240
   953  001320  6E07               	movwf	Lcd_Write_Char@temp,c
   954                           
   955                           ;i2c_display.c: 95:    y = a&0xF0;
   956  001322  5005               	movf	Lcd_Write_Char@a,w,c
   957  001324  0BF0               	andlw	240
   958  001326  6E06               	movwf	Lcd_Write_Char@y,c
   959                           
   960                           ;i2c_display.c: 98:    Lcd_Port(0x00 | 0x01 | 0x00 | 0x00);
   961  001328  0E01               	movlw	1
   962  00132A  EC4D  F00A         	call	_Lcd_Port
   963                           
   964                           ;i2c_display.c: 99:    Lcd_Port(y);
   965  00132E  5006               	movf	Lcd_Write_Char@y,w,c
   966  001330  EC4D  F00A         	call	_Lcd_Port
   967                           
   968                           ;i2c_display.c: 101:    Lcd_Port(y | 0x01 | 0x04 | 0x00);
   969  001334  5006               	movf	Lcd_Write_Char@y,w,c
   970  001336  0905               	iorlw	5
   971  001338  EC4D  F00A         	call	_Lcd_Port
   972                           
   973                           ;i2c_display.c: 102:    _delay((unsigned long)((40)*(64000000/4000000.0)));
   974  00133C  0ED5               	movlw	213
   975  00133E                     u777:
   976  00133E  2EE8               	decfsz	wreg,f,c
   977  001340  D7FE               	bra	u777
   978  001342  F000               	nop	
   979                           
   980                           ;i2c_display.c: 104:    Lcd_Port(y | 0x01 | 0x00 | 0x00);
   981  001344  5006               	movf	Lcd_Write_Char@y,w,c
   982  001346  0901               	iorlw	1
   983  001348  EC4D  F00A         	call	_Lcd_Port
   984                           
   985                           ;i2c_display.c: 105:    Lcd_Port(temp);
   986  00134C  5007               	movf	Lcd_Write_Char@temp,w,c
   987  00134E  EC4D  F00A         	call	_Lcd_Port
   988                           
   989                           ;i2c_display.c: 108:    Lcd_Port(temp | 0x01 | 0x04 | 0x00);
   990  001352  5007               	movf	Lcd_Write_Char@temp,w,c
   991  001354  0905               	iorlw	5
   992  001356  EC4D  F00A         	call	_Lcd_Port
   993                           
   994                           ;i2c_display.c: 109:    _delay((unsigned long)((40)*(64000000/4000000.0)));
   995  00135A  0ED5               	movlw	213
   996  00135C                     u787:
   997  00135C  2EE8               	decfsz	wreg,f,c
   998  00135E  D7FE               	bra	u787
   999  001360  F000               	nop	
  1000                           
  1001                           ;i2c_display.c: 111:    Lcd_Port(temp | 0x01 | 0x00 | 0x00);
  1002  001362  5007               	movf	Lcd_Write_Char@temp,w,c
  1003  001364  0901               	iorlw	1
  1004  001366  EC4D  F00A         	call	_Lcd_Port
  1005  00136A  0012               	return		;funcret
  1006  00136C                     __end_of_Lcd_Write_Char:
  1007                           	opt callstack 0
  1008                           
  1009 ;; *************** function _Lcd_Set_Cursor *****************
  1010 ;; Defined at:
  1011 ;;		line 50 in file "i2c_display.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;  a               1    wreg     unsigned char 
  1014 ;;  b               1   10[COMRAM] unsigned char 
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;  a               1   11[COMRAM] unsigned char 
  1017 ;;  temp            1   14[COMRAM] unsigned char 
  1018 ;;  y               1   13[COMRAM] unsigned char 
  1019 ;;  z               1   12[COMRAM] unsigned char 
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg, status,2, status,0, cstack
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1029 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1030 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1032 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1033 ;;Total ram usage:        5 bytes
  1034 ;; Hardware stack levels used:    1
  1035 ;; Hardware stack levels required when called:    4
  1036 ;; This function calls:
  1037 ;;		_Lcd_Cmd
  1038 ;; This function is called by:
  1039 ;;		_config
  1040 ;;		_main
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           	psect	text5
  1045  00136C                     __ptext5:
  1046                           	opt callstack 0
  1047  00136C                     _Lcd_Set_Cursor:
  1048                           	opt callstack 25
  1049                           
  1050                           ;incstack = 0
  1051                           ;Lcd_Set_Cursor@a stored from wreg
  1052  00136C  6E0C               	movwf	Lcd_Set_Cursor@a,c
  1053                           
  1054                           ;i2c_display.c: 50: void Lcd_Set_Cursor(char a, char b);i2c_display.c: 51: {;i2c_display
      +                          .c: 52:  char temp,z,y;;i2c_display.c: 53:  if(a == 1)
  1055  00136E  040C               	decf	Lcd_Set_Cursor@a,w,c
  1056  001370  A4D8               	btfss	status,2,c
  1057  001372  D010               	goto	l1735
  1058                           
  1059                           ;i2c_display.c: 54:  {;i2c_display.c: 55:    temp = 0x80 + b - 1;
  1060  001374  500B               	movf	Lcd_Set_Cursor@b,w,c
  1061  001376  0F7F               	addlw	127
  1062  001378  6E0F               	movwf	Lcd_Set_Cursor@temp,c
  1063                           
  1064                           ;i2c_display.c: 56:   z = temp>>4;
  1065  00137A  380F               	swapf	Lcd_Set_Cursor@temp,w,c
  1066  00137C  0B0F               	andlw	15
  1067  00137E  6E0D               	movwf	Lcd_Set_Cursor@z,c
  1068                           
  1069                           ;i2c_display.c: 57:   y = temp & 0x0F;
  1070  001380  500F               	movf	Lcd_Set_Cursor@temp,w,c
  1071  001382  0B0F               	andlw	15
  1072  001384  6E0E               	movwf	Lcd_Set_Cursor@y,c
  1073                           
  1074                           ;i2c_display.c: 58:   Lcd_Cmd(z);
  1075  001386  500D               	movf	Lcd_Set_Cursor@z,w,c
  1076  001388  EC03  F00A         	call	_Lcd_Cmd
  1077                           
  1078                           ;i2c_display.c: 59:   Lcd_Cmd(y);
  1079  00138C  500E               	movf	Lcd_Set_Cursor@y,w,c
  1080  00138E  EC03  F00A         	call	_Lcd_Cmd
  1081                           
  1082                           ;i2c_display.c: 60:  }
  1083  001392  0012               	return	
  1084  001394                     l1735:
  1085  001394  0E02               	movlw	2
  1086  001396  180C               	xorwf	Lcd_Set_Cursor@a,w,c
  1087  001398  A4D8               	btfss	status,2,c
  1088  00139A  0012               	return	
  1089                           
  1090                           ;i2c_display.c: 62:  {;i2c_display.c: 63:   temp = 0xC0 + b - 1;
  1091  00139C  500B               	movf	Lcd_Set_Cursor@b,w,c
  1092  00139E  0FBF               	addlw	191
  1093  0013A0  6E0F               	movwf	Lcd_Set_Cursor@temp,c
  1094                           
  1095                           ;i2c_display.c: 64:   z = temp>>4;
  1096  0013A2  380F               	swapf	Lcd_Set_Cursor@temp,w,c
  1097  0013A4  0B0F               	andlw	15
  1098  0013A6  6E0D               	movwf	Lcd_Set_Cursor@z,c
  1099                           
  1100                           ;i2c_display.c: 65:   y = temp & 0x0F;
  1101  0013A8  500F               	movf	Lcd_Set_Cursor@temp,w,c
  1102  0013AA  0B0F               	andlw	15
  1103  0013AC  6E0E               	movwf	Lcd_Set_Cursor@y,c
  1104                           
  1105                           ;i2c_display.c: 66:   Lcd_Cmd(z);
  1106  0013AE  500D               	movf	Lcd_Set_Cursor@z,w,c
  1107  0013B0  EC03  F00A         	call	_Lcd_Cmd
  1108                           
  1109                           ;i2c_display.c: 67:   Lcd_Cmd(y);
  1110  0013B4  500E               	movf	Lcd_Set_Cursor@y,w,c
  1111  0013B6  EC03  F00A         	call	_Lcd_Cmd
  1112  0013BA  0012               	return		;funcret
  1113  0013BC                     __end_of_Lcd_Set_Cursor:
  1114                           	opt callstack 0
  1115                           
  1116 ;; *************** function _Lcd_Init *****************
  1117 ;; Defined at:
  1118 ;;		line 71 in file "i2c_display.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;		None
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;		None
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		wreg, status,2, status,0, cstack
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1134 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1135 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1136 ;;Total ram usage:        2 bytes
  1137 ;; Hardware stack levels used:    1
  1138 ;; Hardware stack levels required when called:    4
  1139 ;; This function calls:
  1140 ;;		_Lcd_Cmd
  1141 ;;		_Lcd_Port
  1142 ;; This function is called by:
  1143 ;;		_config
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           	psect	text6
  1148  00116C                     __ptext6:
  1149                           	opt callstack 0
  1150  00116C                     _Lcd_Init:
  1151                           	opt callstack 25
  1152                           
  1153                           ;i2c_display.c: 73:   Lcd_Port(0x00);
  1154                           
  1155                           ;incstack = 0
  1156  00116C  0E00               	movlw	0
  1157  00116E  EC4D  F00A         	call	_Lcd_Port
  1158                           
  1159                           ;i2c_display.c: 74:    _delay((unsigned long)((20)*(64000000/4000.0)));
  1160  001172  0E02               	movlw	2
  1161  001174  6E0C               	movwf	(??_Lcd_Init+1)& (0+255),c
  1162  001176  0EA0               	movlw	160
  1163  001178  6E0B               	movwf	??_Lcd_Init& (0+255),c
  1164  00117A  0E92               	movlw	146
  1165  00117C                     u797:
  1166  00117C  2EE8               	decfsz	wreg,f,c
  1167  00117E  D7FE               	bra	u797
  1168  001180  2E0B               	decfsz	??_Lcd_Init& (0+255),f,c
  1169  001182  D7FC               	bra	u797
  1170  001184  2E0C               	decfsz	(??_Lcd_Init+1)& (0+255),f,c
  1171  001186  D7FA               	bra	u797
  1172  001188  D000               	nop2	
  1173                           
  1174                           ;i2c_display.c: 75:   Lcd_Cmd(0x03);
  1175  00118A  0E03               	movlw	3
  1176  00118C  EC03  F00A         	call	_Lcd_Cmd
  1177                           
  1178                           ;i2c_display.c: 76:  _delay((unsigned long)((5)*(64000000/4000.0)));
  1179  001190  0E68               	movlw	104
  1180  001192  6E0B               	movwf	??_Lcd_Init& (0+255),c
  1181  001194  0EE4               	movlw	228
  1182  001196                     u807:
  1183  001196  2EE8               	decfsz	wreg,f,c
  1184  001198  D7FE               	bra	u807
  1185  00119A  2E0B               	decfsz	??_Lcd_Init& (0+255),f,c
  1186  00119C  D7FC               	bra	u807
  1187  00119E  D000               	nop2	
  1188                           
  1189                           ;i2c_display.c: 77:   Lcd_Cmd(0x03);
  1190  0011A0  0E03               	movlw	3
  1191  0011A2  EC03  F00A         	call	_Lcd_Cmd
  1192                           
  1193                           ;i2c_display.c: 78:  _delay((unsigned long)((11)*(64000000/4000.0)));
  1194  0011A6  0EE5               	movlw	229
  1195  0011A8  6E0B               	movwf	??_Lcd_Init& (0+255),c
  1196  0011AA  0E91               	movlw	145
  1197  0011AC                     u817:
  1198  0011AC  2EE8               	decfsz	wreg,f,c
  1199  0011AE  D7FE               	bra	u817
  1200  0011B0  2E0B               	decfsz	??_Lcd_Init& (0+255),f,c
  1201  0011B2  D7FC               	bra	u817
  1202  0011B4  F000               	nop	
  1203                           
  1204                           ;i2c_display.c: 79:   Lcd_Cmd(0x03);
  1205  0011B6  0E03               	movlw	3
  1206  0011B8  EC03  F00A         	call	_Lcd_Cmd
  1207                           
  1208                           ;i2c_display.c: 81:   Lcd_Cmd(0x02);
  1209  0011BC  0E02               	movlw	2
  1210  0011BE  EC03  F00A         	call	_Lcd_Cmd
  1211                           
  1212                           ;i2c_display.c: 82:   Lcd_Cmd(0x02);
  1213  0011C2  0E02               	movlw	2
  1214  0011C4  EC03  F00A         	call	_Lcd_Cmd
  1215                           
  1216                           ;i2c_display.c: 83:   Lcd_Cmd(0x08);
  1217  0011C8  0E08               	movlw	8
  1218  0011CA  EC03  F00A         	call	_Lcd_Cmd
  1219                           
  1220                           ;i2c_display.c: 84:   Lcd_Cmd(0x00);
  1221  0011CE  0E00               	movlw	0
  1222  0011D0  EC03  F00A         	call	_Lcd_Cmd
  1223                           
  1224                           ;i2c_display.c: 85:   Lcd_Cmd(0x0C);
  1225  0011D4  0E0C               	movlw	12
  1226  0011D6  EC03  F00A         	call	_Lcd_Cmd
  1227                           
  1228                           ;i2c_display.c: 86:   Lcd_Cmd(0x00);
  1229  0011DA  0E00               	movlw	0
  1230  0011DC  EC03  F00A         	call	_Lcd_Cmd
  1231                           
  1232                           ;i2c_display.c: 87:   Lcd_Cmd(0x06);
  1233  0011E0  0E06               	movlw	6
  1234  0011E2  EC03  F00A         	call	_Lcd_Cmd
  1235  0011E6  0012               	return		;funcret
  1236  0011E8                     __end_of_Lcd_Init:
  1237                           	opt callstack 0
  1238                           
  1239 ;; *************** function _Lcd_Clear *****************
  1240 ;; Defined at:
  1241 ;;		line 44 in file "i2c_display.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;		None
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;		None
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  1    wreg      void 
  1248 ;; Registers used:
  1249 ;;		wreg, status,2, status,0, cstack
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1259 ;;Total ram usage:        0 bytes
  1260 ;; Hardware stack levels used:    1
  1261 ;; Hardware stack levels required when called:    4
  1262 ;; This function calls:
  1263 ;;		_Lcd_Cmd
  1264 ;; This function is called by:
  1265 ;;		_config
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           	psect	text7
  1270  0014CE                     __ptext7:
  1271                           	opt callstack 0
  1272  0014CE                     _Lcd_Clear:
  1273                           	opt callstack 25
  1274                           
  1275                           ;i2c_display.c: 46:  Lcd_Cmd(0);
  1276                           
  1277                           ;incstack = 0
  1278  0014CE  0E00               	movlw	0
  1279  0014D0  EC03  F00A         	call	_Lcd_Cmd
  1280                           
  1281                           ;i2c_display.c: 47:  Lcd_Cmd(1);
  1282  0014D4  0E01               	movlw	1
  1283  0014D6  EC03  F00A         	call	_Lcd_Cmd
  1284  0014DA  0012               	return		;funcret
  1285  0014DC                     __end_of_Lcd_Clear:
  1286                           	opt callstack 0
  1287                           
  1288 ;; *************** function _I2C_Master_Init *****************
  1289 ;; Defined at:
  1290 ;;		line 164 in file "i2c_display.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;  c               4   13[COMRAM] const unsigned long 
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;		None
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  1    wreg      void 
  1297 ;; Registers used:
  1298 ;;		wreg, status,2, status,0, cstack
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1304 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1306 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1307 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1308 ;;Total ram usage:        8 bytes
  1309 ;; Hardware stack levels used:    1
  1310 ;; Hardware stack levels required when called:    1
  1311 ;; This function calls:
  1312 ;;		___lldiv
  1313 ;; This function is called by:
  1314 ;;		_config
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           	psect	text8
  1319  001262                     __ptext8:
  1320                           	opt callstack 0
  1321  001262                     _I2C_Master_Init:
  1322                           	opt callstack 28
  1323                           
  1324                           ;i2c_display.c: 164: void I2C_Master_Init(const unsigned long c);i2c_display.c: 165: {;i
      +                          2c_display.c: 166:     SSP1CON1 = 0b00101000;
  1325                           
  1326                           ;incstack = 0
  1327  001262  0E28               	movlw	40
  1328  001264  6EC6               	movwf	4038,c	;volatile
  1329                           
  1330                           ;i2c_display.c: 167:     SSP1CON2 = 0x00;
  1331  001266  0E00               	movlw	0
  1332  001268  6EC5               	movwf	4037,c	;volatile
  1333                           
  1334                           ;i2c_display.c: 168:     SSP1ADD = (64000000/(4*c))-1;
  1335  00126A  0E00               	movlw	0
  1336  00126C  6E01               	movwf	___lldiv@dividend,c
  1337  00126E  0E90               	movlw	144
  1338  001270  6E02               	movwf	___lldiv@dividend+1,c
  1339  001272  0ED0               	movlw	208
  1340  001274  6E03               	movwf	___lldiv@dividend+2,c
  1341  001276  0E03               	movlw	3
  1342  001278  6E04               	movwf	___lldiv@dividend+3,c
  1343  00127A  C00E  F012         	movff	I2C_Master_Init@c,??_I2C_Master_Init
  1344  00127E  C00F  F013         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
  1345  001282  C010  F014         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
  1346  001286  C011  F015         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
  1347  00128A  0E02               	movlw	2
  1348  00128C                     u545:
  1349  00128C  90D8               	bcf	status,0,c
  1350  00128E  3612               	rlcf	??_I2C_Master_Init,f,c
  1351  001290  3613               	rlcf	??_I2C_Master_Init+1,f,c
  1352  001292  3614               	rlcf	??_I2C_Master_Init+2,f,c
  1353  001294  3615               	rlcf	??_I2C_Master_Init+3,f,c
  1354  001296  2EE8               	decfsz	wreg,f,c
  1355  001298  D7F9               	goto	u545
  1356  00129A  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
  1357  00129E  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  1358  0012A2  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  1359  0012A6  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  1360  0012AA  EC75  F008         	call	___lldiv	;wreg free
  1361  0012AE  0401               	decf	?___lldiv,w,c
  1362  0012B0  6EC8               	movwf	4040,c	;volatile
  1363                           
  1364                           ;i2c_display.c: 169:     SSP1STAT = 0x00;
  1365  0012B2  0E00               	movlw	0
  1366  0012B4  6EC7               	movwf	4039,c	;volatile
  1367                           
  1368                           ;i2c_display.c: 170:     TRISCbits.TRISC3=1;
  1369  0012B6  8694               	bsf	3988,3,c	;volatile
  1370                           
  1371                           ;i2c_display.c: 171:     TRISCbits.TRISC4=1;
  1372  0012B8  8894               	bsf	3988,4,c	;volatile
  1373  0012BA  0012               	return		;funcret
  1374  0012BC                     __end_of_I2C_Master_Init:
  1375                           	opt callstack 0
  1376                           
  1377 ;; *************** function ___lldiv *****************
  1378 ;; Defined at:
  1379 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;  dividend        4    0[COMRAM] unsigned long 
  1382 ;;  divisor         4    4[COMRAM] unsigned long 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  quotient        4    8[COMRAM] unsigned long 
  1385 ;;  counter         1   12[COMRAM] unsigned char 
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  4    0[COMRAM] unsigned long 
  1388 ;; Registers used:
  1389 ;;		wreg, status,2, status,0
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1395 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1396 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1398 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1399 ;;Total ram usage:       13 bytes
  1400 ;; Hardware stack levels used:    1
  1401 ;; This function calls:
  1402 ;;		Nothing
  1403 ;; This function is called by:
  1404 ;;		_I2C_Master_Init
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           	psect	text9
  1409  0010EA                     __ptext9:
  1410                           	opt callstack 0
  1411  0010EA                     ___lldiv:
  1412                           	opt callstack 28
  1413                           
  1414                           ;incstack = 0
  1415  0010EA  0E00               	movlw	0
  1416  0010EC  6E09               	movwf	___lldiv@quotient,c
  1417  0010EE  0E00               	movlw	0
  1418  0010F0  6E0A               	movwf	___lldiv@quotient+1,c
  1419  0010F2  0E00               	movlw	0
  1420  0010F4  6E0B               	movwf	___lldiv@quotient+2,c
  1421  0010F6  0E00               	movlw	0
  1422  0010F8  6E0C               	movwf	___lldiv@quotient+3,c
  1423  0010FA  5005               	movf	___lldiv@divisor,w,c
  1424  0010FC  1006               	iorwf	___lldiv@divisor+1,w,c
  1425  0010FE  1007               	iorwf	___lldiv@divisor+2,w,c
  1426  001100  1008               	iorwf	___lldiv@divisor+3,w,c
  1427  001102  B4D8               	btfsc	status,2,c
  1428  001104  D02A               	goto	l399
  1429  001106  0E01               	movlw	1
  1430  001108  6E0D               	movwf	___lldiv@counter,c
  1431  00110A  D006               	goto	l1659
  1432  00110C                     l1657:
  1433  00110C  90D8               	bcf	status,0,c
  1434  00110E  3605               	rlcf	___lldiv@divisor,f,c
  1435  001110  3606               	rlcf	___lldiv@divisor+1,f,c
  1436  001112  3607               	rlcf	___lldiv@divisor+2,f,c
  1437  001114  3608               	rlcf	___lldiv@divisor+3,f,c
  1438  001116  2A0D               	incf	___lldiv@counter,f,c
  1439  001118                     l1659:
  1440  001118  AE08               	btfss	___lldiv@divisor+3,7,c
  1441  00111A  D7F8               	goto	l1657
  1442  00111C                     u520:
  1443  00111C  90D8               	bcf	status,0,c
  1444  00111E  3609               	rlcf	___lldiv@quotient,f,c
  1445  001120  360A               	rlcf	___lldiv@quotient+1,f,c
  1446  001122  360B               	rlcf	___lldiv@quotient+2,f,c
  1447  001124  360C               	rlcf	___lldiv@quotient+3,f,c
  1448  001126  5005               	movf	___lldiv@divisor,w,c
  1449  001128  5C01               	subwf	___lldiv@dividend,w,c
  1450  00112A  5006               	movf	___lldiv@divisor+1,w,c
  1451  00112C  5802               	subwfb	___lldiv@dividend+1,w,c
  1452  00112E  5007               	movf	___lldiv@divisor+2,w,c
  1453  001130  5803               	subwfb	___lldiv@dividend+2,w,c
  1454  001132  5008               	movf	___lldiv@divisor+3,w,c
  1455  001134  5804               	subwfb	___lldiv@dividend+3,w,c
  1456  001136  A0D8               	btfss	status,0,c
  1457  001138  D009               	goto	l1669
  1458  00113A  5005               	movf	___lldiv@divisor,w,c
  1459  00113C  5E01               	subwf	___lldiv@dividend,f,c
  1460  00113E  5006               	movf	___lldiv@divisor+1,w,c
  1461  001140  5A02               	subwfb	___lldiv@dividend+1,f,c
  1462  001142  5007               	movf	___lldiv@divisor+2,w,c
  1463  001144  5A03               	subwfb	___lldiv@dividend+2,f,c
  1464  001146  5008               	movf	___lldiv@divisor+3,w,c
  1465  001148  5A04               	subwfb	___lldiv@dividend+3,f,c
  1466  00114A  8009               	bsf	___lldiv@quotient,0,c
  1467  00114C                     l1669:
  1468  00114C  90D8               	bcf	status,0,c
  1469  00114E  3208               	rrcf	___lldiv@divisor+3,f,c
  1470  001150  3207               	rrcf	___lldiv@divisor+2,f,c
  1471  001152  3206               	rrcf	___lldiv@divisor+1,f,c
  1472  001154  3205               	rrcf	___lldiv@divisor,f,c
  1473  001156  2E0D               	decfsz	___lldiv@counter,f,c
  1474  001158  D7E1               	goto	u520
  1475  00115A                     l399:
  1476  00115A  C009  F001         	movff	___lldiv@quotient,?___lldiv
  1477  00115E  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  1478  001162  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  1479  001166  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  1480  00116A  0012               	return		;funcret
  1481  00116C                     __end_of___lldiv:
  1482                           	opt callstack 0
  1483                           
  1484 ;; *************** function _Cursor_Off *****************
  1485 ;; Defined at:
  1486 ;;		line 139 in file "i2c_display.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;		None
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;		None
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      void 
  1493 ;; Registers used:
  1494 ;;		wreg, status,2, status,0, cstack
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;Total ram usage:        0 bytes
  1505 ;; Hardware stack levels used:    1
  1506 ;; Hardware stack levels required when called:    4
  1507 ;; This function calls:
  1508 ;;		_Lcd_Cmd
  1509 ;; This function is called by:
  1510 ;;		_config
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text10
  1515  0014DC                     __ptext10:
  1516                           	opt callstack 0
  1517  0014DC                     _Cursor_Off:
  1518                           	opt callstack 25
  1519                           
  1520                           ;i2c_display.c: 141: Lcd_Cmd(0x00);
  1521                           
  1522                           ;incstack = 0
  1523  0014DC  0E00               	movlw	0
  1524  0014DE  EC03  F00A         	call	_Lcd_Cmd
  1525                           
  1526                           ;i2c_display.c: 142: Lcd_Cmd(0x0C);
  1527  0014E2  0E0C               	movlw	12
  1528  0014E4  EC03  F00A         	call	_Lcd_Cmd
  1529  0014E8  0012               	return		;funcret
  1530  0014EA                     __end_of_Cursor_Off:
  1531                           	opt callstack 0
  1532                           
  1533 ;; *************** function _Lcd_Cmd *****************
  1534 ;; Defined at:
  1535 ;;		line 25 in file "i2c_display.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;  a               1    wreg     unsigned char 
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;  a               1    9[COMRAM] unsigned char 
  1540 ;;  buff            2    7[COMRAM] int 
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      void 
  1543 ;; Registers used:
  1544 ;;		wreg, status,2, status,0, cstack
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1551 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1552 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1553 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1554 ;;Total ram usage:        6 bytes
  1555 ;; Hardware stack levels used:    1
  1556 ;; Hardware stack levels required when called:    3
  1557 ;; This function calls:
  1558 ;;		_Lcd_Port
  1559 ;; This function is called by:
  1560 ;;		_Lcd_Clear
  1561 ;;		_Lcd_Set_Cursor
  1562 ;;		_Lcd_Init
  1563 ;;		_Cursor_Off
  1564 ;;		_Lcd_Shift_Right
  1565 ;;		_Lcd_Shift_Left
  1566 ;;		_Cursor_On
  1567 ;;		_Cursor_Left
  1568 ;;		_Cursor_Right
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           	psect	text11
  1573  001406                     __ptext11:
  1574                           	opt callstack 0
  1575  001406                     _Lcd_Cmd:
  1576                           	opt callstack 25
  1577                           
  1578                           ;incstack = 0
  1579                           ;Lcd_Cmd@a stored from wreg
  1580  001406  6E0A               	movwf	Lcd_Cmd@a,c
  1581                           
  1582                           ;i2c_display.c: 25: void Lcd_Cmd(char a);i2c_display.c: 26: {;i2c_display.c: 27:     int
      +                           buff;;i2c_display.c: 28:     a=a<<4;
  1583  001408  380A               	swapf	Lcd_Cmd@a,w,c
  1584  00140A  0BF0               	andlw	240
  1585  00140C  6E0A               	movwf	Lcd_Cmd@a,c
  1586  00140E  0E00               	movlw	0
  1587  001410  EC4D  F00A         	call	_Lcd_Port
  1588                           
  1589                           ;i2c_display.c: 33:  Lcd_Port(a);
  1590  001414  500A               	movf	Lcd_Cmd@a,w,c
  1591  001416  EC4D  F00A         	call	_Lcd_Port
  1592                           
  1593                           ;i2c_display.c: 36:     buff=a | 0x00 | 0x04 | 0x00;
  1594  00141A  0E04               	movlw	4
  1595  00141C  C00A  F005         	movff	Lcd_Cmd@a,??_Lcd_Cmd
  1596  001420  6A06               	clrf	(??_Lcd_Cmd+1)& (0+255),c
  1597  001422  1005               	iorwf	??_Lcd_Cmd,w,c
  1598  001424  6E08               	movwf	Lcd_Cmd@buff,c
  1599  001426  5006               	movf	??_Lcd_Cmd+1,w,c
  1600  001428  6E09               	movwf	Lcd_Cmd@buff+1,c
  1601                           
  1602                           ;i2c_display.c: 37:     Lcd_Port(buff);
  1603  00142A  5008               	movf	Lcd_Cmd@buff,w,c
  1604  00142C  EC4D  F00A         	call	_Lcd_Port
  1605                           
  1606                           ;i2c_display.c: 38:         _delay((unsigned long)((4)*(64000000/4000.0)));
  1607  001430  0E54               	movlw	84
  1608  001432  6E05               	movwf	??_Lcd_Cmd& (0+255),c
  1609  001434  0E1C               	movlw	28
  1610  001436                     u827:
  1611  001436  2EE8               	decfsz	wreg,f,c
  1612  001438  D7FE               	bra	u827
  1613  00143A  2E05               	decfsz	??_Lcd_Cmd& (0+255),f,c
  1614  00143C  D7FC               	bra	u827
  1615  00143E  D000               	nop2	
  1616                           
  1617                           ;i2c_display.c: 40:     buff=a | 0x00 | 0x00 | 0x00;
  1618  001440  C00A  F008         	movff	Lcd_Cmd@a,Lcd_Cmd@buff
  1619  001444  6A09               	clrf	Lcd_Cmd@buff+1,c
  1620                           
  1621                           ;i2c_display.c: 41:     Lcd_Port(buff);
  1622  001446  5008               	movf	Lcd_Cmd@buff,w,c
  1623  001448  EC4D  F00A         	call	_Lcd_Port
  1624  00144C  0012               	return		;funcret
  1625  00144E                     __end_of_Lcd_Cmd:
  1626                           	opt callstack 0
  1627                           
  1628 ;; *************** function _Lcd_Port *****************
  1629 ;; Defined at:
  1630 ;;		line 19 in file "i2c_display.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;  data            1    wreg     unsigned char 
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;  data            1    3[COMRAM] unsigned char 
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  1    wreg      void 
  1637 ;; Registers used:
  1638 ;;		wreg, status,2, status,0, cstack
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1645 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1647 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1648 ;;Total ram usage:        1 bytes
  1649 ;; Hardware stack levels used:    1
  1650 ;; Hardware stack levels required when called:    2
  1651 ;; This function calls:
  1652 ;;		_I2C_Master_Start
  1653 ;;		_I2C_Master_Stop
  1654 ;;		_I2C_Write_Display
  1655 ;; This function is called by:
  1656 ;;		_Lcd_Cmd
  1657 ;;		_Lcd_Init
  1658 ;;		_Lcd_Write_Char
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662                           	psect	text12
  1663  00149A                     __ptext12:
  1664                           	opt callstack 0
  1665  00149A                     _Lcd_Port:
  1666                           	opt callstack 25
  1667                           
  1668                           ;incstack = 0
  1669                           ;Lcd_Port@data stored from wreg
  1670  00149A  6E04               	movwf	Lcd_Port@data,c
  1671                           
  1672                           ;i2c_display.c: 19: void Lcd_Port(char data);i2c_display.c: 20: { I2C_Master_Start();
  1673  00149C  EC84  F00A         	call	_I2C_Master_Start	;wreg free
  1674                           
  1675                           ;i2c_display.c: 21:     I2C_Write_Display(0x70);
  1676  0014A0  0E00               	movlw	0
  1677  0014A2  6E03               	movwf	I2C_Write_Display@d+1,c
  1678  0014A4  0E70               	movlw	112
  1679  0014A6  6E02               	movwf	I2C_Write_Display@d,c
  1680  0014A8  EC7B  F00A         	call	_I2C_Write_Display	;wreg free
  1681                           
  1682                           ;i2c_display.c: 22:  I2C_Write_Display(data);
  1683  0014AC  C004  F002         	movff	Lcd_Port@data,I2C_Write_Display@d
  1684  0014B0  6A03               	clrf	I2C_Write_Display@d+1,c
  1685  0014B2  EC7B  F00A         	call	_I2C_Write_Display	;wreg free
  1686                           
  1687                           ;i2c_display.c: 23:     I2C_Master_Stop();
  1688  0014B6  EC80  F00A         	call	_I2C_Master_Stop	;wreg free
  1689  0014BA  0012               	return		;funcret
  1690  0014BC                     __end_of_Lcd_Port:
  1691                           	opt callstack 0
  1692                           
  1693 ;; *************** function _I2C_Write_Display *****************
  1694 ;; Defined at:
  1695 ;;		line 205 in file "i2c_display.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;  d               2    1[COMRAM] unsigned int 
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;		None
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  1    wreg      void 
  1702 ;; Registers used:
  1703 ;;		wreg, status,2, status,0, cstack
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1709 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1712 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1713 ;;Total ram usage:        2 bytes
  1714 ;; Hardware stack levels used:    1
  1715 ;; Hardware stack levels required when called:    1
  1716 ;; This function calls:
  1717 ;;		_I2C_Master_Wait
  1718 ;; This function is called by:
  1719 ;;		_Lcd_Port
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723                           	psect	text13
  1724  0014F6                     __ptext13:
  1725                           	opt callstack 0
  1726  0014F6                     _I2C_Write_Display:
  1727                           	opt callstack 25
  1728                           
  1729                           ;i2c_display.c: 205: void I2C_Write_Display(unsigned d);i2c_display.c: 206: {;i2c_displa
      +                          y.c: 207:     I2C_Master_Wait();
  1730                           
  1731                           ;incstack = 0
  1732  0014F6  EC5E  F00A         	call	_I2C_Master_Wait	;wreg free
  1733                           
  1734                           ;i2c_display.c: 208:     SSP1BUF = d;
  1735  0014FA  C002  FFC9         	movff	I2C_Write_Display@d,4041	;volatile
  1736  0014FE  0012               	return		;funcret
  1737  001500                     __end_of_I2C_Write_Display:
  1738                           	opt callstack 0
  1739                           
  1740 ;; *************** function _I2C_Master_Stop *****************
  1741 ;; Defined at:
  1742 ;;		line 193 in file "i2c_display.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;		None
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;		None
  1747 ;; Return value:  Size  Location     Type
  1748 ;;                  1    wreg      void 
  1749 ;; Registers used:
  1750 ;;		wreg, status,2, status,0, cstack
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1760 ;;Total ram usage:        0 bytes
  1761 ;; Hardware stack levels used:    1
  1762 ;; Hardware stack levels required when called:    1
  1763 ;; This function calls:
  1764 ;;		_I2C_Master_Wait
  1765 ;; This function is called by:
  1766 ;;		_Lcd_Port
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           	psect	text14
  1771  001500                     __ptext14:
  1772                           	opt callstack 0
  1773  001500                     _I2C_Master_Stop:
  1774                           	opt callstack 25
  1775                           
  1776                           ;i2c_display.c: 195:     I2C_Master_Wait();
  1777                           
  1778                           ;incstack = 0
  1779  001500  EC5E  F00A         	call	_I2C_Master_Wait	;wreg free
  1780                           
  1781                           ;i2c_display.c: 196:     SSP1CON2bits.PEN = 1;
  1782  001504  84C5               	bsf	4037,2,c	;volatile
  1783  001506  0012               	return		;funcret
  1784  001508                     __end_of_I2C_Master_Stop:
  1785                           	opt callstack 0
  1786                           
  1787 ;; *************** function _I2C_Master_Start *****************
  1788 ;; Defined at:
  1789 ;;		line 181 in file "i2c_display.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;		None
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;		None
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, status,2, status,0, cstack
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1807 ;;Total ram usage:        0 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; Hardware stack levels required when called:    1
  1810 ;; This function calls:
  1811 ;;		_I2C_Master_Wait
  1812 ;; This function is called by:
  1813 ;;		_Lcd_Port
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           	psect	text15
  1818  001508                     __ptext15:
  1819                           	opt callstack 0
  1820  001508                     _I2C_Master_Start:
  1821                           	opt callstack 25
  1822                           
  1823                           ;i2c_display.c: 183:     I2C_Master_Wait();
  1824                           
  1825                           ;incstack = 0
  1826  001508  EC5E  F00A         	call	_I2C_Master_Wait	;wreg free
  1827                           
  1828                           ;i2c_display.c: 184:     SSP1CON2bits.SEN = 1;
  1829  00150C  80C5               	bsf	4037,0,c	;volatile
  1830  00150E  0012               	return		;funcret
  1831  001510                     __end_of_I2C_Master_Start:
  1832                           	opt callstack 0
  1833                           
  1834 ;; *************** function _I2C_Master_Wait *****************
  1835 ;; Defined at:
  1836 ;;		line 174 in file "i2c_display.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;		None
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;		None
  1841 ;; Return value:  Size  Location     Type
  1842 ;;                  1    wreg      void 
  1843 ;; Registers used:
  1844 ;;		wreg, status,2, status,0
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1852 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1853 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1854 ;;Total ram usage:        1 bytes
  1855 ;; Hardware stack levels used:    1
  1856 ;; This function calls:
  1857 ;;		Nothing
  1858 ;; This function is called by:
  1859 ;;		_I2C_Master_Start
  1860 ;;		_I2C_Master_Stop
  1861 ;;		_I2C_Write_Display
  1862 ;;		_I2C_Master_RepeatedStart
  1863 ;;		_I2C_Master_Write
  1864 ;;		_I2C_Master_Read
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           	psect	text16
  1869  0014BC                     __ptext16:
  1870                           	opt callstack 0
  1871  0014BC                     _I2C_Master_Wait:
  1872                           	opt callstack 25
  1873                           
  1874                           ;i2c_display.c: 176:    while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
  1875                           
  1876                           ;incstack = 0
  1877  0014BC  B4C7               	btfsc	4039,2,c	;volatile
  1878  0014BE  D7FE               	goto	_I2C_Master_Wait
  1879  0014C0  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  1880  0014C4  0E1F               	movlw	31
  1881  0014C6  1601               	andwf	??_I2C_Master_Wait,f,c
  1882  0014C8  B4D8               	btfsc	status,2,c
  1883  0014CA  0012               	return	
  1884  0014CC  D7F7               	goto	_I2C_Master_Wait
  1885  0014CE                     __end_of_I2C_Master_Wait:
  1886                           	opt callstack 0
  1887                           
  1888 ;; *************** function _USARTWriteString *****************
  1889 ;; Defined at:
  1890 ;;		line 79 in file "usart.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;  str             2    1[COMRAM] PTR const unsigned char 
  1893 ;;		 -> STR_3(8), 
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;		None
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      void 
  1898 ;; Registers used:
  1899 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1905 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1908 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1909 ;;Total ram usage:        2 bytes
  1910 ;; Hardware stack levels used:    1
  1911 ;; Hardware stack levels required when called:    1
  1912 ;; This function calls:
  1913 ;;		_USARTWriteChar
  1914 ;; This function is called by:
  1915 ;;		_main
  1916 ;;		_USARTWriteLine
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           	psect	text17
  1921  00144E                     __ptext17:
  1922                           	opt callstack 0
  1923  00144E                     _USARTWriteString:
  1924                           	opt callstack 29
  1925                           
  1926                           ;usart.c: 79: void USARTWriteString(const char *str);usart.c: 80: {;usart.c: 81:   while
      +                          (*str!='\0')
  1927                           
  1928                           ;incstack = 0
  1929  00144E  D00A               	goto	l1783
  1930  001450                     l1779:
  1931                           
  1932                           ;usart.c: 82:   {;usart.c: 83:       USARTWriteChar(*str);
  1933  001450  C002  FFF6         	movff	USARTWriteString@str,tblptrl
  1934  001454  C003  FFF7         	movff	USARTWriteString@str+1,tblptrh
  1935  001458                     	if	0	;tblptru may be non-zero
  1936  001458                     	endif
  1937  001458                     	if	0	;tblptru may be non-zero
  1938  001458                     	endif
  1939  001458  0008               	tblrd		*
  1940  00145A  50F5               	movf	tablat,w,c
  1941  00145C  EC75  F00A         	call	_USARTWriteChar
  1942                           
  1943                           ;usart.c: 84:       str++;
  1944  001460  4A02               	infsnz	USARTWriteString@str,f,c
  1945  001462  2A03               	incf	USARTWriteString@str+1,f,c
  1946  001464                     l1783:
  1947                           
  1948                           ;usart.c: 81:   while(*str!='\0')
  1949  001464  C002  FFF6         	movff	USARTWriteString@str,tblptrl
  1950  001468  C003  FFF7         	movff	USARTWriteString@str+1,tblptrh
  1951  00146C                     	if	0	;tblptru may be non-zero
  1952  00146C                     	endif
  1953  00146C                     	if	0	;tblptru may be non-zero
  1954  00146C                     	endif
  1955  00146C  0008               	tblrd		*
  1956  00146E  50F5               	movf	tablat,w,c
  1957  001470  0900               	iorlw	0
  1958  001472  B4D8               	btfsc	status,2,c
  1959  001474  0012               	return	
  1960  001476  D7EC               	goto	l1779
  1961  001478                     __end_of_USARTWriteString:
  1962                           	opt callstack 0
  1963                           
  1964 ;; *************** function _USARTWriteChar *****************
  1965 ;; Defined at:
  1966 ;;		line 72 in file "usart.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;  ch              1    wreg     unsigned char 
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;  ch              1    0[COMRAM] unsigned char 
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		wreg
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1981 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1983 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1984 ;;Total ram usage:        1 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; This function calls:
  1987 ;;		Nothing
  1988 ;; This function is called by:
  1989 ;;		_USARTWriteString
  1990 ;;		_USARTWriteLine
  1991 ;;		_USARTWriteInt
  1992 ;;		_USARTGotoNewLine
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           	psect	text18
  1997  0014EA                     __ptext18:
  1998                           	opt callstack 0
  1999  0014EA                     _USARTWriteChar:
  2000                           	opt callstack 29
  2001                           
  2002                           ;incstack = 0
  2003                           ;USARTWriteChar@ch stored from wreg
  2004  0014EA  6E01               	movwf	USARTWriteChar@ch,c
  2005  0014EC                     
  2006                           ;usart.c: 72: void USARTWriteChar(char ch);usart.c: 73: {;usart.c: 74:   while(!PIR1bits
      +                          .TXIF);
  2007  0014EC  A89E               	btfss	3998,4,c	;volatile
  2008  0014EE  D7FE               	goto	l1201
  2009                           
  2010                           ;usart.c: 76:   TXREG=ch;
  2011  0014F0  C001  FFAD         	movff	USARTWriteChar@ch,4013	;volatile
  2012  0014F4  0012               	return		;funcret
  2013  0014F6                     __end_of_USARTWriteChar:
  2014                           	opt callstack 0
  2015                           
  2016                           	psect	rparam
  2017  0000                     tosu	equ	0xFFF
  2018                           tosh	equ	0xFFE
  2019                           tosl	equ	0xFFD
  2020                           stkptr	equ	0xFFC
  2021                           pclatu	equ	0xFFB
  2022                           pclath	equ	0xFFA
  2023                           pcl	equ	0xFF9
  2024                           tblptru	equ	0xFF8
  2025                           tblptrh	equ	0xFF7
  2026                           tblptrl	equ	0xFF6
  2027                           tablat	equ	0xFF5
  2028                           prodh	equ	0xFF4
  2029                           prodl	equ	0xFF3
  2030                           indf0	equ	0xFEF
  2031                           postinc0	equ	0xFEE
  2032                           postdec0	equ	0xFED
  2033                           preinc0	equ	0xFEC
  2034                           plusw0	equ	0xFEB
  2035                           fsr0h	equ	0xFEA
  2036                           fsr0l	equ	0xFE9
  2037                           wreg	equ	0xFE8
  2038                           indf1	equ	0xFE7
  2039                           postinc1	equ	0xFE6
  2040                           postdec1	equ	0xFE5
  2041                           preinc1	equ	0xFE4
  2042                           plusw1	equ	0xFE3
  2043                           fsr1h	equ	0xFE2
  2044                           fsr1l	equ	0xFE1
  2045                           bsr	equ	0xFE0
  2046                           indf2	equ	0xFDF
  2047                           postinc2	equ	0xFDE
  2048                           postdec2	equ	0xFDD
  2049                           preinc2	equ	0xFDC
  2050                           plusw2	equ	0xFDB
  2051                           fsr2h	equ	0xFDA
  2052                           fsr2l	equ	0xFD9
  2053                           status	equ	0xFD8


Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         78
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     25      39
    BANK0           160      0      64
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    USARTWriteString@str	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_3(CODE[8]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_config
    _config->_I2C_Master_Init
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _Cursor_Off->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _Lcd_Port->_I2C_Write_Display
    _I2C_Write_Display->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _USARTWriteString->_USARTWriteChar

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4815
                                             23 COMRAM     2     2      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                   _USARTWriteString
                             _config
 ---------------------------------------------------------------------------------
 (1) _config                                               2     2      0    3187
                                             21 COMRAM     2     2      0
                         _Cursor_Off
                    _I2C_Master_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                          _USARTInit
 ---------------------------------------------------------------------------------
 (2) _USARTInit                                            4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     6     4      2     639
                                              7 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       3     3      0     397
                                              4 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1     777
                                             10 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     551
                                             10 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     355
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _Cursor_Off                                           0     0      0     355
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              6     6      0     355
                                              4 COMRAM     6     6      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     196
                                              3 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                  _I2C_Write_Display
 ---------------------------------------------------------------------------------
 (5) _I2C_Write_Display                                    2     0      2     174
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USARTWriteString                                     2     0      2     212
                                              1 COMRAM     2     0      2
                     _USARTWriteChar
 ---------------------------------------------------------------------------------
 (2) _USARTWriteChar                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Write_Display
           _I2C_Master_Wait
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Write_Display
           _I2C_Master_Wait
   _USARTWriteString
     _USARTWriteChar
   _config
     _Cursor_Off
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _I2C_Master_Init
       ___lldiv
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
       _Lcd_Port
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Write_Display
           _I2C_Master_Wait
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _USARTInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      40       5       40.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     19      27       1       41.1%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      67      12        0.0%
DATA                 0      0      67       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Apr 06 10:54:12 2019

        USARTInit@baud_rate 0001                __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000  
              __CFG_CP2$OFF 000000                __CFG_CP3$OFF 000000          I2C_Write_Display@d 0002  
                       l246 124A                         l399 115A                __CFG_CPB$OFF 000000  
                       u520 111C                __CFG_CPD$OFF 000000                         u545 128C  
                       u807 1196                         u817 11AC                         u737 12E0  
                       u827 1436                         u747 1304                         u757 1094  
                       u767 10DA                         u777 133E                         u787 135C  
                       u797 117C                         wreg 000FE8                  _TXSTA1bits 000FAC  
                _TXSTA2bits 000F72                __CFG_LVP$OFF 000000                        l1201 14EC  
                      l1735 1394                        l1657 110C                        l1745 13C6  
                      l1659 1118                        l1691 11FA                        l1669 114C  
                      l1749 13E6                        l1685 11EE                        l1837 12C0  
                      l1783 1464                        l1687 11F2                        l1695 1200  
                      l1689 11F6                        l1779 1450                        l1973 1224  
                      l1975 122E                        l1977 1238                        l1979 1242  
                      STR_1 100F                        STR_2 1009                        STR_3 1001  
                      _LATA 000F89                        _LATB 000F8A                        _LATC 000F8B  
                      _LATD 000F8C                        _LATE 000F8D                        _PEIE 007F96  
    __end_of_USARTWriteChar 14F6                        _data 0024           ?_Lcd_Write_String 0008  
                      _main 12BC               __CFG_BORV$190 000000                        start 0000  
        ??_Lcd_Write_String 000A               __CFG_IESO$OFF 000000             __end_of_Lcd_Cmd 144E  
              ___param_bank 000000            ?_I2C_Master_Init 000E            ?_I2C_Master_Wait 0001  
              _BAUDCON2bits 000F70            ?_I2C_Master_Stop 0001                       ?_main 0001  
           __end_of___lldiv 116C            USARTWriteChar@ch 0001                       _RCREG 000FAE  
                     _PORTA 000F80                       _PORTB 000F81                       _PORTC 000F82  
                     _PORTD 000F83                       _PORTE 000F84     __size_of_Lcd_Set_Cursor 0050  
                     _TRISA 000F92                       _TRISB 000F93                       _TRISC 000F94  
                     _TRISD 000F95                       _TRISE 000F96                       _TXREG 000FAD  
                     _UQEnd 0026               __CFG_WRT0$OFF 000000               __CFG_WRT1$OFF 000000  
             __CFG_WRT2$OFF 000000               __CFG_WRT3$OFF 000000              __CFG_EBTR0$OFF 000000  
            __CFG_FCMEN$OFF 000000              __CFG_EBTR1$OFF 000000              __CFG_EBTR2$OFF 000000  
            __CFG_EBTR3$OFF 000000               __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000  
             __CFG_WRTD$OFF 000000              __CFG_EBTRB$OFF 000000          __CFG_MCLRE$EXTMCLR 000000  
            __CFG_BOREN$OFF 000000                       tablat 000FF5          __size_of_USARTInit 007A  
           ?_USARTWriteChar 0001                       status 000FD8              __CFG_HFOFST$ON 000000  
          __end_of_Lcd_Init 11E8            __end_of_Lcd_Port 14BC             __initialization 1478  
              __end_of_main 1314                  _Cursor_Off 14DC                      ??_main 0018  
        __size_of_Lcd_Clear 000E               __activetblptr 000002           ?_I2C_Master_Start 0001  
        ??_I2C_Master_Start 0002                      _ANSELA 000F38                      _ANSELB 000F39  
                    _ANSELC 000F3A                      _ANSELD 000F3B                      _ANSELE 000F3C  
            __CFG_WDTEN$OFF 000000                   ??_Lcd_Cmd 0005                      _SPBRG1 000FAF  
                    _SPBRG2 000F75     __size_of_Lcd_Write_Char 0058                      _SSPBUF 000FC9  
                    _TXREG2 000F73                      _URBuff 0060              __CFG_XINST$OFF 000000  
                 ??___lldiv 0009                      _config 1016    __end_of_USARTWriteString 1478  
                    clear_0 147E                      clear_1 148A           __end_of_USARTInit 1262  
              __mediumconst 0000                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8             Lcd_Set_Cursor@a 000C             Lcd_Set_Cursor@b 000B  
           Lcd_Set_Cursor@y 000E             Lcd_Set_Cursor@z 000D                  __accesstop 0060  
   __end_of__initialization 1490             __CFG_PBADEN$OFF 000000           __end_of_Lcd_Clear 14DC  
             ___rparam_used 000001              __pcstackCOMRAM 0001                 ?_Cursor_Off 0001  
            _Lcd_Set_Cursor 136C                   ?_Lcd_Init 0001                   ?_Lcd_Port 0001  
                __pbssBANK0 0060             __CFG_PLLCFG$OFF 000000          __CFG_CCP2MX$PORTC1 000000  
        __CFG_CCP3MX$PORTB5 000000                     ?_config 0001           _I2C_Write_Display 14F6  
 __size_of_Lcd_Write_String 004A      __end_of_Lcd_Set_Cursor 13BC          ?_I2C_Write_Display 0002  
                   _SPBRGH2 000F76         ??_I2C_Write_Display 0004                  ??_Lcd_Init 000B  
          ??_USARTWriteChar 0001                     _SSP1ADD 000FC8                     _SSP1BUF 000FC9  
                ??_Lcd_Port 0004          USARTWriteInt@F6042 001F                     _UQFront 0027  
            _Lcd_Write_Char 1314                     _Lcd_Cmd 1406         __size_of_Cursor_Off 000E  
           __CFG_PWRTEN$OFF 000000                     __Hparam 0000                     __Lparam 0000  
 __end_of_I2C_Write_Display 1500                     ___lldiv 10EA                __psmallconst 1000  
           __size_of_config 00D4             __CFG_STVREN$OFF 000000                     __pcinit 1478  
                   __ramtop 1000             ?_Lcd_Set_Cursor 000B                     __ptext0 12BC  
                   __ptext1 1016                     __ptext2 11E8                     __ptext3 13BC  
                   __ptext4 1314                     __ptext5 136C                     __ptext6 116C  
                   __ptext7 14CE                     __ptext8 1262                     __ptext9 10EA  
  __size_of_I2C_Master_Init 005A    __size_of_I2C_Master_Wait 0012    __size_of_I2C_Master_Stop 0008  
    __end_of_Lcd_Write_Char 136C        end_of_initialization 1490               __Lmediumconst 0000  
 __size_of_I2C_Master_Start 0008             ___lldiv@divisor 0005             ___lldiv@counter 000D  
          I2C_Master_Init@c 000E                     postinc0 000FEE           ?_USARTWriteString 0002  
                 _PORTBbits 000F81          ??_USARTWriteString 0004                   _USARTInit 11E8  
                 _TRISCbits 000F94                   _TRISDbits 000F95             ?_Lcd_Write_Char 0001  
         Lcd_Write_String@a 0008           Lcd_Write_String@i 000C                   _Lcd_Clear 14CE  
__size_of_I2C_Write_Display 000A                ??_Cursor_Off 000B            _Lcd_Write_String 13BC  
            __end_of_config 10EA         start_initialization 1478                  ?_USARTInit 0001  
         __size_of_Lcd_Init 007C           __size_of_Lcd_Port 0022           ??_I2C_Master_Init 0012  
         ??_I2C_Master_Wait 0001           ??_I2C_Master_Stop 0002          __end_of_Cursor_Off 14EA  
                ?_Lcd_Clear 0001                    ??_config 0016             Lcd_Write_Char@a 0005  
           Lcd_Write_Char@y 0006                 __pbssCOMRAM 001A                    ?_Lcd_Cmd 0001  
          _I2C_Master_Start 1508            ??_Lcd_Set_Cursor 000C                    ?___lldiv 0001  
          __CFG_PRICLKEN$ON 000000         USART2WriteInt@F6062 001A                 __smallconst 1000  
               ??_USARTInit 0003                    _PIE1bits 000F9D                    _PIE3bits 000FA3  
                  Lcd_Cmd@a 000A                    _PIR1bits 000F9E                    _PIR3bits 000FA4  
               ??_Lcd_Clear 000B            __CFG_WDTPS$32768 000000                    _SSP1CON1 000FC6  
                  _SSP1CON2 000FC5                    _SSP1STAT 000FC7            ??_Lcd_Write_Char 0005  
                  _Lcd_Init 116C                    _Lcd_Port 149A   __size_of_USARTWriteString 002A  
  __end_of_Lcd_Write_String 1406            __size_of_Lcd_Cmd 0048                Lcd_Port@data 0004  
   __size_of_USARTWriteChar 000C                    __Hrparam 0000                    __Lrparam 0000  
         __CFG_P2BMX$PORTD2 000000            __size_of___lldiv 0082             _I2C_Master_Init 1262  
           _I2C_Master_Wait 14BC             _I2C_Master_Stop 1500                    __ptext10 14DC  
                  __ptext11 1406                    __ptext12 149A                    __ptext13 14F6  
                  __ptext14 1500                    __ptext15 1508                    __ptext16 14BC  
                  __ptext17 144E                    __ptext18 14EA                _SSP1CON2bits 000FC5  
               Lcd_Cmd@buff 0008               __size_of_main 0058    __end_of_I2C_Master_Start 1510  
               _OSCTUNEbits 000F9B                  _INTCONbits 000FF2          Lcd_Write_Char@temp 0007  
          ___lldiv@dividend 0001                  _RCSTA1bits 000FAB                  _RCSTA2bits 000F71  
                _OSCCONbits 000FD3         USARTWriteString@str 0002     __end_of_I2C_Master_Init 12BC  
   __end_of_I2C_Master_Wait 14CE     __end_of_I2C_Master_Stop 1508          Lcd_Set_Cursor@temp 000F  
          ___lldiv@quotient 0009           __CFG_T3CMX$PORTC0 000000            _USARTWriteString 144E  
         __CFG_FOSC$INTIO67 000000              _USARTWriteChar 14EA  
