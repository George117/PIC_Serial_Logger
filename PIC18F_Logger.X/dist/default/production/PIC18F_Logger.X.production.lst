

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Apr 06 12:02:35 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40  0000                     
    41                           ; Version 2.05
    42                           ; Generated 20/12/2018 GMT
    43                           ; 
    44                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F46K22 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     _ANSELE	set	3900
    76  0000                     _ANSELD	set	3899
    77  0000                     _ANSELC	set	3898
    78  0000                     _ANSELB	set	3897
    79  0000                     _ANSELA	set	3896
    80  0000                     _TXREG2	set	3955
    81  0000                     _PIR3bits	set	4004
    82  0000                     _PIE3bits	set	4003
    83  0000                     _RCSTA2bits	set	3953
    84  0000                     _TXSTA2bits	set	3954
    85  0000                     _SPBRG2	set	3957
    86  0000                     _SPBRGH2	set	3958
    87  0000                     _BAUDCON2bits	set	3952
    88  0000                     _TRISDbits	set	3989
    89  0000                     _RCREG	set	4014
    90  0000                     _PORTBbits	set	3969
    91  0000                     _PIR1bits	set	3998
    92  0000                     _PIE1bits	set	3997
    93  0000                     _RCSTA1bits	set	4011
    94  0000                     _TXSTA1bits	set	4012
    95  0000                     _SPBRG1	set	4015
    96  0000                     _TXREG	set	4013
    97  0000                     _SSPBUF	set	4041
    98  0000                     _SSP1BUF	set	4041
    99  0000                     _SSP1CON2bits	set	4037
   100  0000                     _SSP1STAT	set	4039
   101  0000                     _SSP1ADD	set	4040
   102  0000                     _SSP1CON2	set	4037
   103  0000                     _SSP1CON1	set	4038
   104  0000                     _TRISCbits	set	3988
   105  0000                     _LATE	set	3981
   106  0000                     _LATD	set	3980
   107  0000                     _LATC	set	3979
   108  0000                     _LATB	set	3978
   109  0000                     _LATA	set	3977
   110  0000                     _PORTE	set	3972
   111  0000                     _PORTD	set	3971
   112  0000                     _PORTC	set	3970
   113  0000                     _PORTB	set	3969
   114  0000                     _PORTA	set	3968
   115  0000                     _TRISE	set	3990
   116  0000                     _TRISD	set	3989
   117  0000                     _TRISC	set	3988
   118  0000                     _TRISB	set	3987
   119  0000                     _TRISA	set	3986
   120  0000                     _INTCONbits	set	4082
   121  0000                     _OSCTUNEbits	set	3995
   122  0000                     _OSCCONbits	set	4051
   123  0000                     _PEIE	set	32662
   124                           
   125                           	psect	smallconst
   126  001000                     __psmallconst:
   127                           	opt callstack 0
   128  001000  00                 	db	0
   129  001001                     STR_1:
   130  001001  25                 	db	37
   131  001002  75                 	db	117	;'u'
   132  001003  00                 	db	0
   133                           
   134                           ; #config settings
   135  001004  00                 	db	0	; dummy byte at the end
   136  0000                     
   137                           	psect	cinit
   138  001B2C                     __pcinit:
   139                           	opt callstack 0
   140  001B2C                     start_initialization:
   141                           	opt callstack 0
   142  001B2C                     __initialization:
   143                           	opt callstack 0
   144                           
   145                           ; Clear objects allocated to BANK0 (126 bytes)
   146  001B2C  EE00  F060         	lfsr	0,__pbssBANK0
   147  001B30  0E7E               	movlw	126
   148  001B32                     clear_0:
   149  001B32  6AEE               	clrf	postinc0,c
   150  001B34  06E8               	decf	wreg,f,c
   151  001B36  E1FD               	bnz	clear_0
   152  001B38                     end_of_initialization:
   153                           	opt callstack 0
   154  001B38                     __end_of__initialization:
   155                           	opt callstack 0
   156  001B38  0E00               	movlw	low (__Lmediumconst shr (0+16))
   157  001B3A  6EF8               	movwf	tblptru,c
   158  001B3C  0100               	movlb	0
   159  001B3E  EF0C  F00C         	goto	_main	;jump to C main() function
   160                           
   161                           	psect	bssBANK0
   162  000060                     __pbssBANK0:
   163                           	opt callstack 0
   164  000060                     _URBuff:
   165                           	opt callstack 0
   166  000060                     	ds	64
   167  0000A0                     	ds	5
   168  0000A5                     	ds	5
   169  0000AA                     _nout:
   170                           	opt callstack 0
   171  0000AA                     	ds	2
   172  0000AC                     _width:
   173                           	opt callstack 0
   174  0000AC                     	ds	2
   175  0000AE                     _prec:
   176                           	opt callstack 0
   177  0000AE                     	ds	2
   178  0000B0                     _flags:
   179                           	opt callstack 0
   180  0000B0                     	ds	2
   181  0000B2                     _data:
   182                           	opt callstack 0
   183  0000B2                     	ds	2
   184  0000B4                     _UQEnd:
   185                           	opt callstack 0
   186  0000B4                     	ds	1
   187  0000B5                     _UQFront:
   188                           	opt callstack 0
   189  0000B5                     	ds	1
   190  0000B6                     _dbuf:
   191                           	opt callstack 0
   192  0000B6                     	ds	32
   193  0000D6                     _str_i:
   194                           	opt callstack 0
   195  0000D6                     	ds	8
   196                           
   197                           	psect	cstackBANK0
   198  0000DE                     __pcstackBANK0:
   199                           	opt callstack 0
   200  0000DE                     	ds	2
   201  0000E0                     sprintf@ap:
   202                           	opt callstack 0
   203                           
   204                           ; 2 bytes @ 0x2
   205  0000E0                     	ds	2
   206  0000E2                     sprintf@f:
   207                           	opt callstack 0
   208                           
   209                           ; 6 bytes @ 0x4
   210  0000E2                     	ds	6
   211                           
   212                           	psect	cstackCOMRAM
   213  000001                     __pcstackCOMRAM:
   214                           	opt callstack 0
   215  000001                     ??_I2C_Master_Wait:
   216  000001                     ?_strlen:
   217                           	opt callstack 0
   218  000001                     ?___lldiv:
   219                           	opt callstack 0
   220  000001                     ?___lodiv:
   221                           	opt callstack 0
   222  000001                     ?___lomod:
   223                           	opt callstack 0
   224  000001                     USARTInit@baud_rate:
   225                           	opt callstack 0
   226  000001                     fputc@c:
   227                           	opt callstack 0
   228  000001                     strlen@s:
   229                           	opt callstack 0
   230  000001                     ___lldiv@dividend:
   231                           	opt callstack 0
   232  000001                     ___lodiv@dividend:
   233                           	opt callstack 0
   234  000001                     ___lomod@dividend:
   235                           	opt callstack 0
   236                           
   237                           ; 8 bytes @ 0x0
   238  000001                     	ds	1
   239  000002                     I2C_Write_Display@d:
   240                           	opt callstack 0
   241                           
   242                           ; 2 bytes @ 0x1
   243  000002                     	ds	1
   244  000003                     ??_USARTInit:
   245  000003                     fputc@fp:
   246                           	opt callstack 0
   247  000003                     strlen@a:
   248                           	opt callstack 0
   249                           
   250                           ; 2 bytes @ 0x2
   251  000003                     	ds	1
   252  000004                     Lcd_Port@data:
   253                           	opt callstack 0
   254                           
   255                           ; 1 bytes @ 0x3
   256  000004                     	ds	1
   257  000005                     ??_fputc:
   258  000005                     ??_Lcd_Cmd:
   259  000005                     Lcd_Write_Char@a:
   260                           	opt callstack 0
   261  000005                     ___lldiv@divisor:
   262                           	opt callstack 0
   263                           
   264                           ; 4 bytes @ 0x4
   265  000005                     	ds	1
   266  000006                     Lcd_Write_Char@y:
   267                           	opt callstack 0
   268                           
   269                           ; 1 bytes @ 0x5
   270  000006                     	ds	1
   271  000007                     Lcd_Write_Char@temp:
   272                           	opt callstack 0
   273                           
   274                           ; 1 bytes @ 0x6
   275  000007                     	ds	1
   276  000008                     Lcd_Cmd@buff:
   277                           	opt callstack 0
   278  000008                     Lcd_Write_String@a:
   279                           	opt callstack 0
   280                           
   281                           ; 2 bytes @ 0x7
   282  000008                     	ds	1
   283  000009                     ___lldiv@quotient:
   284                           	opt callstack 0
   285  000009                     ___lodiv@divisor:
   286                           	opt callstack 0
   287  000009                     ___lomod@divisor:
   288                           	opt callstack 0
   289                           
   290                           ; 8 bytes @ 0x8
   291  000009                     	ds	1
   292  00000A                     Lcd_Cmd@a:
   293                           	opt callstack 0
   294  00000A                     Lcd_Write_String@i:
   295                           	opt callstack 0
   296  00000A                     fputs@s:
   297                           	opt callstack 0
   298                           
   299                           ; 2 bytes @ 0x9
   300  00000A                     	ds	1
   301  00000B                     ??_Lcd_Init:
   302  00000B                     Lcd_Set_Cursor@b:
   303                           	opt callstack 0
   304                           
   305                           ; 1 bytes @ 0xA
   306  00000B                     	ds	1
   307  00000C                     Lcd_Set_Cursor@a:
   308                           	opt callstack 0
   309  00000C                     fputs@fp:
   310                           	opt callstack 0
   311                           
   312                           ; 2 bytes @ 0xB
   313  00000C                     	ds	1
   314  00000D                     Lcd_Set_Cursor@z:
   315                           	opt callstack 0
   316  00000D                     ___lldiv@counter:
   317                           	opt callstack 0
   318                           
   319                           ; 1 bytes @ 0xC
   320  00000D                     	ds	1
   321  00000E                     Lcd_Set_Cursor@y:
   322                           	opt callstack 0
   323  00000E                     fputs@c:
   324                           	opt callstack 0
   325  00000E                     I2C_Master_Init@c:
   326                           	opt callstack 0
   327                           
   328                           ; 4 bytes @ 0xD
   329  00000E                     	ds	1
   330  00000F                     Lcd_Set_Cursor@temp:
   331                           	opt callstack 0
   332  00000F                     fputs@i:
   333                           	opt callstack 0
   334                           
   335                           ; 2 bytes @ 0xE
   336  00000F                     	ds	2
   337  000011                     ?_pad:
   338                           	opt callstack 0
   339  000011                     ___lomod@counter:
   340                           	opt callstack 0
   341  000011                     pad@fp:
   342                           	opt callstack 0
   343  000011                     ___lodiv@quotient:
   344                           	opt callstack 0
   345                           
   346                           ; 8 bytes @ 0x10
   347  000011                     	ds	1
   348  000012                     ??_I2C_Master_Init:
   349                           
   350                           ; 1 bytes @ 0x11
   351  000012                     	ds	1
   352  000013                     pad@buf:
   353                           	opt callstack 0
   354                           
   355                           ; 2 bytes @ 0x12
   356  000013                     	ds	2
   357  000015                     pad@p:
   358                           	opt callstack 0
   359                           
   360                           ; 2 bytes @ 0x14
   361  000015                     	ds	1
   362  000016                     ??_config:
   363                           
   364                           ; 1 bytes @ 0x15
   365  000016                     	ds	1
   366  000017                     ??_pad:
   367                           
   368                           ; 1 bytes @ 0x16
   369  000017                     	ds	1
   370  000018                     pad@i:
   371                           	opt callstack 0
   372                           
   373                           ; 2 bytes @ 0x17
   374  000018                     	ds	1
   375  000019                     ___lodiv@counter:
   376                           	opt callstack 0
   377                           
   378                           ; 1 bytes @ 0x18
   379  000019                     	ds	1
   380  00001A                     pad@w:
   381                           	opt callstack 0
   382                           
   383                           ; 2 bytes @ 0x19
   384  00001A                     	ds	2
   385  00001C                     ?_utoa:
   386                           	opt callstack 0
   387  00001C                     utoa@fp:
   388                           	opt callstack 0
   389                           
   390                           ; 2 bytes @ 0x1B
   391  00001C                     	ds	2
   392  00001E                     utoa@d:
   393                           	opt callstack 0
   394                           
   395                           ; 8 bytes @ 0x1D
   396  00001E                     	ds	8
   397  000026                     ??_utoa:
   398                           
   399                           ; 1 bytes @ 0x25
   400  000026                     	ds	8
   401  00002E                     utoa@p:
   402                           	opt callstack 0
   403                           
   404                           ; 2 bytes @ 0x2D
   405  00002E                     	ds	2
   406  000030                     utoa@w:
   407                           	opt callstack 0
   408                           
   409                           ; 2 bytes @ 0x2F
   410  000030                     	ds	2
   411  000032                     utoa@n:
   412                           	opt callstack 0
   413                           
   414                           ; 8 bytes @ 0x31
   415  000032                     	ds	8
   416  00003A                     utoa@i:
   417                           	opt callstack 0
   418                           
   419                           ; 2 bytes @ 0x39
   420  00003A                     	ds	2
   421  00003C                     ?_vfpfcnvrt:
   422                           	opt callstack 0
   423  00003C                     vfpfcnvrt@fp:
   424                           	opt callstack 0
   425                           
   426                           ; 2 bytes @ 0x3B
   427  00003C                     	ds	2
   428  00003E                     vfpfcnvrt@fmt:
   429                           	opt callstack 0
   430                           
   431                           ; 2 bytes @ 0x3D
   432  00003E                     	ds	2
   433  000040                     vfpfcnvrt@ap:
   434                           	opt callstack 0
   435                           
   436                           ; 2 bytes @ 0x3F
   437  000040                     	ds	2
   438  000042                     ??_vfpfcnvrt:
   439                           
   440                           ; 1 bytes @ 0x41
   441  000042                     	ds	4
   442  000046                     vfpfcnvrt@llu:
   443                           	opt callstack 0
   444                           
   445                           ; 8 bytes @ 0x45
   446  000046                     	ds	8
   447  00004E                     ?_vfprintf:
   448                           	opt callstack 0
   449  00004E                     vfprintf@fp:
   450                           	opt callstack 0
   451                           
   452                           ; 2 bytes @ 0x4D
   453  00004E                     	ds	2
   454  000050                     vfprintf@fmt:
   455                           	opt callstack 0
   456                           
   457                           ; 2 bytes @ 0x4F
   458  000050                     	ds	2
   459  000052                     vfprintf@ap:
   460                           	opt callstack 0
   461                           
   462                           ; 2 bytes @ 0x51
   463  000052                     	ds	2
   464  000054                     vfprintf@cfmt:
   465                           	opt callstack 0
   466                           
   467                           ; 2 bytes @ 0x53
   468  000054                     	ds	2
   469  000056                     ?_sprintf:
   470                           	opt callstack 0
   471  000056                     sprintf@s:
   472                           	opt callstack 0
   473                           
   474                           ; 2 bytes @ 0x55
   475  000056                     	ds	2
   476  000058                     sprintf@fmt:
   477                           	opt callstack 0
   478                           
   479                           ; 2 bytes @ 0x57
   480  000058                     	ds	4
   481  00005C                     ??_main:
   482                           
   483                           ; 1 bytes @ 0x5B
   484  00005C                     	ds	2
   485  00005E                     main@i:
   486                           	opt callstack 0
   487                           
   488                           ; 2 bytes @ 0x5D
   489  00005E                     	ds	2
   490                           
   491 ;;
   492 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   493 ;;
   494 ;; *************** function _main *****************
   495 ;; Defined at:
   496 ;;		line 17 in file "main.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;		None
   499 ;; Auto vars:     Size  Location     Type
   500 ;;  i               2   93[COMRAM] int 
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      void 
   503 ;; Registers used:
   504 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   505 ;; Tracked objects:
   506 ;;		On entry : 0/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   511 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   512 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   513 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   514 ;;Total ram usage:        4 bytes
   515 ;; Hardware stack levels required when called:    8
   516 ;; This function calls:
   517 ;;		_Lcd_Set_Cursor
   518 ;;		_Lcd_Write_String
   519 ;;		_config
   520 ;;		_sprintf
   521 ;; This function is called by:
   522 ;;		Startup code after reset
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526                           	psect	text0
   527  001818                     __ptext0:
   528                           	opt callstack 0
   529  001818                     _main:
   530                           	opt callstack 23
   531                           
   532                           ;main.c: 18:     config();
   533                           
   534                           ;incstack = 0
   535  001818  ECF7  F009         	call	_config	;wreg free
   536  00181C                     l2356:
   537                           
   538                           ;main.c: 22:     {;main.c: 23:         for(int i=0;i<256;i++)
   539  00181C  0E00               	movlw	0
   540  00181E  6E5F               	movwf	main@i+1,c
   541  001820  0E00               	movlw	0
   542  001822  6E5E               	movwf	main@i,c
   543  001824                     l197:
   544                           
   545                           ;main.c: 24:         {;main.c: 25:             TXREG=i;
   546  001824  C05E  FFAD         	movff	main@i,4013	;volatile
   547                           
   548                           ;main.c: 26:             _delay((unsigned long)((100)*(64000000/4000.0)));
   549  001828  0E09               	movlw	9
   550  00182A  6E5D               	movwf	(??_main+1)& (0+255),c
   551  00182C  0E1E               	movlw	30
   552  00182E  6E5C               	movwf	??_main& (0+255),c
   553  001830  0EE4               	movlw	228
   554  001832                     u1677:
   555  001832  2EE8               	decfsz	wreg,f,c
   556  001834  D7FE               	bra	u1677
   557  001836  2E5C               	decfsz	??_main& (0+255),f,c
   558  001838  D7FC               	bra	u1677
   559  00183A  2E5D               	decfsz	(??_main+1)& (0+255),f,c
   560  00183C  D7FA               	bra	u1677
   561  00183E  D000               	nop2	
   562                           
   563                           ;main.c: 27:             Lcd_Set_Cursor(1,1);
   564  001840  0E01               	movlw	1
   565  001842  6E0B               	movwf	Lcd_Set_Cursor@b,c
   566  001844  0E01               	movlw	1
   567  001846  ECEE  F00C         	call	_Lcd_Set_Cursor
   568                           
   569                           ;main.c: 28:             sprintf(str_i, "%u", i);
   570  00184A  0ED6               	movlw	low _str_i
   571  00184C  6E56               	movwf	sprintf@s,c
   572  00184E  0E00               	movlw	high _str_i
   573  001850  6E57               	movwf	sprintf@s+1,c
   574  001852  0E01               	movlw	low STR_1
   575  001854  6E58               	movwf	sprintf@fmt,c
   576  001856  0E10               	movlw	high STR_1
   577  001858  6E59               	movwf	sprintf@fmt+1,c
   578  00185A  C05E  F05A         	movff	main@i,?_sprintf+4
   579  00185E  C05F  F05B         	movff	main@i+1,?_sprintf+5
   580  001862  ECC5  F00C         	call	_sprintf	;wreg free
   581                           
   582                           ;main.c: 29:             Lcd_Write_String(str_i);
   583  001866  0ED6               	movlw	low _str_i
   584  001868  6E08               	movwf	Lcd_Write_String@a,c
   585  00186A  0E00               	movlw	high _str_i
   586  00186C  6E09               	movwf	Lcd_Write_String@a+1,c
   587  00186E  EC56  F00D         	call	_Lcd_Write_String	;wreg free
   588                           
   589                           ;main.c: 30:         }
   590  001872  4A5E               	infsnz	main@i,f,c
   591  001874  2A5F               	incf	main@i+1,f,c
   592  001876  BE5F               	btfsc	main@i+1,7,c
   593  001878  D7D5               	goto	l197
   594  00187A  045F               	decf	main@i+1,w,c
   595  00187C  B0D8               	btfsc	status,0,c
   596  00187E  D7CE               	goto	l2356
   597  001880  D7D1               	goto	l197
   598  001882                     __end_of_main:
   599                           	opt callstack 0
   600                           
   601 ;; *************** function _sprintf *****************
   602 ;; Defined at:
   603 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;  s               2   85[COMRAM] PTR unsigned char 
   606 ;;		 -> str_i(8), 
   607 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
   608 ;;		 -> STR_1(3), 
   609 ;; Auto vars:     Size  Location     Type
   610 ;;  f               6    4[BANK0 ] struct _IO_FILE
   611 ;;  ap              2    2[BANK0 ] PTR void [1]
   612 ;;		 -> ?_sprintf(2), 
   613 ;;  ret             2    0        int 
   614 ;; Return value:  Size  Location     Type
   615 ;;                  2   85[COMRAM] int 
   616 ;; Registers used:
   617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   623 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   624 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   626 ;;      Totals:         6      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   627 ;;Total ram usage:       16 bytes
   628 ;; Hardware stack levels used:    1
   629 ;; Hardware stack levels required when called:    7
   630 ;; This function calls:
   631 ;;		_vfprintf
   632 ;; This function is called by:
   633 ;;		_main
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           	psect	text1
   638  00198A                     __ptext1:
   639                           	opt callstack 0
   640  00198A                     _sprintf:
   641                           	opt callstack 23
   642                           
   643                           ;incstack = 0
   644  00198A  0E5A               	movlw	low (?_sprintf+4)
   645  00198C  0100               	movlb	0	; () banked
   646  00198E  6FE0               	movwf	sprintf@ap& (0+255),b
   647  001990  0E00               	movlw	high (?_sprintf+4)
   648  001992  6FE1               	movwf	(sprintf@ap+1)& (0+255),b
   649  001994  C056  F0E2         	movff	sprintf@s,sprintf@f
   650  001998  C057  F0E3         	movff	sprintf@s+1,sprintf@f+1
   651                           
   652                           ; BSR set to: 0
   653  00199C  0E00               	movlw	0
   654  00199E  6FE5               	movwf	(sprintf@f+3)& (0+255),b
   655  0019A0  0E00               	movlw	0
   656  0019A2  6FE4               	movwf	(sprintf@f+2)& (0+255),b
   657                           
   658                           ; BSR set to: 0
   659  0019A4  0E00               	movlw	0
   660  0019A6  6FE7               	movwf	(sprintf@f+5)& (0+255),b
   661  0019A8  0E00               	movlw	0
   662  0019AA  6FE6               	movwf	(sprintf@f+4)& (0+255),b
   663                           
   664                           ; BSR set to: 0
   665  0019AC  0EE2               	movlw	low sprintf@f
   666  0019AE  6E4E               	movwf	vfprintf@fp,c
   667  0019B0  0E00               	movlw	high sprintf@f
   668  0019B2  6E4F               	movwf	vfprintf@fp+1,c
   669  0019B4  C058  F050         	movff	sprintf@fmt,vfprintf@fmt
   670  0019B8  C059  F051         	movff	sprintf@fmt+1,vfprintf@fmt+1
   671  0019BC  0EE0               	movlw	low sprintf@ap
   672  0019BE  6E52               	movwf	vfprintf@ap,c
   673  0019C0  0E00               	movlw	high sprintf@ap
   674  0019C2  6E53               	movwf	vfprintf@ap+1,c
   675  0019C4  EC9A  F00C         	call	_vfprintf	;wreg free
   676  0019C8  0100               	movlb	0	; () banked
   677  0019CA  51E4               	movf	(sprintf@f+2)& (0+255),w,b
   678  0019CC  2456               	addwf	sprintf@s,w,c
   679  0019CE  6ED9               	movwf	fsr2l,c
   680  0019D0  51E5               	movf	(sprintf@f+3)& (0+255),w,b
   681  0019D2  2057               	addwfc	sprintf@s+1,w,c
   682  0019D4  6EDA               	movwf	fsr2h,c
   683  0019D6  0E00               	movlw	0
   684  0019D8  6EDF               	movwf	indf2,c
   685                           
   686                           ; BSR set to: 0
   687  0019DA  0012               	return		;funcret
   688  0019DC                     __end_of_sprintf:
   689                           	opt callstack 0
   690                           
   691 ;; *************** function _vfprintf *****************
   692 ;; Defined at:
   693 ;;		line 1368 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;  fp              2   77[COMRAM] PTR struct _IO_FILE
   696 ;;		 -> sprintf@f(6), 
   697 ;;  fmt             2   79[COMRAM] PTR const unsigned char 
   698 ;;		 -> STR_1(3), 
   699 ;;  ap              2   81[COMRAM] PTR PTR void 
   700 ;;		 -> sprintf@ap(2), 
   701 ;; Auto vars:     Size  Location     Type
   702 ;;  cfmt            2   83[COMRAM] PTR unsigned char 
   703 ;;		 -> STR_1(3), 
   704 ;; Return value:  Size  Location     Type
   705 ;;                  2   77[COMRAM] int 
   706 ;; Registers used:
   707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   713 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   714 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   716 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   717 ;;Total ram usage:        8 bytes
   718 ;; Hardware stack levels used:    1
   719 ;; Hardware stack levels required when called:    6
   720 ;; This function calls:
   721 ;;		_vfpfcnvrt
   722 ;; This function is called by:
   723 ;;		_sprintf
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727                           	psect	text2
   728  001934                     __ptext2:
   729                           	opt callstack 0
   730  001934                     _vfprintf:
   731                           	opt callstack 23
   732                           
   733                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);D:\Program Files\Microchip\xc8\v2.05\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
   734                           
   735                           ; BSR set to: 0
   736                           ;incstack = 0
   737  001934  C050  F054         	movff	vfprintf@fmt,vfprintf@cfmt
   738  001938  C051  F055         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   739                           
   740                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
   741  00193C  0E00               	movlw	0
   742  00193E  0100               	movlb	0	; () banked
   743  001940  6FAB               	movwf	(_nout+1)& (0+255),b
   744  001942  0E00               	movlw	0
   745  001944  6FAA               	movwf	_nout& (0+255),b
   746                           
   747                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
   748  001946  D013               	goto	l2216
   749  001948                     l2214:
   750                           
   751                           ; BSR set to: 0
   752                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
   753  001948  C04E  F03C         	movff	vfprintf@fp,vfpfcnvrt@fp
   754  00194C  C04F  F03D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   755  001950  0E54               	movlw	low vfprintf@cfmt
   756  001952  6E3E               	movwf	vfpfcnvrt@fmt,c
   757  001954  0E00               	movlw	high vfprintf@cfmt
   758  001956  6E3F               	movwf	vfpfcnvrt@fmt+1,c
   759  001958  C052  F040         	movff	vfprintf@ap,vfpfcnvrt@ap
   760  00195C  C053  F041         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   761  001960  ECDB  F008         	call	_vfpfcnvrt	;wreg free
   762  001964  503C               	movf	?_vfpfcnvrt,w,c
   763  001966  0100               	movlb	0	; () banked
   764  001968  27AA               	addwf	_nout& (0+255),f,b
   765  00196A  503D               	movf	?_vfpfcnvrt+1,w,c
   766  00196C  23AB               	addwfc	(_nout+1)& (0+255),f,b
   767  00196E                     l2216:
   768                           
   769                           ; BSR set to: 0
   770                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
   771  00196E  C054  FFF6         	movff	vfprintf@cfmt,tblptrl
   772  001972  C055  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   773  001976                     	if	0	;tblptru may be non-zero
   774  001976                     	endif
   775  001976                     	if	0	;tblptru may be non-zero
   776  001976                     	endif
   777  001976  0008               	tblrd		*
   778  001978  50F5               	movf	tablat,w,c
   779  00197A  0900               	iorlw	0
   780  00197C  A4D8               	btfss	status,2,c
   781  00197E  D7E4               	goto	l2214
   782                           
   783                           ; BSR set to: 0
   784                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
   785  001980  C0AA  F04E         	movff	_nout,?_vfprintf
   786  001984  C0AB  F04F         	movff	_nout+1,?_vfprintf+1
   787                           
   788                           ; BSR set to: 0
   789  001988  0012               	return		;funcret
   790  00198A                     __end_of_vfprintf:
   791                           	opt callstack 0
   792                           
   793 ;; *************** function _vfpfcnvrt *****************
   794 ;; Defined at:
   795 ;;		line 670 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
   798 ;;		 -> sprintf@f(6), 
   799 ;;  fmt             2   61[COMRAM] PTR PTR unsigned char 
   800 ;;		 -> vfprintf@cfmt(2), 
   801 ;;  ap              2   63[COMRAM] PTR PTR void 
   802 ;;		 -> sprintf@ap(2), 
   803 ;; Auto vars:     Size  Location     Type
   804 ;;  llu             8   69[COMRAM] unsigned long long 
   805 ;;  ll              8    0        long long 
   806 ;;  f               4    0        long long 
   807 ;;  vp              3    0        PTR void 
   808 ;;  ct              3    0        unsigned char [3]
   809 ;;  cp              3    0        PTR unsigned char 
   810 ;;  i               2    0        int 
   811 ;;  done            2    0        int 
   812 ;;  c               1    0        unsigned char 
   813 ;; Return value:  Size  Location     Type
   814 ;;                  2   59[COMRAM] int 
   815 ;; Registers used:
   816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   822 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   823 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   824 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   825 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   826 ;;Total ram usage:       18 bytes
   827 ;; Hardware stack levels used:    1
   828 ;; Hardware stack levels required when called:    5
   829 ;; This function calls:
   830 ;;		_fputc
   831 ;;		_utoa
   832 ;; This function is called by:
   833 ;;		_vfprintf
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text3
   838  0011B6                     __ptext3:
   839                           	opt callstack 0
   840  0011B6                     _vfpfcnvrt:
   841                           	opt callstack 23
   842                           
   843                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);D:\Program Files\Microchip\xc8\v2.05\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;D:\Program Files\Microchip\xc8\v2.05\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;D:\Program Files\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;D:\Program Files\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
   844                           
   845                           ; BSR set to: 0
   846                           ;incstack = 0
   847  0011B6  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   848  0011BA  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   849  0011BE  CFDE FFF6          	movff	postinc2,tblptrl
   850  0011C2  CFDD FFF7          	movff	postdec2,tblptrh
   851  0011C6                     	if	0	;tblptru may be non-zero
   852  0011C6                     	endif
   853  0011C6                     	if	0	;tblptru may be non-zero
   854  0011C6                     	endif
   855  0011C6  0008               	tblrd		*
   856  0011C8  50F5               	movf	tablat,w,c
   857  0011CA  0A25               	xorlw	37
   858  0011CC  A4D8               	btfss	status,2,c
   859  0011CE  D08E               	goto	l2082
   860                           
   861                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
   862  0011D0  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   863  0011D4  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   864  0011D8  2ADE               	incf	postinc2,f,c
   865  0011DA  0E00               	movlw	0
   866  0011DC  22DD               	addwfc	postdec2,f,c
   867                           
   868                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
   869  0011DE  0E00               	movlw	0
   870  0011E0  0100               	movlb	0	; () banked
   871  0011E2  6FAD               	movwf	(_width+1)& (0+255),b
   872  0011E4  0E00               	movlw	0
   873  0011E6  6FAC               	movwf	_width& (0+255),b
   874  0011E8  C0AC  F0B0         	movff	_width,_flags
   875  0011EC  C0AD  F0B1         	movff	_width+1,_flags+1
   876                           
   877                           ; BSR set to: 0
   878                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
   879  0011F0  69AE               	setf	_prec& (0+255),b
   880  0011F2  69AF               	setf	(_prec+1)& (0+255),b
   881                           
   882                           ; BSR set to: 0
   883                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:         if 
      +                          (*fmt[0] == 'u') {
   884  0011F4  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   885  0011F8  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   886  0011FC  CFDE FFF6          	movff	postinc2,tblptrl
   887  001200  CFDD FFF7          	movff	postdec2,tblptrh
   888  001204                     	if	0	;tblptru may be non-zero
   889  001204                     	endif
   890  001204                     	if	0	;tblptru may be non-zero
   891  001204                     	endif
   892  001204  0008               	tblrd		*
   893  001206  50F5               	movf	tablat,w,c
   894  001208  0A75               	xorlw	117
   895  00120A  A4D8               	btfss	status,2,c
   896  00120C  D040               	goto	l2066
   897                           
   898                           ; BSR set to: 0
   899                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:            
      +                           ++*fmt;
   900  00120E  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   901  001212  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   902  001216  2ADE               	incf	postinc2,f,c
   903  001218  0E00               	movlw	0
   904  00121A  22DD               	addwfc	postdec2,f,c
   905                           
   906                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
   907  00121C  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
   908  001220  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
   909  001224  CFDF F042          	movff	indf2,??_vfpfcnvrt
   910  001228  0E02               	movlw	2
   911  00122A  26DE               	addwf	postinc2,f,c
   912  00122C  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
   913  001230  0E00               	movlw	0
   914  001232  22DD               	addwfc	postdec2,f,c
   915  001234  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
   916  001238  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
   917  00123C  CFDE F044          	movff	postinc2,??_vfpfcnvrt+2
   918  001240  CFDD F045          	movff	postdec2,??_vfpfcnvrt+3
   919  001244  C044  F046         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
   920  001248  C045  F047         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
   921  00124C  6A48               	clrf	vfpfcnvrt@llu+2,c
   922  00124E  6A49               	clrf	vfpfcnvrt@llu+3,c
   923  001250  6A4A               	clrf	vfpfcnvrt@llu+4,c
   924  001252  6A4B               	clrf	vfpfcnvrt@llu+5,c
   925  001254  6A4C               	clrf	vfpfcnvrt@llu+6,c
   926  001256  6A4D               	clrf	vfpfcnvrt@llu+7,c
   927                           
   928                           ; BSR set to: 0
   929                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:            
      +                           return utoa(fp, llu);
   930  001258  C03C  F01C         	movff	vfpfcnvrt@fp,utoa@fp
   931  00125C  C03D  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
   932  001260  C046  F01E         	movff	vfpfcnvrt@llu,utoa@d
   933  001264  C047  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
   934  001268  C048  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
   935  00126C  C049  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
   936  001270  C04A  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
   937  001274  C04B  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
   938  001278  C04C  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
   939  00127C  C04D  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
   940  001280  EC03  F008         	call	_utoa	;wreg free
   941  001284  C01C  F03C         	movff	?_utoa,?_vfpfcnvrt
   942  001288  C01D  F03D         	movff	?_utoa+1,?_vfpfcnvrt+1
   943  00128C  0012               	return	
   944  00128E                     l2066:
   945                           
   946                           ; BSR set to: 0
   947                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
   948  00128E  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   949  001292  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   950  001296  CFDE FFF6          	movff	postinc2,tblptrl
   951  00129A  CFDD FFF7          	movff	postdec2,tblptrh
   952  00129E                     	if	0	;tblptru may be non-zero
   953  00129E                     	endif
   954  00129E                     	if	0	;tblptru may be non-zero
   955  00129E                     	endif
   956  00129E  0008               	tblrd		*
   957  0012A0  50F5               	movf	tablat,w,c
   958  0012A2  0A25               	xorlw	37
   959  0012A4  A4D8               	btfss	status,2,c
   960  0012A6  D016               	goto	l2076
   961                           
   962                           ; BSR set to: 0
   963                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
   964  0012A8  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   965  0012AC  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   966  0012B0  2ADE               	incf	postinc2,f,c
   967  0012B2  0E00               	movlw	0
   968  0012B4  22DD               	addwfc	postdec2,f,c
   969                           
   970                           ; BSR set to: 0
   971                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
   972  0012B6  0E00               	movlw	0
   973  0012B8  6E02               	movwf	fputc@c+1,c
   974  0012BA  0E25               	movlw	37
   975  0012BC  6E01               	movwf	fputc@c,c
   976  0012BE  C03C  F003         	movff	vfpfcnvrt@fp,fputc@fp
   977  0012C2  C03D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
   978  0012C6  ECB2  F00A         	call	_fputc	;wreg free
   979  0012CA                     l2072:
   980                           
   981                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
   982  0012CA  0E00               	movlw	0
   983  0012CC  6E3D               	movwf	?_vfpfcnvrt+1,c
   984  0012CE  0E01               	movlw	1
   985  0012D0  6E3C               	movwf	?_vfpfcnvrt,c
   986  0012D2  0012               	return	
   987  0012D4                     l2076:
   988                           
   989                           ; BSR set to: 0
   990                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
   991  0012D4  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   992  0012D8  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   993  0012DC  2ADE               	incf	postinc2,f,c
   994  0012DE  0E00               	movlw	0
   995  0012E0  22DD               	addwfc	postdec2,f,c
   996                           
   997                           ; BSR set to: 0
   998                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
   999  0012E2  0E00               	movlw	0
  1000  0012E4  6E3D               	movwf	?_vfpfcnvrt+1,c
  1001  0012E6  0E00               	movlw	0
  1002  0012E8  6E3C               	movwf	?_vfpfcnvrt,c
  1003  0012EA  0012               	return	
  1004  0012EC                     l2082:
  1005                           
  1006                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  1007  0012EC  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1008  0012F0  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1009  0012F4  CFDE FFF6          	movff	postinc2,tblptrl
  1010  0012F8  CFDD FFF7          	movff	postdec2,tblptrh
  1011  0012FC                     	if	0	;tblptru may be non-zero
  1012  0012FC                     	endif
  1013  0012FC                     	if	0	;tblptru may be non-zero
  1014  0012FC                     	endif
  1015  0012FC  0008               	tblrd		*
  1016  0012FE  50F5               	movf	tablat,w,c
  1017  001300  6E01               	movwf	fputc@c,c
  1018  001302  6A02               	clrf	fputc@c+1,c
  1019  001304  C03C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1020  001308  C03D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1021  00130C  ECB2  F00A         	call	_fputc	;wreg free
  1022                           
  1023                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  1024  001310  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1025  001314  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1026  001318  2ADE               	incf	postinc2,f,c
  1027  00131A  0E00               	movlw	0
  1028  00131C  22DD               	addwfc	postdec2,f,c
  1029  00131E  D7D5               	goto	l2072
  1030  001320                     __end_of_vfpfcnvrt:
  1031                           	opt callstack 0
  1032                           
  1033 ;; *************** function _utoa *****************
  1034 ;; Defined at:
  1035 ;;		line 593 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1038 ;;		 -> sprintf@f(6), 
  1039 ;;  d               8   29[COMRAM] unsigned long long 
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;  n               8   49[COMRAM] unsigned long long 
  1042 ;;  i               2   57[COMRAM] int 
  1043 ;;  w               2   47[COMRAM] int 
  1044 ;;  p               2   45[COMRAM] int 
  1045 ;; Return value:  Size  Location     Type
  1046 ;;                  2   27[COMRAM] int 
  1047 ;; Registers used:
  1048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1049 ;; Tracked objects:
  1050 ;;		On entry : 0/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1054 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1055 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1056 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1057 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1058 ;;Total ram usage:       32 bytes
  1059 ;; Hardware stack levels used:    1
  1060 ;; Hardware stack levels required when called:    4
  1061 ;; This function calls:
  1062 ;;		___lodiv
  1063 ;;		___lomod
  1064 ;;		_pad
  1065 ;; This function is called by:
  1066 ;;		_vfpfcnvrt
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           	psect	text4
  1071  001006                     __ptext4:
  1072                           	opt callstack 0
  1073  001006                     _utoa:
  1074                           	opt callstack 23
  1075                           
  1076                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static int u
      +                          toa(FILE *fp, unsigned long long d);D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 594: {;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\dop
      +                          rnt.c: 595:     int i, p, w;;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 596:     unsigned long long n;;D:\Program Files\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  1077                           
  1078                           ;incstack = 0
  1079  001006  0100               	movlb	0	; () banked
  1080  001008  AFAF               	btfss	(_prec+1)& (0+255),7,b
  1081                           
  1082                           ; BSR set to: 0
  1083                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:         flag
      +                          s &= ~(1 << 1);
  1084  00100A  93B0               	bcf	_flags& (0+255),1,b
  1085                           
  1086                           ; BSR set to: 0
  1087                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p = (0 <
      +                           prec) ? prec : 1;
  1088  00100C  BFAF               	btfsc	(_prec+1)& (0+255),7,b
  1089  00100E  D005               	goto	u980
  1090  001010  51AF               	movf	(_prec+1)& (0+255),w,b
  1091  001012  E108               	bnz	l408
  1092  001014  05AE               	decf	_prec& (0+255),w,b
  1093  001016  B0D8               	btfsc	status,0,c
  1094  001018  D005               	goto	l408
  1095  00101A                     u980:
  1096                           
  1097                           ; BSR set to: 0
  1098  00101A  0E00               	movlw	0
  1099  00101C  6E2F               	movwf	utoa@p+1,c
  1100  00101E  0E01               	movlw	1
  1101  001020  6E2E               	movwf	utoa@p,c
  1102  001022  D004               	goto	l410
  1103  001024                     l408:
  1104                           
  1105                           ; BSR set to: 0
  1106  001024  C0AE  F02E         	movff	_prec,utoa@p
  1107  001028  C0AF  F02F         	movff	_prec+1,utoa@p+1
  1108  00102C                     l410:
  1109                           
  1110                           ; BSR set to: 0
  1111                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w = widt
      +                          h;
  1112  00102C  C0AC  F030         	movff	_width,utoa@w
  1113  001030  C0AD  F031         	movff	_width+1,utoa@w+1
  1114                           
  1115                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n = d;
  1116  001034  C01E  F032         	movff	utoa@d,utoa@n
  1117  001038  C01F  F033         	movff	utoa@d+1,utoa@n+1
  1118  00103C  C020  F034         	movff	utoa@d+2,utoa@n+2
  1119  001040  C021  F035         	movff	utoa@d+3,utoa@n+3
  1120  001044  C022  F036         	movff	utoa@d+4,utoa@n+4
  1121  001048  C023  F037         	movff	utoa@d+5,utoa@n+5
  1122  00104C  C024  F038         	movff	utoa@d+6,utoa@n+6
  1123  001050  C025  F039         	movff	utoa@d+7,utoa@n+7
  1124                           
  1125                           ; BSR set to: 0
  1126                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i = size
      +                          of(dbuf) - 1;
  1127  001054  0E00               	movlw	0
  1128  001056  6E3B               	movwf	utoa@i+1,c
  1129  001058  0E1F               	movlw	31
  1130  00105A  6E3A               	movwf	utoa@i,c
  1131                           
  1132                           ; BSR set to: 0
  1133                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     dbuf[i] 
      +                          = '\0';
  1134  00105C  0E00               	movlw	0
  1135  00105E  6FD5               	movwf	(_dbuf+31)& (0+255),b
  1136                           
  1137                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1138  001060  D076               	goto	l2018
  1139  001062                     l2008:
  1140                           
  1141                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:         --i;
  1142  001062  063A               	decf	utoa@i,f,c
  1143  001064  A0D8               	btfss	status,0,c
  1144  001066  063B               	decf	utoa@i+1,f,c
  1145                           
  1146                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:         dbuf
      +                          [i] = '0' + (n % 10);
  1147  001068  0EB6               	movlw	low _dbuf
  1148  00106A  243A               	addwf	utoa@i,w,c
  1149  00106C  6ED9               	movwf	fsr2l,c
  1150  00106E  0E00               	movlw	high _dbuf
  1151  001070  203B               	addwfc	utoa@i+1,w,c
  1152  001072  6EDA               	movwf	fsr2h,c
  1153  001074  C032  F001         	movff	utoa@n,___lomod@dividend
  1154  001078  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  1155  00107C  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  1156  001080  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  1157  001084  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  1158  001088  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  1159  00108C  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  1160  001090  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  1161  001094  0E0A               	movlw	10
  1162  001096  6E09               	movwf	___lomod@divisor,c
  1163  001098  0E00               	movlw	0
  1164  00109A  6E0A               	movwf	___lomod@divisor+1,c
  1165  00109C  0E00               	movlw	0
  1166  00109E  6E0B               	movwf	___lomod@divisor+2,c
  1167  0010A0  0E00               	movlw	0
  1168  0010A2  6E0C               	movwf	___lomod@divisor+3,c
  1169  0010A4  0E00               	movlw	0
  1170  0010A6  6E0D               	movwf	___lomod@divisor+4,c
  1171  0010A8  0E00               	movlw	0
  1172  0010AA  6E0E               	movwf	___lomod@divisor+5,c
  1173  0010AC  0E00               	movlw	0
  1174  0010AE  6E0F               	movwf	___lomod@divisor+6,c
  1175  0010B0  0E00               	movlw	0
  1176  0010B2  6E10               	movwf	___lomod@divisor+7,c
  1177  0010B4  EC5B  F00A         	call	___lomod	;wreg free
  1178  0010B8  C001  F026         	movff	?___lomod,??_utoa
  1179  0010BC  C002  F027         	movff	?___lomod+1,??_utoa+1
  1180  0010C0  C003  F028         	movff	?___lomod+2,??_utoa+2
  1181  0010C4  C004  F029         	movff	?___lomod+3,??_utoa+3
  1182  0010C8  C005  F02A         	movff	?___lomod+4,??_utoa+4
  1183  0010CC  C006  F02B         	movff	?___lomod+5,??_utoa+5
  1184  0010D0  C007  F02C         	movff	?___lomod+6,??_utoa+6
  1185  0010D4  C008  F02D         	movff	?___lomod+7,??_utoa+7
  1186  0010D8  5026               	movf	??_utoa,w,c
  1187  0010DA  0F30               	addlw	48
  1188  0010DC  6EDF               	movwf	indf2,c
  1189                           
  1190                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:         --p;
  1191  0010DE  062E               	decf	utoa@p,f,c
  1192  0010E0  A0D8               	btfss	status,0,c
  1193  0010E2  062F               	decf	utoa@p+1,f,c
  1194                           
  1195                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:         --w;
  1196  0010E4  0630               	decf	utoa@w,f,c
  1197  0010E6  A0D8               	btfss	status,0,c
  1198  0010E8  0631               	decf	utoa@w+1,f,c
  1199                           
  1200                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:         n = 
      +                          n / 10;
  1201  0010EA  C032  F001         	movff	utoa@n,___lodiv@dividend
  1202  0010EE  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  1203  0010F2  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  1204  0010F6  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  1205  0010FA  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  1206  0010FE  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  1207  001102  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  1208  001106  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  1209  00110A  0E0A               	movlw	10
  1210  00110C  6E09               	movwf	___lodiv@divisor,c
  1211  00110E  0E00               	movlw	0
  1212  001110  6E0A               	movwf	___lodiv@divisor+1,c
  1213  001112  0E00               	movlw	0
  1214  001114  6E0B               	movwf	___lodiv@divisor+2,c
  1215  001116  0E00               	movlw	0
  1216  001118  6E0C               	movwf	___lodiv@divisor+3,c
  1217  00111A  0E00               	movlw	0
  1218  00111C  6E0D               	movwf	___lodiv@divisor+4,c
  1219  00111E  0E00               	movlw	0
  1220  001120  6E0E               	movwf	___lodiv@divisor+5,c
  1221  001122  0E00               	movlw	0
  1222  001124  6E0F               	movwf	___lodiv@divisor+6,c
  1223  001126  0E00               	movlw	0
  1224  001128  6E10               	movwf	___lodiv@divisor+7,c
  1225  00112A  EC90  F009         	call	___lodiv	;wreg free
  1226  00112E  C001  F032         	movff	?___lodiv,utoa@n
  1227  001132  C002  F033         	movff	?___lodiv+1,utoa@n+1
  1228  001136  C003  F034         	movff	?___lodiv+2,utoa@n+2
  1229  00113A  C004  F035         	movff	?___lodiv+3,utoa@n+3
  1230  00113E  C005  F036         	movff	?___lodiv+4,utoa@n+4
  1231  001142  C006  F037         	movff	?___lodiv+5,utoa@n+5
  1232  001146  C007  F038         	movff	?___lodiv+6,utoa@n+6
  1233  00114A  C008  F039         	movff	?___lodiv+7,utoa@n+7
  1234  00114E                     l2018:
  1235                           
  1236                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1237  00114E  503A               	movf	utoa@i,w,c
  1238  001150  103B               	iorwf	utoa@i+1,w,c
  1239  001152  B4D8               	btfsc	status,2,c
  1240  001154  D01B               	goto	u1030
  1241  001156  5032               	movf	utoa@n,w,c
  1242  001158  1033               	iorwf	utoa@n+1,w,c
  1243  00115A  1034               	iorwf	utoa@n+2,w,c
  1244  00115C  1035               	iorwf	utoa@n+3,w,c
  1245  00115E  1036               	iorwf	utoa@n+4,w,c
  1246  001160  1037               	iorwf	utoa@n+5,w,c
  1247  001162  1038               	iorwf	utoa@n+6,w,c
  1248  001164  1039               	iorwf	utoa@n+7,w,c
  1249  001166  A4D8               	btfss	status,2,c
  1250  001168  D77C               	goto	l2008
  1251  00116A  BE2F               	btfsc	utoa@p+1,7,c
  1252  00116C  D005               	goto	u1010
  1253  00116E  502F               	movf	utoa@p+1,w,c
  1254  001170  E102               	bnz	u1011
  1255  001172  042E               	decf	utoa@p,w,c
  1256  001174  B0D8               	btfsc	status,0,c
  1257  001176                     u1011:
  1258  001176  D775               	goto	l2008
  1259  001178                     u1010:
  1260  001178  BE31               	btfsc	utoa@w+1,7,c
  1261  00117A  D008               	goto	u1030
  1262  00117C  5031               	movf	utoa@w+1,w,c
  1263  00117E  E103               	bnz	u1020
  1264  001180  0430               	decf	utoa@w,w,c
  1265  001182  A0D8               	btfss	status,0,c
  1266  001184  D003               	goto	u1030
  1267  001186                     u1020:
  1268  001186  0100               	movlb	0	; () banked
  1269  001188  B3B0               	btfsc	_flags& (0+255),1,b
  1270  00118A  D76B               	goto	l2008
  1271  00118C                     u1030:
  1272                           
  1273                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     return p
      +                          ad(fp, &dbuf[i], w);
  1274  00118C  C01C  F011         	movff	utoa@fp,pad@fp
  1275  001190  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  1276  001194  0EB6               	movlw	low _dbuf
  1277  001196  243A               	addwf	utoa@i,w,c
  1278  001198  6E13               	movwf	pad@buf,c
  1279  00119A  0E00               	movlw	high _dbuf
  1280  00119C  203B               	addwfc	utoa@i+1,w,c
  1281  00119E  6E14               	movwf	pad@buf+1,c
  1282  0011A0  C030  F015         	movff	utoa@w,pad@p
  1283  0011A4  C031  F016         	movff	utoa@w+1,pad@p+1
  1284  0011A8  EC02  F00B         	call	_pad	;wreg free
  1285  0011AC  C011  F01C         	movff	?_pad,?_utoa
  1286  0011B0  C012  F01D         	movff	?_pad+1,?_utoa+1
  1287  0011B4  0012               	return		;funcret
  1288  0011B6                     __end_of_utoa:
  1289                           	opt callstack 0
  1290                           
  1291 ;; *************** function _pad *****************
  1292 ;; Defined at:
  1293 ;;		line 72 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1296 ;;		 -> sprintf@f(6), 
  1297 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1298 ;;		 -> dbuf(32), 
  1299 ;;  p               2   20[COMRAM] int 
  1300 ;; Auto vars:     Size  Location     Type
  1301 ;;  w               2   25[COMRAM] int 
  1302 ;;  i               2   23[COMRAM] int 
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  2   16[COMRAM] int 
  1305 ;; Registers used:
  1306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1312 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1313 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1314 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1315 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1316 ;;Total ram usage:       11 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; Hardware stack levels required when called:    3
  1319 ;; This function calls:
  1320 ;;		_fputc
  1321 ;;		_fputs
  1322 ;;		_strlen
  1323 ;; This function is called by:
  1324 ;;		_utoa
  1325 ;; This function uses a non-reentrant model
  1326 ;;
  1327                           
  1328                           	psect	text5
  1329  001604                     __ptext5:
  1330                           	opt callstack 0
  1331  001604                     _pad:
  1332                           	opt callstack 23
  1333                           
  1334                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1335                           
  1336                           ;incstack = 0
  1337  001604  0100               	movlb	0	; () banked
  1338  001606  A1B0               	btfss	_flags& (0+255),0,b
  1339  001608  D00A               	goto	l1938
  1340                           
  1341                           ; BSR set to: 0
  1342                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1343  00160A  C013  F00A         	movff	pad@buf,fputs@s
  1344  00160E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1345  001612  C011  F00C         	movff	pad@fp,fputs@fp
  1346  001616  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1347  00161A  EC3A  F00D         	call	_fputs	;wreg free
  1348  00161E                     l1938:
  1349                           
  1350                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1351  00161E  BE16               	btfsc	pad@p+1,7,c
  1352  001620  D005               	goto	l1942
  1353  001622  C015  F01A         	movff	pad@p,pad@w
  1354  001626  C016  F01B         	movff	pad@p+1,pad@w+1
  1355  00162A  D004               	goto	l398
  1356  00162C                     l1942:
  1357  00162C  0E00               	movlw	0
  1358  00162E  6E1B               	movwf	pad@w+1,c
  1359  001630  0E00               	movlw	0
  1360  001632  6E1A               	movwf	pad@w,c
  1361  001634                     l398:
  1362                           
  1363                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1364  001634  0E00               	movlw	0
  1365  001636  6E19               	movwf	pad@i+1,c
  1366  001638  0E00               	movlw	0
  1367  00163A  6E18               	movwf	pad@i,c
  1368                           
  1369                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1370  00163C  D00C               	goto	l1948
  1371  00163E                     l1944:
  1372                           
  1373                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  1374  00163E  0E00               	movlw	0
  1375  001640  6E02               	movwf	fputc@c+1,c
  1376  001642  0E20               	movlw	32
  1377  001644  6E01               	movwf	fputc@c,c
  1378  001646  C011  F003         	movff	pad@fp,fputc@fp
  1379  00164A  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1380  00164E  ECB2  F00A         	call	_fputc	;wreg free
  1381                           
  1382                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:         ++i;
  1383  001652  4A18               	infsnz	pad@i,f,c
  1384  001654  2A19               	incf	pad@i+1,f,c
  1385  001656                     l1948:
  1386                           
  1387                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1388  001656  501A               	movf	pad@w,w,c
  1389  001658  5C18               	subwf	pad@i,w,c
  1390  00165A  5019               	movf	pad@i+1,w,c
  1391  00165C  0A80               	xorlw	128
  1392  00165E  6E17               	movwf	??_pad& (0+255),c
  1393  001660  501B               	movf	pad@w+1,w,c
  1394  001662  0A80               	xorlw	128
  1395  001664  5817               	subwfb	??_pad& (0+255),w,c
  1396  001666  A0D8               	btfss	status,0,c
  1397  001668  D7EA               	goto	l1944
  1398                           
  1399                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  1400  00166A  0100               	movlb	0	; () banked
  1401  00166C  B1B0               	btfsc	_flags& (0+255),0,b
  1402  00166E  D00A               	goto	l1952
  1403                           
  1404                           ; BSR set to: 0
  1405                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  1406  001670  C013  F00A         	movff	pad@buf,fputs@s
  1407  001674  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1408  001678  C011  F00C         	movff	pad@fp,fputs@fp
  1409  00167C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1410  001680  EC3A  F00D         	call	_fputs	;wreg free
  1411  001684                     l1952:
  1412                           
  1413                           ;D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  1414  001684  C013  F001         	movff	pad@buf,strlen@s
  1415  001688  C014  F002         	movff	pad@buf+1,strlen@s+1
  1416  00168C  EC70  F00D         	call	_strlen	;wreg free
  1417  001690  501A               	movf	pad@w,w,c
  1418  001692  2401               	addwf	?_strlen,w,c
  1419  001694  6E11               	movwf	?_pad,c
  1420  001696  501B               	movf	pad@w+1,w,c
  1421  001698  2002               	addwfc	?_strlen+1,w,c
  1422  00169A  6E12               	movwf	?_pad+1,c
  1423  00169C  0012               	return		;funcret
  1424  00169E                     __end_of_pad:
  1425                           	opt callstack 0
  1426                           
  1427 ;; *************** function _strlen *****************
  1428 ;; Defined at:
  1429 ;;		line 12 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1432 ;;		 -> dbuf(32), 
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1435 ;;		 -> dbuf(32), 
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  2    0[COMRAM] unsigned int 
  1438 ;; Registers used:
  1439 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1445 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1446 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1448 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1449 ;;Total ram usage:        4 bytes
  1450 ;; Hardware stack levels used:    1
  1451 ;; This function calls:
  1452 ;;		Nothing
  1453 ;; This function is called by:
  1454 ;;		_pad
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text6
  1459  001AE0                     __ptext6:
  1460                           	opt callstack 0
  1461  001AE0                     _strlen:
  1462                           	opt callstack 25
  1463                           
  1464                           ;incstack = 0
  1465  001AE0  C001  F003         	movff	strlen@s,strlen@a
  1466  001AE4  C002  F004         	movff	strlen@s+1,strlen@a+1
  1467  001AE8  D002               	goto	l1916
  1468  001AEA                     l1914:
  1469  001AEA  4A01               	infsnz	strlen@s,f,c
  1470  001AEC  2A02               	incf	strlen@s+1,f,c
  1471  001AEE                     l1916:
  1472  001AEE  C001  FFD9         	movff	strlen@s,fsr2l
  1473  001AF2  C002  FFDA         	movff	strlen@s+1,fsr2h
  1474  001AF6  50DF               	movf	indf2,w,c
  1475  001AF8  A4D8               	btfss	status,2,c
  1476  001AFA  D7F7               	goto	l1914
  1477  001AFC  5003               	movf	strlen@a,w,c
  1478  001AFE  5C01               	subwf	strlen@s,w,c
  1479  001B00  6E01               	movwf	?_strlen,c
  1480  001B02  5004               	movf	strlen@a+1,w,c
  1481  001B04  5802               	subwfb	strlen@s+1,w,c
  1482  001B06  6E02               	movwf	?_strlen+1,c
  1483  001B08  0012               	return		;funcret
  1484  001B0A                     __end_of_strlen:
  1485                           	opt callstack 0
  1486                           
  1487 ;; *************** function _fputs *****************
  1488 ;; Defined at:
  1489 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1492 ;;		 -> dbuf(32), 
  1493 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1494 ;;		 -> sprintf@f(6), 
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;  i               2   14[COMRAM] int 
  1497 ;;  c               1   13[COMRAM] unsigned char 
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  2    9[COMRAM] int 
  1500 ;; Registers used:
  1501 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1507 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1508 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1510 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1511 ;;Total ram usage:        7 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; Hardware stack levels required when called:    2
  1514 ;; This function calls:
  1515 ;;		_fputc
  1516 ;; This function is called by:
  1517 ;;		_pad
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           	psect	text7
  1522  001A74                     __ptext7:
  1523                           	opt callstack 0
  1524  001A74                     _fputs:
  1525                           	opt callstack 23
  1526                           
  1527                           ;incstack = 0
  1528  001A74  0E00               	movlw	0
  1529  001A76  6E10               	movwf	fputs@i+1,c
  1530  001A78  0E00               	movlw	0
  1531  001A7A  6E0F               	movwf	fputs@i,c
  1532  001A7C  D00B               	goto	l1910
  1533  001A7E                     l1906:
  1534  001A7E  C00E  F001         	movff	fputs@c,fputc@c
  1535  001A82  6A02               	clrf	fputc@c+1,c
  1536  001A84  C00C  F003         	movff	fputs@fp,fputc@fp
  1537  001A88  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  1538  001A8C  ECB2  F00A         	call	_fputc	;wreg free
  1539  001A90  4A0F               	infsnz	fputs@i,f,c
  1540  001A92  2A10               	incf	fputs@i+1,f,c
  1541  001A94                     l1910:
  1542  001A94  500F               	movf	fputs@i,w,c
  1543  001A96  240A               	addwf	fputs@s,w,c
  1544  001A98  6ED9               	movwf	fsr2l,c
  1545  001A9A  5010               	movf	fputs@i+1,w,c
  1546  001A9C  200B               	addwfc	fputs@s+1,w,c
  1547  001A9E  6EDA               	movwf	fsr2h,c
  1548  001AA0  50DF               	movf	indf2,w,c
  1549  001AA2  6E0E               	movwf	fputs@c,c
  1550  001AA4  500E               	movf	fputs@c,w,c
  1551  001AA6  B4D8               	btfsc	status,2,c
  1552  001AA8  0012               	return	
  1553  001AAA  D7E9               	goto	l1906
  1554  001AAC                     __end_of_fputs:
  1555                           	opt callstack 0
  1556                           
  1557 ;; *************** function _fputc *****************
  1558 ;; Defined at:
  1559 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;  c               2    0[COMRAM] int 
  1562 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1563 ;;		 -> sprintf@f(6), 
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;		None
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  2    0[COMRAM] int 
  1568 ;; Registers used:
  1569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1575 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1577 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1578 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1579 ;;Total ram usage:        9 bytes
  1580 ;; Hardware stack levels used:    1
  1581 ;; Hardware stack levels required when called:    1
  1582 ;; This function calls:
  1583 ;;		_putch
  1584 ;; This function is called by:
  1585 ;;		_pad
  1586 ;;		_vfpfcnvrt
  1587 ;;		_fputs
  1588 ;; This function uses a non-reentrant model
  1589 ;;
  1590                           
  1591                           	psect	text8
  1592  001564                     __ptext8:
  1593                           	opt callstack 0
  1594  001564                     _fputc:
  1595                           	opt callstack 23
  1596                           
  1597                           ;incstack = 0
  1598  001564  5003               	movf	fputc@fp,w,c
  1599  001566  1004               	iorwf	fputc@fp+1,w,c
  1600  001568  B4D8               	btfsc	status,2,c
  1601  00156A  D004               	goto	u790
  1602  00156C  5003               	movf	fputc@fp,w,c
  1603  00156E  1004               	iorwf	fputc@fp+1,w,c
  1604  001570  A4D8               	btfss	status,2,c
  1605  001572  D004               	goto	l1892
  1606  001574                     u790:
  1607  001574  5001               	movf	fputc@c,w,c
  1608  001576  ECC5  F00D         	call	_putch
  1609  00157A  0012               	return	
  1610  00157C                     l1892:
  1611  00157C  EE20 F004          	lfsr	2,4
  1612  001580  5003               	movf	fputc@fp,w,c
  1613  001582  26D9               	addwf	fsr2l,f,c
  1614  001584  5004               	movf	fputc@fp+1,w,c
  1615  001586  22DA               	addwfc	fsr2h,f,c
  1616  001588  50DE               	movf	postinc2,w,c
  1617  00158A  10DE               	iorwf	postinc2,w,c
  1618  00158C  B4D8               	btfsc	status,2,c
  1619  00158E  D016               	goto	u810
  1620  001590  EE20 F004          	lfsr	2,4
  1621  001594  5003               	movf	fputc@fp,w,c
  1622  001596  26D9               	addwf	fsr2l,f,c
  1623  001598  5004               	movf	fputc@fp+1,w,c
  1624  00159A  22DA               	addwfc	fsr2h,f,c
  1625  00159C  EE10 F002          	lfsr	1,2
  1626  0015A0  5003               	movf	fputc@fp,w,c
  1627  0015A2  26E1               	addwf	fsr1l,f,c
  1628  0015A4  5004               	movf	fputc@fp+1,w,c
  1629  0015A6  22E2               	addwfc	fsr1h,f,c
  1630  0015A8  50DE               	movf	postinc2,w,c
  1631  0015AA  5CE6               	subwf	postinc1,w,c
  1632  0015AC  50E6               	movf	postinc1,w,c
  1633  0015AE  0A80               	xorlw	128
  1634  0015B0  6E09               	movwf	(??_fputc+4)& (0+255),c
  1635  0015B2  50DE               	movf	postinc2,w,c
  1636  0015B4  0A80               	xorlw	128
  1637  0015B6  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  1638  0015B8  B0D8               	btfsc	status,0,c
  1639  0015BA  0012               	return	
  1640  0015BC                     u810:
  1641  0015BC  EE20 F002          	lfsr	2,2
  1642  0015C0  5003               	movf	fputc@fp,w,c
  1643  0015C2  26D9               	addwf	fsr2l,f,c
  1644  0015C4  5004               	movf	fputc@fp+1,w,c
  1645  0015C6  22DA               	addwfc	fsr2h,f,c
  1646  0015C8  CFDE F005          	movff	postinc2,??_fputc
  1647  0015CC  CFDD F006          	movff	postdec2,??_fputc+1
  1648  0015D0  C003  FFD9         	movff	fputc@fp,fsr2l
  1649  0015D4  C004  FFDA         	movff	fputc@fp+1,fsr2h
  1650  0015D8  CFDE F007          	movff	postinc2,??_fputc+2
  1651  0015DC  CFDD F008          	movff	postdec2,??_fputc+3
  1652  0015E0  5005               	movf	??_fputc,w,c
  1653  0015E2  2407               	addwf	??_fputc+2,w,c
  1654  0015E4  6ED9               	movwf	fsr2l,c
  1655  0015E6  5006               	movf	??_fputc+1,w,c
  1656  0015E8  2008               	addwfc	??_fputc+3,w,c
  1657  0015EA  6EDA               	movwf	fsr2h,c
  1658  0015EC  C001  FFDF         	movff	fputc@c,indf2
  1659  0015F0  EE20 F002          	lfsr	2,2
  1660  0015F4  5003               	movf	fputc@fp,w,c
  1661  0015F6  26D9               	addwf	fsr2l,f,c
  1662  0015F8  5004               	movf	fputc@fp+1,w,c
  1663  0015FA  22DA               	addwfc	fsr2h,f,c
  1664  0015FC  2ADE               	incf	postinc2,f,c
  1665  0015FE  0E00               	movlw	0
  1666  001600  22DD               	addwfc	postdec2,f,c
  1667  001602  0012               	return		;funcret
  1668  001604                     __end_of_fputc:
  1669                           	opt callstack 0
  1670                           
  1671 ;; *************** function _putch *****************
  1672 ;; Defined at:
  1673 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;  c               1    wreg     unsigned char 
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;  c               1    0[COMRAM] unsigned char 
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      void 
  1680 ;; Registers used:
  1681 ;;		wreg
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1691 ;;Total ram usage:        0 bytes
  1692 ;; Hardware stack levels used:    1
  1693 ;; This function calls:
  1694 ;;		Nothing
  1695 ;; This function is called by:
  1696 ;;		_fputc
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	text9
  1701  001B8A                     __ptext9:
  1702                           	opt callstack 0
  1703  001B8A                     _putch:
  1704                           	opt callstack 23
  1705                           
  1706                           ;incstack = 0
  1707  001B8A  0012               	return		;funcret
  1708  001B8C                     __end_of_putch:
  1709                           	opt callstack 0
  1710                           
  1711 ;; *************** function ___lomod *****************
  1712 ;; Defined at:
  1713 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;  dividend        8    0[COMRAM] unsigned long long 
  1716 ;;  divisor         8    8[COMRAM] unsigned long long 
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;  counter         1   16[COMRAM] unsigned char 
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  8    0[COMRAM] unsigned long long 
  1721 ;; Registers used:
  1722 ;;		wreg, status,2, status,0
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1728 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1729 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1731 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1732 ;;Total ram usage:       17 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; This function calls:
  1735 ;;		Nothing
  1736 ;; This function is called by:
  1737 ;;		_utoa
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           	psect	text10
  1742  0014B6                     __ptext10:
  1743                           	opt callstack 0
  1744  0014B6                     ___lomod:
  1745                           	opt callstack 26
  1746                           
  1747                           ;incstack = 0
  1748  0014B6  5009               	movf	___lomod@divisor,w,c
  1749  0014B8  100A               	iorwf	___lomod@divisor+1,w,c
  1750  0014BA  100B               	iorwf	___lomod@divisor+2,w,c
  1751  0014BC  100C               	iorwf	___lomod@divisor+3,w,c
  1752  0014BE  100D               	iorwf	___lomod@divisor+4,w,c
  1753  0014C0  100E               	iorwf	___lomod@divisor+5,w,c
  1754  0014C2  100F               	iorwf	___lomod@divisor+6,w,c
  1755  0014C4  1010               	iorwf	___lomod@divisor+7,w,c
  1756  0014C6  B4D8               	btfsc	status,2,c
  1757  0014C8  D03C               	goto	l881
  1758  0014CA  0E01               	movlw	1
  1759  0014CC  6E11               	movwf	___lomod@counter,c
  1760  0014CE  D00A               	goto	l1984
  1761  0014D0                     l1982:
  1762  0014D0  90D8               	bcf	status,0,c
  1763  0014D2  3609               	rlcf	___lomod@divisor,f,c
  1764  0014D4  360A               	rlcf	___lomod@divisor+1,f,c
  1765  0014D6  360B               	rlcf	___lomod@divisor+2,f,c
  1766  0014D8  360C               	rlcf	___lomod@divisor+3,f,c
  1767  0014DA  360D               	rlcf	___lomod@divisor+4,f,c
  1768  0014DC  360E               	rlcf	___lomod@divisor+5,f,c
  1769  0014DE  360F               	rlcf	___lomod@divisor+6,f,c
  1770  0014E0  3610               	rlcf	___lomod@divisor+7,f,c
  1771  0014E2  2A11               	incf	___lomod@counter,f,c
  1772  0014E4                     l1984:
  1773  0014E4  AE10               	btfss	___lomod@divisor+7,7,c
  1774  0014E6  D7F4               	goto	l1982
  1775  0014E8                     u950:
  1776  0014E8  5009               	movf	___lomod@divisor,w,c
  1777  0014EA  5C01               	subwf	___lomod@dividend,w,c
  1778  0014EC  500A               	movf	___lomod@divisor+1,w,c
  1779  0014EE  5802               	subwfb	___lomod@dividend+1,w,c
  1780  0014F0  500B               	movf	___lomod@divisor+2,w,c
  1781  0014F2  5803               	subwfb	___lomod@dividend+2,w,c
  1782  0014F4  500C               	movf	___lomod@divisor+3,w,c
  1783  0014F6  5804               	subwfb	___lomod@dividend+3,w,c
  1784  0014F8  500D               	movf	___lomod@divisor+4,w,c
  1785  0014FA  5805               	subwfb	___lomod@dividend+4,w,c
  1786  0014FC  500E               	movf	___lomod@divisor+5,w,c
  1787  0014FE  5806               	subwfb	___lomod@dividend+5,w,c
  1788  001500  500F               	movf	___lomod@divisor+6,w,c
  1789  001502  5807               	subwfb	___lomod@dividend+6,w,c
  1790  001504  5010               	movf	___lomod@divisor+7,w,c
  1791  001506  5808               	subwfb	___lomod@dividend+7,w,c
  1792  001508  A0D8               	btfss	status,0,c
  1793  00150A  D010               	goto	l1990
  1794  00150C  5009               	movf	___lomod@divisor,w,c
  1795  00150E  5E01               	subwf	___lomod@dividend,f,c
  1796  001510  500A               	movf	___lomod@divisor+1,w,c
  1797  001512  5A02               	subwfb	___lomod@dividend+1,f,c
  1798  001514  500B               	movf	___lomod@divisor+2,w,c
  1799  001516  5A03               	subwfb	___lomod@dividend+2,f,c
  1800  001518  500C               	movf	___lomod@divisor+3,w,c
  1801  00151A  5A04               	subwfb	___lomod@dividend+3,f,c
  1802  00151C  500D               	movf	___lomod@divisor+4,w,c
  1803  00151E  5A05               	subwfb	___lomod@dividend+4,f,c
  1804  001520  500E               	movf	___lomod@divisor+5,w,c
  1805  001522  5A06               	subwfb	___lomod@dividend+5,f,c
  1806  001524  500F               	movf	___lomod@divisor+6,w,c
  1807  001526  5A07               	subwfb	___lomod@dividend+6,f,c
  1808  001528  5010               	movf	___lomod@divisor+7,w,c
  1809  00152A  5A08               	subwfb	___lomod@dividend+7,f,c
  1810  00152C                     l1990:
  1811  00152C  90D8               	bcf	status,0,c
  1812  00152E  3210               	rrcf	___lomod@divisor+7,f,c
  1813  001530  320F               	rrcf	___lomod@divisor+6,f,c
  1814  001532  320E               	rrcf	___lomod@divisor+5,f,c
  1815  001534  320D               	rrcf	___lomod@divisor+4,f,c
  1816  001536  320C               	rrcf	___lomod@divisor+3,f,c
  1817  001538  320B               	rrcf	___lomod@divisor+2,f,c
  1818  00153A  320A               	rrcf	___lomod@divisor+1,f,c
  1819  00153C  3209               	rrcf	___lomod@divisor,f,c
  1820  00153E  2E11               	decfsz	___lomod@counter,f,c
  1821  001540  D7D3               	goto	u950
  1822  001542                     l881:
  1823  001542  C001  F001         	movff	___lomod@dividend,?___lomod
  1824  001546  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  1825  00154A  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  1826  00154E  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  1827  001552  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  1828  001556  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  1829  00155A  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  1830  00155E  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  1831  001562  0012               	return		;funcret
  1832  001564                     __end_of___lomod:
  1833                           	opt callstack 0
  1834                           
  1835 ;; *************** function ___lodiv *****************
  1836 ;; Defined at:
  1837 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;  dividend        8    0[COMRAM] unsigned long long 
  1840 ;;  divisor         8    8[COMRAM] unsigned long long 
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;  quotient        8   16[COMRAM] unsigned long long 
  1843 ;;  counter         1   24[COMRAM] unsigned char 
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  8    0[COMRAM] unsigned long long 
  1846 ;; Registers used:
  1847 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1853 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1854 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1856 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1857 ;;Total ram usage:       25 bytes
  1858 ;; Hardware stack levels used:    1
  1859 ;; This function calls:
  1860 ;;		Nothing
  1861 ;; This function is called by:
  1862 ;;		_utoa
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866                           	psect	text11
  1867  001320                     __ptext11:
  1868                           	opt callstack 0
  1869  001320                     ___lodiv:
  1870                           	opt callstack 26
  1871                           
  1872                           ;incstack = 0
  1873  001320  EE20  F011         	lfsr	2,___lodiv@quotient
  1874  001324  0E07               	movlw	7
  1875  001326                     u901:
  1876  001326  6ADE               	clrf	postinc2,c
  1877  001328  06E8               	decf	wreg,f,c
  1878  00132A  E2FD               	bc	u901
  1879  00132C  5009               	movf	___lodiv@divisor,w,c
  1880  00132E  100A               	iorwf	___lodiv@divisor+1,w,c
  1881  001330  100B               	iorwf	___lodiv@divisor+2,w,c
  1882  001332  100C               	iorwf	___lodiv@divisor+3,w,c
  1883  001334  100D               	iorwf	___lodiv@divisor+4,w,c
  1884  001336  100E               	iorwf	___lodiv@divisor+5,w,c
  1885  001338  100F               	iorwf	___lodiv@divisor+6,w,c
  1886  00133A  1010               	iorwf	___lodiv@divisor+7,w,c
  1887  00133C  B4D8               	btfsc	status,2,c
  1888  00133E  D046               	goto	l871
  1889  001340  0E01               	movlw	1
  1890  001342  6E19               	movwf	___lodiv@counter,c
  1891  001344  D00A               	goto	l1964
  1892  001346                     l1962:
  1893  001346  90D8               	bcf	status,0,c
  1894  001348  3609               	rlcf	___lodiv@divisor,f,c
  1895  00134A  360A               	rlcf	___lodiv@divisor+1,f,c
  1896  00134C  360B               	rlcf	___lodiv@divisor+2,f,c
  1897  00134E  360C               	rlcf	___lodiv@divisor+3,f,c
  1898  001350  360D               	rlcf	___lodiv@divisor+4,f,c
  1899  001352  360E               	rlcf	___lodiv@divisor+5,f,c
  1900  001354  360F               	rlcf	___lodiv@divisor+6,f,c
  1901  001356  3610               	rlcf	___lodiv@divisor+7,f,c
  1902  001358  2A19               	incf	___lodiv@counter,f,c
  1903  00135A                     l1964:
  1904  00135A  AE10               	btfss	___lodiv@divisor+7,7,c
  1905  00135C  D7F4               	goto	l1962
  1906  00135E                     u920:
  1907  00135E  90D8               	bcf	status,0,c
  1908  001360  3611               	rlcf	___lodiv@quotient,f,c
  1909  001362  3612               	rlcf	___lodiv@quotient+1,f,c
  1910  001364  3613               	rlcf	___lodiv@quotient+2,f,c
  1911  001366  3614               	rlcf	___lodiv@quotient+3,f,c
  1912  001368  3615               	rlcf	___lodiv@quotient+4,f,c
  1913  00136A  3616               	rlcf	___lodiv@quotient+5,f,c
  1914  00136C  3617               	rlcf	___lodiv@quotient+6,f,c
  1915  00136E  3618               	rlcf	___lodiv@quotient+7,f,c
  1916  001370  5009               	movf	___lodiv@divisor,w,c
  1917  001372  5C01               	subwf	___lodiv@dividend,w,c
  1918  001374  500A               	movf	___lodiv@divisor+1,w,c
  1919  001376  5802               	subwfb	___lodiv@dividend+1,w,c
  1920  001378  500B               	movf	___lodiv@divisor+2,w,c
  1921  00137A  5803               	subwfb	___lodiv@dividend+2,w,c
  1922  00137C  500C               	movf	___lodiv@divisor+3,w,c
  1923  00137E  5804               	subwfb	___lodiv@dividend+3,w,c
  1924  001380  500D               	movf	___lodiv@divisor+4,w,c
  1925  001382  5805               	subwfb	___lodiv@dividend+4,w,c
  1926  001384  500E               	movf	___lodiv@divisor+5,w,c
  1927  001386  5806               	subwfb	___lodiv@dividend+5,w,c
  1928  001388  500F               	movf	___lodiv@divisor+6,w,c
  1929  00138A  5807               	subwfb	___lodiv@dividend+6,w,c
  1930  00138C  5010               	movf	___lodiv@divisor+7,w,c
  1931  00138E  5808               	subwfb	___lodiv@dividend+7,w,c
  1932  001390  A0D8               	btfss	status,0,c
  1933  001392  D011               	goto	l1974
  1934  001394  5009               	movf	___lodiv@divisor,w,c
  1935  001396  5E01               	subwf	___lodiv@dividend,f,c
  1936  001398  500A               	movf	___lodiv@divisor+1,w,c
  1937  00139A  5A02               	subwfb	___lodiv@dividend+1,f,c
  1938  00139C  500B               	movf	___lodiv@divisor+2,w,c
  1939  00139E  5A03               	subwfb	___lodiv@dividend+2,f,c
  1940  0013A0  500C               	movf	___lodiv@divisor+3,w,c
  1941  0013A2  5A04               	subwfb	___lodiv@dividend+3,f,c
  1942  0013A4  500D               	movf	___lodiv@divisor+4,w,c
  1943  0013A6  5A05               	subwfb	___lodiv@dividend+4,f,c
  1944  0013A8  500E               	movf	___lodiv@divisor+5,w,c
  1945  0013AA  5A06               	subwfb	___lodiv@dividend+5,f,c
  1946  0013AC  500F               	movf	___lodiv@divisor+6,w,c
  1947  0013AE  5A07               	subwfb	___lodiv@dividend+6,f,c
  1948  0013B0  5010               	movf	___lodiv@divisor+7,w,c
  1949  0013B2  5A08               	subwfb	___lodiv@dividend+7,f,c
  1950  0013B4  8011               	bsf	___lodiv@quotient,0,c
  1951  0013B6                     l1974:
  1952  0013B6  90D8               	bcf	status,0,c
  1953  0013B8  3210               	rrcf	___lodiv@divisor+7,f,c
  1954  0013BA  320F               	rrcf	___lodiv@divisor+6,f,c
  1955  0013BC  320E               	rrcf	___lodiv@divisor+5,f,c
  1956  0013BE  320D               	rrcf	___lodiv@divisor+4,f,c
  1957  0013C0  320C               	rrcf	___lodiv@divisor+3,f,c
  1958  0013C2  320B               	rrcf	___lodiv@divisor+2,f,c
  1959  0013C4  320A               	rrcf	___lodiv@divisor+1,f,c
  1960  0013C6  3209               	rrcf	___lodiv@divisor,f,c
  1961  0013C8  2E19               	decfsz	___lodiv@counter,f,c
  1962  0013CA  D7C9               	goto	u920
  1963  0013CC                     l871:
  1964  0013CC  C011  F001         	movff	___lodiv@quotient,?___lodiv
  1965  0013D0  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  1966  0013D4  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  1967  0013D8  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  1968  0013DC  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  1969  0013E0  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  1970  0013E4  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  1971  0013E8  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  1972  0013EC  0012               	return		;funcret
  1973  0013EE                     __end_of___lodiv:
  1974                           	opt callstack 0
  1975                           
  1976 ;; *************** function _config *****************
  1977 ;; Defined at:
  1978 ;;		line 15 in file "config.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;		None
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;		None
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  1    wreg      void 
  1985 ;; Registers used:
  1986 ;;		wreg, status,2, status,0, cstack
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1994 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1995 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1996 ;;Total ram usage:        2 bytes
  1997 ;; Hardware stack levels used:    1
  1998 ;; Hardware stack levels required when called:    5
  1999 ;; This function calls:
  2000 ;;		_Cursor_Off
  2001 ;;		_I2C_Master_Init
  2002 ;;		_Lcd_Clear
  2003 ;;		_Lcd_Init
  2004 ;;		_Lcd_Set_Cursor
  2005 ;;		_USARTInit
  2006 ;; This function is called by:
  2007 ;;		_main
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           	psect	text12
  2012  0013EE                     __ptext12:
  2013                           	opt callstack 0
  2014  0013EE                     _config:
  2015                           	opt callstack 25
  2016                           
  2017                           ;config.c: 18:     OSCCONbits.IRCF0=1;
  2018                           
  2019                           ;incstack = 0
  2020  0013EE  88D3               	bsf	4051,4,c	;volatile
  2021                           
  2022                           ;config.c: 19:     OSCCONbits.IRCF1=1;
  2023  0013F0  8AD3               	bsf	4051,5,c	;volatile
  2024                           
  2025                           ;config.c: 20:     OSCCONbits.IRCF2=1;
  2026  0013F2  8CD3               	bsf	4051,6,c	;volatile
  2027                           
  2028                           ;config.c: 21:     OSCTUNEbits.PLLEN = 1;
  2029  0013F4  8C9B               	bsf	3995,6,c	;volatile
  2030                           
  2031                           ;config.c: 22:     INTCONbits.GIE=0;
  2032  0013F6  9EF2               	bcf	4082,7,c	;volatile
  2033                           
  2034                           ;config.c: 24:     ANSELA=0X00;
  2035  0013F8  0E00               	movlw	0
  2036  0013FA  010F               	movlb	15	; () banked
  2037  0013FC  6F38               	movwf	56,b	;volatile
  2038                           
  2039                           ;config.c: 25:     ANSELB=0X00;
  2040  0013FE  0E00               	movlw	0
  2041  001400  6F39               	movwf	57,b	;volatile
  2042                           
  2043                           ;config.c: 26:     ANSELC=0X00;
  2044  001402  0E00               	movlw	0
  2045  001404  6F3A               	movwf	58,b	;volatile
  2046                           
  2047                           ;config.c: 27:     ANSELD=0X00;
  2048  001406  0E00               	movlw	0
  2049  001408  6F3B               	movwf	59,b	;volatile
  2050                           
  2051                           ;config.c: 28:     ANSELE=0X00;
  2052  00140A  0E00               	movlw	0
  2053  00140C  6F3C               	movwf	60,b	;volatile
  2054                           
  2055                           ;config.c: 29:     TRISA=0X00;
  2056  00140E  0E00               	movlw	0
  2057  001410  6E92               	movwf	3986,c	;volatile
  2058                           
  2059                           ;config.c: 30:     TRISB=0X00;
  2060  001412  0E00               	movlw	0
  2061  001414  6E93               	movwf	3987,c	;volatile
  2062                           
  2063                           ;config.c: 31:     TRISC=0X00;
  2064  001416  0E00               	movlw	0
  2065  001418  6E94               	movwf	3988,c	;volatile
  2066                           
  2067                           ;config.c: 32:     TRISD=0X00;
  2068  00141A  0E00               	movlw	0
  2069  00141C  6E95               	movwf	3989,c	;volatile
  2070                           
  2071                           ;config.c: 33:     TRISE=0X00;
  2072  00141E  0E00               	movlw	0
  2073  001420  6E96               	movwf	3990,c	;volatile
  2074                           
  2075                           ;config.c: 34:     PORTA=0X00;
  2076  001422  0E00               	movlw	0
  2077  001424  6E80               	movwf	3968,c	;volatile
  2078                           
  2079                           ;config.c: 35:     PORTB=0X00;
  2080  001426  0E00               	movlw	0
  2081  001428  6E81               	movwf	3969,c	;volatile
  2082                           
  2083                           ;config.c: 36:     PORTC=0X00;
  2084  00142A  0E00               	movlw	0
  2085  00142C  6E82               	movwf	3970,c	;volatile
  2086                           
  2087                           ;config.c: 37:     PORTD=0X00;
  2088  00142E  0E00               	movlw	0
  2089  001430  6E83               	movwf	3971,c	;volatile
  2090                           
  2091                           ;config.c: 38:     PORTE=0X00;
  2092  001432  0E00               	movlw	0
  2093  001434  6E84               	movwf	3972,c	;volatile
  2094                           
  2095                           ;config.c: 39:     LATA=0X00;
  2096  001436  0E00               	movlw	0
  2097  001438  6E89               	movwf	3977,c	;volatile
  2098                           
  2099                           ;config.c: 40:     LATB=0X00;
  2100  00143A  0E00               	movlw	0
  2101  00143C  6E8A               	movwf	3978,c	;volatile
  2102                           
  2103                           ;config.c: 41:     LATC=0X00;
  2104  00143E  0E00               	movlw	0
  2105  001440  6E8B               	movwf	3979,c	;volatile
  2106                           
  2107                           ;config.c: 42:     LATD=0X00;
  2108  001442  0E00               	movlw	0
  2109  001444  6E8C               	movwf	3980,c	;volatile
  2110                           
  2111                           ;config.c: 43:     LATE=0X00;
  2112  001446  0E00               	movlw	0
  2113  001448  6E8D               	movwf	3981,c	;volatile
  2114                           
  2115                           ; BSR set to: 15
  2116                           ;config.c: 45:     TRISCbits.TRISC3=1;
  2117  00144A  8694               	bsf	3988,3,c	;volatile
  2118                           
  2119                           ; BSR set to: 15
  2120                           ;config.c: 46:     TRISCbits.TRISC4=1;
  2121  00144C  8894               	bsf	3988,4,c	;volatile
  2122                           
  2123                           ; BSR set to: 15
  2124                           ;config.c: 47:     I2C_Master_Init(100000);
  2125  00144E  0EA0               	movlw	160
  2126  001450  6E0E               	movwf	I2C_Master_Init@c,c
  2127  001452  0E86               	movlw	134
  2128  001454  6E0F               	movwf	I2C_Master_Init@c+1,c
  2129  001456  0E01               	movlw	1
  2130  001458  6E10               	movwf	I2C_Master_Init@c+2,c
  2131  00145A  0E00               	movlw	0
  2132  00145C  6E11               	movwf	I2C_Master_Init@c+3,c
  2133  00145E  EC41  F00C         	call	_I2C_Master_Init	;wreg free
  2134                           
  2135                           ;config.c: 48:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2136  001462  0E09               	movlw	9
  2137  001464  6E17               	movwf	(??_config+1)& (0+255),c
  2138  001466  0E1E               	movlw	30
  2139  001468  6E16               	movwf	??_config& (0+255),c
  2140  00146A  0EE4               	movlw	228
  2141  00146C                     u1687:
  2142  00146C  2EE8               	decfsz	wreg,f,c
  2143  00146E  D7FE               	bra	u1687
  2144  001470  2E16               	decfsz	??_config& (0+255),f,c
  2145  001472  D7FC               	bra	u1687
  2146  001474  2E17               	decfsz	(??_config+1)& (0+255),f,c
  2147  001476  D7FA               	bra	u1687
  2148  001478  D000               	nop2	
  2149                           
  2150                           ;config.c: 49:     USARTInit(19200);
  2151  00147A  0E4B               	movlw	75
  2152  00147C  6E02               	movwf	USARTInit@baud_rate+1,c
  2153  00147E  0E00               	movlw	0
  2154  001480  6E01               	movwf	USARTInit@baud_rate,c
  2155  001482  EC90  F00B         	call	_USARTInit	;wreg free
  2156                           
  2157                           ;config.c: 51:     Lcd_Init();
  2158  001486  ECCE  F00B         	call	_Lcd_Init	;wreg free
  2159                           
  2160                           ;config.c: 52:     Lcd_Clear();
  2161  00148A  ECAA  F00D         	call	_Lcd_Clear	;wreg free
  2162                           
  2163                           ;config.c: 53:     Cursor_Off();
  2164  00148E  ECB1  F00D         	call	_Cursor_Off	;wreg free
  2165                           
  2166                           ;config.c: 54:     Lcd_Set_Cursor(1,1);
  2167  001492  0E01               	movlw	1
  2168  001494  6E0B               	movwf	Lcd_Set_Cursor@b,c
  2169  001496  0E01               	movlw	1
  2170  001498  ECEE  F00C         	call	_Lcd_Set_Cursor
  2171                           
  2172                           ;config.c: 55:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2173  00149C  0E09               	movlw	9
  2174  00149E  6E17               	movwf	(??_config+1)& (0+255),c
  2175  0014A0  0E1E               	movlw	30
  2176  0014A2  6E16               	movwf	??_config& (0+255),c
  2177  0014A4  0EE4               	movlw	228
  2178  0014A6                     u1697:
  2179  0014A6  2EE8               	decfsz	wreg,f,c
  2180  0014A8  D7FE               	bra	u1697
  2181  0014AA  2E16               	decfsz	??_config& (0+255),f,c
  2182  0014AC  D7FC               	bra	u1697
  2183  0014AE  2E17               	decfsz	(??_config+1)& (0+255),f,c
  2184  0014B0  D7FA               	bra	u1697
  2185  0014B2  D000               	nop2	
  2186  0014B4  0012               	return		;funcret
  2187  0014B6                     __end_of_config:
  2188                           	opt callstack 0
  2189                           
  2190 ;; *************** function _USARTInit *****************
  2191 ;; Defined at:
  2192 ;;		line 31 in file "usart.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;  baud_rate       2    0[COMRAM] unsigned short 
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;		None
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg, status,2, status,0
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2206 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2208 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2209 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2210 ;;Total ram usage:        4 bytes
  2211 ;; Hardware stack levels used:    1
  2212 ;; This function calls:
  2213 ;;		Nothing
  2214 ;; This function is called by:
  2215 ;;		_config
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           	psect	text13
  2220  001720                     __ptext13:
  2221                           	opt callstack 0
  2222  001720                     _USARTInit:
  2223                           	opt callstack 29
  2224                           
  2225                           ;usart.c: 31: void USARTInit(uint16_t baud_rate);usart.c: 32: {;usart.c: 34:     UQFront
      +                          =UQEnd=-1;
  2226                           
  2227                           ;incstack = 0
  2228  001720  0100               	movlb	0	; () banked
  2229  001722  69B4               	setf	_UQEnd& (0+255),b	;volatile
  2230  001724  69B5               	setf	_UQFront& (0+255),b	;volatile
  2231                           
  2232                           ;usart.c: 37:     switch(baud_rate)
  2233  001726  D009               	goto	l2134
  2234  001728                     l2124:
  2235                           
  2236                           ; BSR set to: 0
  2237                           ;usart.c: 40:         SPBRG1=103;
  2238  001728  0E67               	movlw	103
  2239  00172A  D005               	goto	L3
  2240  00172C                     l2126:
  2241                           
  2242                           ; BSR set to: 0
  2243                           ;usart.c: 43:         SPBRG1=207;
  2244  00172C  0ECF               	movlw	207
  2245  00172E  D003               	goto	L3
  2246  001730                     l2128:
  2247                           
  2248                           ; BSR set to: 0
  2249                           ;usart.c: 46:         SPBRG1=42;
  2250  001730  0E2A               	movlw	42
  2251  001732  D001               	goto	L3
  2252  001734                     l2130:
  2253                           
  2254                           ; BSR set to: 0
  2255                           ;usart.c: 49:         SPBRG1=36;
  2256  001734  0E24               	movlw	36
  2257  001736                     L3:
  2258  001736  6EAF               	movwf	4015,c	;volatile
  2259                           
  2260                           ;usart.c: 50:         break;
  2261  001738  D025               	goto	l250
  2262  00173A                     l2134:
  2263                           
  2264                           ; BSR set to: 0
  2265  00173A  C001  F003         	movff	USARTInit@baud_rate,??_USARTInit
  2266  00173E  C002  F004         	movff	USARTInit@baud_rate+1,??_USARTInit+1
  2267                           
  2268                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 4 sub-sw
      +                          itches
  2269                           ; Switch size 1, requested type "simple"
  2270                           ; Number of cases is 4, Range of values is 37 to 131
  2271                           ; switch strategies available:
  2272                           ; Name         Instructions Cycles
  2273                           ; simple_byte           13     7 (average)
  2274                           ;	Chosen strategy is simple_byte
  2275  001742  5004               	movf	??_USARTInit+1,w,c
  2276  001744  0A25               	xorlw	37	; case 37
  2277  001746  B4D8               	btfsc	status,2,c
  2278  001748  D00A               	goto	l2766
  2279  00174A  0A6E               	xorlw	110	; case 75
  2280  00174C  B4D8               	btfsc	status,2,c
  2281  00174E  D00C               	goto	l2768
  2282  001750  0A3B               	xorlw	59	; case 112
  2283  001752  B4D8               	btfsc	status,2,c
  2284  001754  D00E               	goto	l2770
  2285  001756  0AF3               	xorlw	243	; case 131
  2286  001758  B4D8               	btfsc	status,2,c
  2287  00175A  D010               	goto	l2772
  2288  00175C  D013               	goto	l250
  2289  00175E                     l2766:
  2290                           
  2291                           ; BSR set to: 0
  2292                           ; Switch size 1, requested type "simple"
  2293                           ; Number of cases is 1, Range of values is 128 to 128
  2294                           ; switch strategies available:
  2295                           ; Name         Instructions Cycles
  2296                           ; simple_byte            4     3 (average)
  2297                           ;	Chosen strategy is simple_byte
  2298  00175E  5003               	movf	??_USARTInit,w,c
  2299  001760  0A80               	xorlw	128	; case 128
  2300  001762  B4D8               	btfsc	status,2,c
  2301  001764  D7E1               	goto	l2124
  2302  001766  D00E               	goto	l250
  2303  001768                     l2768:
  2304                           
  2305                           ; BSR set to: 0
  2306                           ; Switch size 1, requested type "simple"
  2307                           ; Number of cases is 1, Range of values is 0 to 0
  2308                           ; switch strategies available:
  2309                           ; Name         Instructions Cycles
  2310                           ; simple_byte            4     3 (average)
  2311                           ;	Chosen strategy is simple_byte
  2312  001768  5003               	movf	??_USARTInit,w,c
  2313  00176A  0A00               	xorlw	0	; case 0
  2314  00176C  B4D8               	btfsc	status,2,c
  2315  00176E  D7DE               	goto	l2126
  2316  001770  D009               	goto	l250
  2317  001772                     l2770:
  2318                           
  2319                           ; BSR set to: 0
  2320                           ; Switch size 1, requested type "simple"
  2321                           ; Number of cases is 1, Range of values is 128 to 128
  2322                           ; switch strategies available:
  2323                           ; Name         Instructions Cycles
  2324                           ; simple_byte            4     3 (average)
  2325                           ;	Chosen strategy is simple_byte
  2326  001772  5003               	movf	??_USARTInit,w,c
  2327  001774  0A80               	xorlw	128	; case 128
  2328  001776  B4D8               	btfsc	status,2,c
  2329  001778  D7DB               	goto	l2128
  2330  00177A  D004               	goto	l250
  2331  00177C                     l2772:
  2332                           
  2333                           ; BSR set to: 0
  2334                           ; Switch size 1, requested type "simple"
  2335                           ; Number of cases is 1, Range of values is 64 to 64
  2336                           ; switch strategies available:
  2337                           ; Name         Instructions Cycles
  2338                           ; simple_byte            4     3 (average)
  2339                           ;	Chosen strategy is simple_byte
  2340  00177C  5003               	movf	??_USARTInit,w,c
  2341  00177E  0A40               	xorlw	64	; case 64
  2342  001780  B4D8               	btfsc	status,2,c
  2343  001782  D7D8               	goto	l2130
  2344  001784                     l250:
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;usart.c: 53:     TXSTA1bits.TX9=0;
  2348  001784  9CAC               	bcf	4012,6,c	;volatile
  2349                           
  2350                           ;usart.c: 54:     TXSTA1bits.TXEN=1;
  2351  001786  8AAC               	bsf	4012,5,c	;volatile
  2352                           
  2353                           ;usart.c: 55:     TXSTA1bits.SYNC=0;
  2354  001788  98AC               	bcf	4012,4,c	;volatile
  2355                           
  2356                           ;usart.c: 56:     TXSTA1bits.BRGH=1;
  2357  00178A  84AC               	bsf	4012,2,c	;volatile
  2358                           
  2359                           ;usart.c: 59:     RCSTA1bits.SPEN=1;
  2360  00178C  8EAB               	bsf	4011,7,c	;volatile
  2361                           
  2362                           ;usart.c: 60:     RCSTA1bits.RX9=0;
  2363  00178E  9CAB               	bcf	4011,6,c	;volatile
  2364                           
  2365                           ;usart.c: 61:     RCSTA1bits.CREN=1;
  2366  001790  88AB               	bsf	4011,4,c	;volatile
  2367                           
  2368                           ;usart.c: 62:     RCSTA1bits.ADDEN=0;
  2369  001792  96AB               	bcf	4011,3,c	;volatile
  2370                           
  2371                           ;usart.c: 66:     PIE1bits.RC1IE=1;
  2372  001794  8A9D               	bsf	3997,5,c	;volatile
  2373                           
  2374                           ;usart.c: 67:     PEIE=1;
  2375  001796  8CF2               	bsf	4082,6,c	;volatile
  2376                           
  2377                           ;usart.c: 69:     (INTCONbits.GIE = 1);
  2378  001798  8EF2               	bsf	4082,7,c	;volatile
  2379                           
  2380                           ; BSR set to: 0
  2381  00179A  0012               	return		;funcret
  2382  00179C                     __end_of_USARTInit:
  2383                           	opt callstack 0
  2384                           
  2385 ;; *************** function _Lcd_Set_Cursor *****************
  2386 ;; Defined at:
  2387 ;;		line 50 in file "i2c_display.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;  a               1    wreg     unsigned char 
  2390 ;;  b               1   10[COMRAM] unsigned char 
  2391 ;; Auto vars:     Size  Location     Type
  2392 ;;  a               1   11[COMRAM] unsigned char 
  2393 ;;  temp            1   14[COMRAM] unsigned char 
  2394 ;;  y               1   13[COMRAM] unsigned char 
  2395 ;;  z               1   12[COMRAM] unsigned char 
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  1    wreg      void 
  2398 ;; Registers used:
  2399 ;;		wreg, status,2, status,0, cstack
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2405 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2406 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2408 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2409 ;;Total ram usage:        5 bytes
  2410 ;; Hardware stack levels used:    1
  2411 ;; Hardware stack levels required when called:    4
  2412 ;; This function calls:
  2413 ;;		_Lcd_Cmd
  2414 ;; This function is called by:
  2415 ;;		_config
  2416 ;;		_main
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           	psect	text14
  2421  0019DC                     __ptext14:
  2422                           	opt callstack 0
  2423  0019DC                     _Lcd_Set_Cursor:
  2424                           	opt callstack 25
  2425                           
  2426                           ; BSR set to: 0
  2427                           ;incstack = 0
  2428                           ;Lcd_Set_Cursor@a stored from wreg
  2429  0019DC  6E0C               	movwf	Lcd_Set_Cursor@a,c
  2430                           
  2431                           ;i2c_display.c: 50: void Lcd_Set_Cursor(char a, char b);i2c_display.c: 51: {;i2c_display
      +                          .c: 52:  char temp,z,y;;i2c_display.c: 53:  if(a == 1)
  2432  0019DE  040C               	decf	Lcd_Set_Cursor@a,w,c
  2433  0019E0  A4D8               	btfss	status,2,c
  2434  0019E2  D010               	goto	l2182
  2435                           
  2436                           ;i2c_display.c: 54:  {;i2c_display.c: 55:    temp = 0x80 + b - 1;
  2437  0019E4  500B               	movf	Lcd_Set_Cursor@b,w,c
  2438  0019E6  0F7F               	addlw	127
  2439  0019E8  6E0F               	movwf	Lcd_Set_Cursor@temp,c
  2440                           
  2441                           ;i2c_display.c: 56:   z = temp>>4;
  2442  0019EA  380F               	swapf	Lcd_Set_Cursor@temp,w,c
  2443  0019EC  0B0F               	andlw	15
  2444  0019EE  6E0D               	movwf	Lcd_Set_Cursor@z,c
  2445                           
  2446                           ;i2c_display.c: 57:   y = temp & 0x0F;
  2447  0019F0  500F               	movf	Lcd_Set_Cursor@temp,w,c
  2448  0019F2  0B0F               	andlw	15
  2449  0019F4  6E0E               	movwf	Lcd_Set_Cursor@y,c
  2450                           
  2451                           ;i2c_display.c: 58:   Lcd_Cmd(z);
  2452  0019F6  500D               	movf	Lcd_Set_Cursor@z,w,c
  2453  0019F8  EC16  F00D         	call	_Lcd_Cmd
  2454                           
  2455                           ;i2c_display.c: 59:   Lcd_Cmd(y);
  2456  0019FC  500E               	movf	Lcd_Set_Cursor@y,w,c
  2457  0019FE  EC16  F00D         	call	_Lcd_Cmd
  2458                           
  2459                           ;i2c_display.c: 60:  }
  2460  001A02  0012               	return	
  2461  001A04                     l2182:
  2462  001A04  0E02               	movlw	2
  2463  001A06  180C               	xorwf	Lcd_Set_Cursor@a,w,c
  2464  001A08  A4D8               	btfss	status,2,c
  2465  001A0A  0012               	return	
  2466                           
  2467                           ;i2c_display.c: 62:  {;i2c_display.c: 63:   temp = 0xC0 + b - 1;
  2468  001A0C  500B               	movf	Lcd_Set_Cursor@b,w,c
  2469  001A0E  0FBF               	addlw	191
  2470  001A10  6E0F               	movwf	Lcd_Set_Cursor@temp,c
  2471                           
  2472                           ;i2c_display.c: 64:   z = temp>>4;
  2473  001A12  380F               	swapf	Lcd_Set_Cursor@temp,w,c
  2474  001A14  0B0F               	andlw	15
  2475  001A16  6E0D               	movwf	Lcd_Set_Cursor@z,c
  2476                           
  2477                           ;i2c_display.c: 65:   y = temp & 0x0F;
  2478  001A18  500F               	movf	Lcd_Set_Cursor@temp,w,c
  2479  001A1A  0B0F               	andlw	15
  2480  001A1C  6E0E               	movwf	Lcd_Set_Cursor@y,c
  2481                           
  2482                           ;i2c_display.c: 66:   Lcd_Cmd(z);
  2483  001A1E  500D               	movf	Lcd_Set_Cursor@z,w,c
  2484  001A20  EC16  F00D         	call	_Lcd_Cmd
  2485                           
  2486                           ;i2c_display.c: 67:   Lcd_Cmd(y);
  2487  001A24  500E               	movf	Lcd_Set_Cursor@y,w,c
  2488  001A26  EC16  F00D         	call	_Lcd_Cmd
  2489  001A2A  0012               	return		;funcret
  2490  001A2C                     __end_of_Lcd_Set_Cursor:
  2491                           	opt callstack 0
  2492                           
  2493 ;; *************** function _Lcd_Init *****************
  2494 ;; Defined at:
  2495 ;;		line 71 in file "i2c_display.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;		None
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;		None
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  1    wreg      void 
  2502 ;; Registers used:
  2503 ;;		wreg, status,2, status,0, cstack
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2511 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2512 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;Total ram usage:        2 bytes
  2514 ;; Hardware stack levels used:    1
  2515 ;; Hardware stack levels required when called:    4
  2516 ;; This function calls:
  2517 ;;		_Lcd_Cmd
  2518 ;;		_Lcd_Port
  2519 ;; This function is called by:
  2520 ;;		_config
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           	psect	text15
  2525  00179C                     __ptext15:
  2526                           	opt callstack 0
  2527  00179C                     _Lcd_Init:
  2528                           	opt callstack 25
  2529                           
  2530                           ;i2c_display.c: 73:   Lcd_Port(0x00);
  2531                           
  2532                           ;incstack = 0
  2533  00179C  0E00               	movlw	0
  2534  00179E  EC85  F00D         	call	_Lcd_Port
  2535                           
  2536                           ;i2c_display.c: 74:    _delay((unsigned long)((20)*(64000000/4000.0)));
  2537  0017A2  0E02               	movlw	2
  2538  0017A4  6E0C               	movwf	(??_Lcd_Init+1)& (0+255),c
  2539  0017A6  0EA0               	movlw	160
  2540  0017A8  6E0B               	movwf	??_Lcd_Init& (0+255),c
  2541  0017AA  0E92               	movlw	146
  2542  0017AC                     u1707:
  2543  0017AC  2EE8               	decfsz	wreg,f,c
  2544  0017AE  D7FE               	bra	u1707
  2545  0017B0  2E0B               	decfsz	??_Lcd_Init& (0+255),f,c
  2546  0017B2  D7FC               	bra	u1707
  2547  0017B4  2E0C               	decfsz	(??_Lcd_Init+1)& (0+255),f,c
  2548  0017B6  D7FA               	bra	u1707
  2549  0017B8  D000               	nop2	
  2550                           
  2551                           ;i2c_display.c: 75:   Lcd_Cmd(0x03);
  2552  0017BA  0E03               	movlw	3
  2553  0017BC  EC16  F00D         	call	_Lcd_Cmd
  2554                           
  2555                           ;i2c_display.c: 76:  _delay((unsigned long)((5)*(64000000/4000.0)));
  2556  0017C0  0E68               	movlw	104
  2557  0017C2  6E0B               	movwf	??_Lcd_Init& (0+255),c
  2558  0017C4  0EE4               	movlw	228
  2559  0017C6                     u1717:
  2560  0017C6  2EE8               	decfsz	wreg,f,c
  2561  0017C8  D7FE               	bra	u1717
  2562  0017CA  2E0B               	decfsz	??_Lcd_Init& (0+255),f,c
  2563  0017CC  D7FC               	bra	u1717
  2564  0017CE  D000               	nop2	
  2565                           
  2566                           ;i2c_display.c: 77:   Lcd_Cmd(0x03);
  2567  0017D0  0E03               	movlw	3
  2568  0017D2  EC16  F00D         	call	_Lcd_Cmd
  2569                           
  2570                           ;i2c_display.c: 78:  _delay((unsigned long)((11)*(64000000/4000.0)));
  2571  0017D6  0EE5               	movlw	229
  2572  0017D8  6E0B               	movwf	??_Lcd_Init& (0+255),c
  2573  0017DA  0E91               	movlw	145
  2574  0017DC                     u1727:
  2575  0017DC  2EE8               	decfsz	wreg,f,c
  2576  0017DE  D7FE               	bra	u1727
  2577  0017E0  2E0B               	decfsz	??_Lcd_Init& (0+255),f,c
  2578  0017E2  D7FC               	bra	u1727
  2579  0017E4  F000               	nop	
  2580                           
  2581                           ;i2c_display.c: 79:   Lcd_Cmd(0x03);
  2582  0017E6  0E03               	movlw	3
  2583  0017E8  EC16  F00D         	call	_Lcd_Cmd
  2584                           
  2585                           ;i2c_display.c: 81:   Lcd_Cmd(0x02);
  2586  0017EC  0E02               	movlw	2
  2587  0017EE  EC16  F00D         	call	_Lcd_Cmd
  2588                           
  2589                           ;i2c_display.c: 82:   Lcd_Cmd(0x02);
  2590  0017F2  0E02               	movlw	2
  2591  0017F4  EC16  F00D         	call	_Lcd_Cmd
  2592                           
  2593                           ;i2c_display.c: 83:   Lcd_Cmd(0x08);
  2594  0017F8  0E08               	movlw	8
  2595  0017FA  EC16  F00D         	call	_Lcd_Cmd
  2596                           
  2597                           ;i2c_display.c: 84:   Lcd_Cmd(0x00);
  2598  0017FE  0E00               	movlw	0
  2599  001800  EC16  F00D         	call	_Lcd_Cmd
  2600                           
  2601                           ;i2c_display.c: 85:   Lcd_Cmd(0x0C);
  2602  001804  0E0C               	movlw	12
  2603  001806  EC16  F00D         	call	_Lcd_Cmd
  2604                           
  2605                           ;i2c_display.c: 86:   Lcd_Cmd(0x00);
  2606  00180A  0E00               	movlw	0
  2607  00180C  EC16  F00D         	call	_Lcd_Cmd
  2608                           
  2609                           ;i2c_display.c: 87:   Lcd_Cmd(0x06);
  2610  001810  0E06               	movlw	6
  2611  001812  EC16  F00D         	call	_Lcd_Cmd
  2612  001816  0012               	return		;funcret
  2613  001818                     __end_of_Lcd_Init:
  2614                           	opt callstack 0
  2615                           
  2616 ;; *************** function _Lcd_Clear *****************
  2617 ;; Defined at:
  2618 ;;		line 44 in file "i2c_display.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;		None
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;		None
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  1    wreg      void 
  2625 ;; Registers used:
  2626 ;;		wreg, status,2, status,0, cstack
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2636 ;;Total ram usage:        0 bytes
  2637 ;; Hardware stack levels used:    1
  2638 ;; Hardware stack levels required when called:    4
  2639 ;; This function calls:
  2640 ;;		_Lcd_Cmd
  2641 ;; This function is called by:
  2642 ;;		_config
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           	psect	text16
  2647  001B54                     __ptext16:
  2648                           	opt callstack 0
  2649  001B54                     _Lcd_Clear:
  2650                           	opt callstack 25
  2651                           
  2652                           ;i2c_display.c: 46:  Lcd_Cmd(0);
  2653                           
  2654                           ;incstack = 0
  2655  001B54  0E00               	movlw	0
  2656  001B56  EC16  F00D         	call	_Lcd_Cmd
  2657                           
  2658                           ;i2c_display.c: 47:  Lcd_Cmd(1);
  2659  001B5A  0E01               	movlw	1
  2660  001B5C  EC16  F00D         	call	_Lcd_Cmd
  2661  001B60  0012               	return		;funcret
  2662  001B62                     __end_of_Lcd_Clear:
  2663                           	opt callstack 0
  2664                           
  2665 ;; *************** function _I2C_Master_Init *****************
  2666 ;; Defined at:
  2667 ;;		line 164 in file "i2c_display.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  c               4   13[COMRAM] const unsigned long 
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;		None
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  1    wreg      void 
  2674 ;; Registers used:
  2675 ;;		wreg, status,2, status,0, cstack
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2681 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2683 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2684 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2685 ;;Total ram usage:        8 bytes
  2686 ;; Hardware stack levels used:    1
  2687 ;; Hardware stack levels required when called:    1
  2688 ;; This function calls:
  2689 ;;		___lldiv
  2690 ;; This function is called by:
  2691 ;;		_config
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           	psect	text17
  2696  001882                     __ptext17:
  2697                           	opt callstack 0
  2698  001882                     _I2C_Master_Init:
  2699                           	opt callstack 28
  2700                           
  2701                           ;i2c_display.c: 164: void I2C_Master_Init(const unsigned long c);i2c_display.c: 165: {;i
      +                          2c_display.c: 166:     SSP1CON1 = 0b00101000;
  2702                           
  2703                           ;incstack = 0
  2704  001882  0E28               	movlw	40
  2705  001884  6EC6               	movwf	4038,c	;volatile
  2706                           
  2707                           ;i2c_display.c: 167:     SSP1CON2 = 0x00;
  2708  001886  0E00               	movlw	0
  2709  001888  6EC5               	movwf	4037,c	;volatile
  2710                           
  2711                           ;i2c_display.c: 168:     SSP1ADD = (64000000/(4*c))-1;
  2712  00188A  0E00               	movlw	0
  2713  00188C  6E01               	movwf	___lldiv@dividend,c
  2714  00188E  0E90               	movlw	144
  2715  001890  6E02               	movwf	___lldiv@dividend+1,c
  2716  001892  0ED0               	movlw	208
  2717  001894  6E03               	movwf	___lldiv@dividend+2,c
  2718  001896  0E03               	movlw	3
  2719  001898  6E04               	movwf	___lldiv@dividend+3,c
  2720  00189A  C00E  F012         	movff	I2C_Master_Init@c,??_I2C_Master_Init
  2721  00189E  C00F  F013         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
  2722  0018A2  C010  F014         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
  2723  0018A6  C011  F015         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
  2724  0018AA  0E02               	movlw	2
  2725  0018AC                     u1105:
  2726  0018AC  90D8               	bcf	status,0,c
  2727  0018AE  3612               	rlcf	??_I2C_Master_Init,f,c
  2728  0018B0  3613               	rlcf	??_I2C_Master_Init+1,f,c
  2729  0018B2  3614               	rlcf	??_I2C_Master_Init+2,f,c
  2730  0018B4  3615               	rlcf	??_I2C_Master_Init+3,f,c
  2731  0018B6  2EE8               	decfsz	wreg,f,c
  2732  0018B8  D7F9               	goto	u1105
  2733  0018BA  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
  2734  0018BE  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  2735  0018C2  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  2736  0018C6  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  2737  0018CA  EC4F  F00B         	call	___lldiv	;wreg free
  2738  0018CE  0401               	decf	?___lldiv,w,c
  2739  0018D0  6EC8               	movwf	4040,c	;volatile
  2740                           
  2741                           ;i2c_display.c: 169:     SSP1STAT = 0x00;
  2742  0018D2  0E00               	movlw	0
  2743  0018D4  6EC7               	movwf	4039,c	;volatile
  2744                           
  2745                           ;i2c_display.c: 170:     TRISCbits.TRISC3=1;
  2746  0018D6  8694               	bsf	3988,3,c	;volatile
  2747                           
  2748                           ;i2c_display.c: 171:     TRISCbits.TRISC4=1;
  2749  0018D8  8894               	bsf	3988,4,c	;volatile
  2750  0018DA  0012               	return		;funcret
  2751  0018DC                     __end_of_I2C_Master_Init:
  2752                           	opt callstack 0
  2753                           
  2754 ;; *************** function ___lldiv *****************
  2755 ;; Defined at:
  2756 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  dividend        4    0[COMRAM] unsigned long 
  2759 ;;  divisor         4    4[COMRAM] unsigned long 
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;  quotient        4    8[COMRAM] unsigned long 
  2762 ;;  counter         1   12[COMRAM] unsigned char 
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  4    0[COMRAM] unsigned long 
  2765 ;; Registers used:
  2766 ;;		wreg, status,2, status,0
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2772 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2773 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2775 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2776 ;;Total ram usage:       13 bytes
  2777 ;; Hardware stack levels used:    1
  2778 ;; This function calls:
  2779 ;;		Nothing
  2780 ;; This function is called by:
  2781 ;;		_I2C_Master_Init
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           	psect	text18
  2786  00169E                     __ptext18:
  2787                           	opt callstack 0
  2788  00169E                     ___lldiv:
  2789                           	opt callstack 28
  2790                           
  2791                           ;incstack = 0
  2792  00169E  0E00               	movlw	0
  2793  0016A0  6E09               	movwf	___lldiv@quotient,c
  2794  0016A2  0E00               	movlw	0
  2795  0016A4  6E0A               	movwf	___lldiv@quotient+1,c
  2796  0016A6  0E00               	movlw	0
  2797  0016A8  6E0B               	movwf	___lldiv@quotient+2,c
  2798  0016AA  0E00               	movlw	0
  2799  0016AC  6E0C               	movwf	___lldiv@quotient+3,c
  2800  0016AE  5005               	movf	___lldiv@divisor,w,c
  2801  0016B0  1006               	iorwf	___lldiv@divisor+1,w,c
  2802  0016B2  1007               	iorwf	___lldiv@divisor+2,w,c
  2803  0016B4  1008               	iorwf	___lldiv@divisor+3,w,c
  2804  0016B6  B4D8               	btfsc	status,2,c
  2805  0016B8  D02A               	goto	l460
  2806  0016BA  0E01               	movlw	1
  2807  0016BC  6E0D               	movwf	___lldiv@counter,c
  2808  0016BE  D006               	goto	l2098
  2809  0016C0                     l2096:
  2810  0016C0  90D8               	bcf	status,0,c
  2811  0016C2  3605               	rlcf	___lldiv@divisor,f,c
  2812  0016C4  3606               	rlcf	___lldiv@divisor+1,f,c
  2813  0016C6  3607               	rlcf	___lldiv@divisor+2,f,c
  2814  0016C8  3608               	rlcf	___lldiv@divisor+3,f,c
  2815  0016CA  2A0D               	incf	___lldiv@counter,f,c
  2816  0016CC                     l2098:
  2817  0016CC  AE08               	btfss	___lldiv@divisor+3,7,c
  2818  0016CE  D7F8               	goto	l2096
  2819  0016D0                     u1080:
  2820  0016D0  90D8               	bcf	status,0,c
  2821  0016D2  3609               	rlcf	___lldiv@quotient,f,c
  2822  0016D4  360A               	rlcf	___lldiv@quotient+1,f,c
  2823  0016D6  360B               	rlcf	___lldiv@quotient+2,f,c
  2824  0016D8  360C               	rlcf	___lldiv@quotient+3,f,c
  2825  0016DA  5005               	movf	___lldiv@divisor,w,c
  2826  0016DC  5C01               	subwf	___lldiv@dividend,w,c
  2827  0016DE  5006               	movf	___lldiv@divisor+1,w,c
  2828  0016E0  5802               	subwfb	___lldiv@dividend+1,w,c
  2829  0016E2  5007               	movf	___lldiv@divisor+2,w,c
  2830  0016E4  5803               	subwfb	___lldiv@dividend+2,w,c
  2831  0016E6  5008               	movf	___lldiv@divisor+3,w,c
  2832  0016E8  5804               	subwfb	___lldiv@dividend+3,w,c
  2833  0016EA  A0D8               	btfss	status,0,c
  2834  0016EC  D009               	goto	l2108
  2835  0016EE  5005               	movf	___lldiv@divisor,w,c
  2836  0016F0  5E01               	subwf	___lldiv@dividend,f,c
  2837  0016F2  5006               	movf	___lldiv@divisor+1,w,c
  2838  0016F4  5A02               	subwfb	___lldiv@dividend+1,f,c
  2839  0016F6  5007               	movf	___lldiv@divisor+2,w,c
  2840  0016F8  5A03               	subwfb	___lldiv@dividend+2,f,c
  2841  0016FA  5008               	movf	___lldiv@divisor+3,w,c
  2842  0016FC  5A04               	subwfb	___lldiv@dividend+3,f,c
  2843  0016FE  8009               	bsf	___lldiv@quotient,0,c
  2844  001700                     l2108:
  2845  001700  90D8               	bcf	status,0,c
  2846  001702  3208               	rrcf	___lldiv@divisor+3,f,c
  2847  001704  3207               	rrcf	___lldiv@divisor+2,f,c
  2848  001706  3206               	rrcf	___lldiv@divisor+1,f,c
  2849  001708  3205               	rrcf	___lldiv@divisor,f,c
  2850  00170A  2E0D               	decfsz	___lldiv@counter,f,c
  2851  00170C  D7E1               	goto	u1080
  2852  00170E                     l460:
  2853  00170E  C009  F001         	movff	___lldiv@quotient,?___lldiv
  2854  001712  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  2855  001716  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  2856  00171A  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  2857  00171E  0012               	return		;funcret
  2858  001720                     __end_of___lldiv:
  2859                           	opt callstack 0
  2860                           
  2861 ;; *************** function _Cursor_Off *****************
  2862 ;; Defined at:
  2863 ;;		line 139 in file "i2c_display.c"
  2864 ;; Parameters:    Size  Location     Type
  2865 ;;		None
  2866 ;; Auto vars:     Size  Location     Type
  2867 ;;		None
  2868 ;; Return value:  Size  Location     Type
  2869 ;;                  1    wreg      void 
  2870 ;; Registers used:
  2871 ;;		wreg, status,2, status,0, cstack
  2872 ;; Tracked objects:
  2873 ;;		On entry : 0/0
  2874 ;;		On exit  : 0/0
  2875 ;;		Unchanged: 0/0
  2876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2881 ;;Total ram usage:        0 bytes
  2882 ;; Hardware stack levels used:    1
  2883 ;; Hardware stack levels required when called:    4
  2884 ;; This function calls:
  2885 ;;		_Lcd_Cmd
  2886 ;; This function is called by:
  2887 ;;		_config
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           	psect	text19
  2892  001B62                     __ptext19:
  2893                           	opt callstack 0
  2894  001B62                     _Cursor_Off:
  2895                           	opt callstack 25
  2896                           
  2897                           ;i2c_display.c: 141: Lcd_Cmd(0x00);
  2898                           
  2899                           ;incstack = 0
  2900  001B62  0E00               	movlw	0
  2901  001B64  EC16  F00D         	call	_Lcd_Cmd
  2902                           
  2903                           ;i2c_display.c: 142: Lcd_Cmd(0x0C);
  2904  001B68  0E0C               	movlw	12
  2905  001B6A  EC16  F00D         	call	_Lcd_Cmd
  2906  001B6E  0012               	return		;funcret
  2907  001B70                     __end_of_Cursor_Off:
  2908                           	opt callstack 0
  2909                           
  2910 ;; *************** function _Lcd_Cmd *****************
  2911 ;; Defined at:
  2912 ;;		line 25 in file "i2c_display.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;  a               1    wreg     unsigned char 
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;  a               1    9[COMRAM] unsigned char 
  2917 ;;  buff            2    7[COMRAM] int 
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  1    wreg      void 
  2920 ;; Registers used:
  2921 ;;		wreg, status,2, status,0, cstack
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2928 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2929 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2930 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2931 ;;Total ram usage:        6 bytes
  2932 ;; Hardware stack levels used:    1
  2933 ;; Hardware stack levels required when called:    3
  2934 ;; This function calls:
  2935 ;;		_Lcd_Port
  2936 ;; This function is called by:
  2937 ;;		_Lcd_Clear
  2938 ;;		_Lcd_Set_Cursor
  2939 ;;		_Lcd_Init
  2940 ;;		_Cursor_Off
  2941 ;;		_Lcd_Shift_Right
  2942 ;;		_Lcd_Shift_Left
  2943 ;;		_Cursor_On
  2944 ;;		_Cursor_Left
  2945 ;;		_Cursor_Right
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           	psect	text20
  2950  001A2C                     __ptext20:
  2951                           	opt callstack 0
  2952  001A2C                     _Lcd_Cmd:
  2953                           	opt callstack 25
  2954                           
  2955                           ;incstack = 0
  2956                           ;Lcd_Cmd@a stored from wreg
  2957  001A2C  6E0A               	movwf	Lcd_Cmd@a,c
  2958                           
  2959                           ;i2c_display.c: 25: void Lcd_Cmd(char a);i2c_display.c: 26: {;i2c_display.c: 27:     int
      +                           buff;;i2c_display.c: 28:     a=a<<4;
  2960  001A2E  380A               	swapf	Lcd_Cmd@a,w,c
  2961  001A30  0BF0               	andlw	240
  2962  001A32  6E0A               	movwf	Lcd_Cmd@a,c
  2963  001A34  0E00               	movlw	0
  2964  001A36  EC85  F00D         	call	_Lcd_Port
  2965                           
  2966                           ;i2c_display.c: 33:  Lcd_Port(a);
  2967  001A3A  500A               	movf	Lcd_Cmd@a,w,c
  2968  001A3C  EC85  F00D         	call	_Lcd_Port
  2969                           
  2970                           ;i2c_display.c: 36:     buff=a | 0x00 | 0x04 | 0x00;
  2971  001A40  0E04               	movlw	4
  2972  001A42  C00A  F005         	movff	Lcd_Cmd@a,??_Lcd_Cmd
  2973  001A46  6A06               	clrf	(??_Lcd_Cmd+1)& (0+255),c
  2974  001A48  1005               	iorwf	??_Lcd_Cmd,w,c
  2975  001A4A  6E08               	movwf	Lcd_Cmd@buff,c
  2976  001A4C  5006               	movf	??_Lcd_Cmd+1,w,c
  2977  001A4E  6E09               	movwf	Lcd_Cmd@buff+1,c
  2978                           
  2979                           ;i2c_display.c: 37:     Lcd_Port(buff);
  2980  001A50  5008               	movf	Lcd_Cmd@buff,w,c
  2981  001A52  EC85  F00D         	call	_Lcd_Port
  2982                           
  2983                           ;i2c_display.c: 38:         _delay((unsigned long)((4)*(64000000/4000.0)));
  2984  001A56  0E54               	movlw	84
  2985  001A58  6E05               	movwf	??_Lcd_Cmd& (0+255),c
  2986  001A5A  0E1C               	movlw	28
  2987  001A5C                     u1737:
  2988  001A5C  2EE8               	decfsz	wreg,f,c
  2989  001A5E  D7FE               	bra	u1737
  2990  001A60  2E05               	decfsz	??_Lcd_Cmd& (0+255),f,c
  2991  001A62  D7FC               	bra	u1737
  2992  001A64  D000               	nop2	
  2993                           
  2994                           ;i2c_display.c: 40:     buff=a | 0x00 | 0x00 | 0x00;
  2995  001A66  C00A  F008         	movff	Lcd_Cmd@a,Lcd_Cmd@buff
  2996  001A6A  6A09               	clrf	Lcd_Cmd@buff+1,c
  2997                           
  2998                           ;i2c_display.c: 41:     Lcd_Port(buff);
  2999  001A6C  5008               	movf	Lcd_Cmd@buff,w,c
  3000  001A6E  EC85  F00D         	call	_Lcd_Port
  3001  001A72  0012               	return		;funcret
  3002  001A74                     __end_of_Lcd_Cmd:
  3003                           	opt callstack 0
  3004                           
  3005 ;; *************** function _Lcd_Write_String *****************
  3006 ;; Defined at:
  3007 ;;		line 114 in file "i2c_display.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;  a               2    7[COMRAM] PTR unsigned char 
  3010 ;;		 -> str_i(8), 
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;  i               2    9[COMRAM] int 
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  1    wreg      void 
  3015 ;; Registers used:
  3016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3022 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3023 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3025 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3026 ;;Total ram usage:        4 bytes
  3027 ;; Hardware stack levels used:    1
  3028 ;; Hardware stack levels required when called:    4
  3029 ;; This function calls:
  3030 ;;		_Lcd_Write_Char
  3031 ;; This function is called by:
  3032 ;;		_main
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036                           	psect	text21
  3037  001AAC                     __ptext21:
  3038                           	opt callstack 0
  3039  001AAC                     _Lcd_Write_String:
  3040                           	opt callstack 26
  3041                           
  3042                           ;i2c_display.c: 114: void Lcd_Write_String(char *a);i2c_display.c: 115: {;i2c_display.c:
      +                           116:  int i;;i2c_display.c: 117:  for(i=0;a[i]!='\0';i++)
  3043                           
  3044                           ;incstack = 0
  3045  001AAC  0E00               	movlw	0
  3046  001AAE  6E0B               	movwf	Lcd_Write_String@i+1,c
  3047  001AB0  0E00               	movlw	0
  3048  001AB2  6E0A               	movwf	Lcd_Write_String@i,c
  3049  001AB4  D00B               	goto	l2248
  3050  001AB6                     l2244:
  3051                           
  3052                           ;i2c_display.c: 118:     Lcd_Write_Char(a[i]);
  3053  001AB6  500A               	movf	Lcd_Write_String@i,w,c
  3054  001AB8  2408               	addwf	Lcd_Write_String@a,w,c
  3055  001ABA  6ED9               	movwf	fsr2l,c
  3056  001ABC  500B               	movf	Lcd_Write_String@i+1,w,c
  3057  001ABE  2009               	addwfc	Lcd_Write_String@a+1,w,c
  3058  001AC0  6EDA               	movwf	fsr2h,c
  3059  001AC2  50DF               	movf	indf2,w,c
  3060  001AC4  EC6E  F00C         	call	_Lcd_Write_Char
  3061  001AC8  4A0A               	infsnz	Lcd_Write_String@i,f,c
  3062  001ACA  2A0B               	incf	Lcd_Write_String@i+1,f,c
  3063  001ACC                     l2248:
  3064  001ACC  500A               	movf	Lcd_Write_String@i,w,c
  3065  001ACE  2408               	addwf	Lcd_Write_String@a,w,c
  3066  001AD0  6ED9               	movwf	fsr2l,c
  3067  001AD2  500B               	movf	Lcd_Write_String@i+1,w,c
  3068  001AD4  2009               	addwfc	Lcd_Write_String@a+1,w,c
  3069  001AD6  6EDA               	movwf	fsr2h,c
  3070  001AD8  50DF               	movf	indf2,w,c
  3071  001ADA  B4D8               	btfsc	status,2,c
  3072  001ADC  0012               	return	
  3073  001ADE  D7EB               	goto	l2244
  3074  001AE0                     __end_of_Lcd_Write_String:
  3075                           	opt callstack 0
  3076                           
  3077 ;; *************** function _Lcd_Write_Char *****************
  3078 ;; Defined at:
  3079 ;;		line 90 in file "i2c_display.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;  a               1    wreg     unsigned char 
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;  a               1    4[COMRAM] unsigned char 
  3084 ;;  temp            1    6[COMRAM] unsigned char 
  3085 ;;  y               1    5[COMRAM] unsigned char 
  3086 ;; Return value:  Size  Location     Type
  3087 ;;                  1    wreg      void 
  3088 ;; Registers used:
  3089 ;;		wreg, status,2, status,0, cstack
  3090 ;; Tracked objects:
  3091 ;;		On entry : 0/0
  3092 ;;		On exit  : 0/0
  3093 ;;		Unchanged: 0/0
  3094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3096 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3098 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3099 ;;Total ram usage:        3 bytes
  3100 ;; Hardware stack levels used:    1
  3101 ;; Hardware stack levels required when called:    3
  3102 ;; This function calls:
  3103 ;;		_Lcd_Port
  3104 ;; This function is called by:
  3105 ;;		_Lcd_Write_String
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           
  3109                           	psect	text22
  3110  0018DC                     __ptext22:
  3111                           	opt callstack 0
  3112  0018DC                     _Lcd_Write_Char:
  3113                           	opt callstack 26
  3114                           
  3115                           ;incstack = 0
  3116                           ;Lcd_Write_Char@a stored from wreg
  3117  0018DC  6E05               	movwf	Lcd_Write_Char@a,c
  3118                           
  3119                           ;i2c_display.c: 90: void Lcd_Write_Char(char a);i2c_display.c: 91: {;i2c_display.c: 92: 
      +                             char temp,y;;i2c_display.c: 93:    temp = a&0x0F;
  3120  0018DE  5005               	movf	Lcd_Write_Char@a,w,c
  3121  0018E0  0B0F               	andlw	15
  3122  0018E2  6E07               	movwf	Lcd_Write_Char@temp,c
  3123                           
  3124                           ;i2c_display.c: 94:    temp=temp<<4;
  3125  0018E4  3807               	swapf	Lcd_Write_Char@temp,w,c
  3126  0018E6  0BF0               	andlw	240
  3127  0018E8  6E07               	movwf	Lcd_Write_Char@temp,c
  3128                           
  3129                           ;i2c_display.c: 95:    y = a&0xF0;
  3130  0018EA  5005               	movf	Lcd_Write_Char@a,w,c
  3131  0018EC  0BF0               	andlw	240
  3132  0018EE  6E06               	movwf	Lcd_Write_Char@y,c
  3133                           
  3134                           ;i2c_display.c: 98:    Lcd_Port(0x00 | 0x01 | 0x00 | 0x00);
  3135  0018F0  0E01               	movlw	1
  3136  0018F2  EC85  F00D         	call	_Lcd_Port
  3137                           
  3138                           ;i2c_display.c: 99:    Lcd_Port(y);
  3139  0018F6  5006               	movf	Lcd_Write_Char@y,w,c
  3140  0018F8  EC85  F00D         	call	_Lcd_Port
  3141                           
  3142                           ;i2c_display.c: 101:    Lcd_Port(y | 0x01 | 0x04 | 0x00);
  3143  0018FC  5006               	movf	Lcd_Write_Char@y,w,c
  3144  0018FE  0905               	iorlw	5
  3145  001900  EC85  F00D         	call	_Lcd_Port
  3146                           
  3147                           ;i2c_display.c: 102:    _delay((unsigned long)((40)*(64000000/4000000.0)));
  3148  001904  0ED5               	movlw	213
  3149  001906                     u1747:
  3150  001906  2EE8               	decfsz	wreg,f,c
  3151  001908  D7FE               	bra	u1747
  3152  00190A  F000               	nop	
  3153                           
  3154                           ;i2c_display.c: 104:    Lcd_Port(y | 0x01 | 0x00 | 0x00);
  3155  00190C  5006               	movf	Lcd_Write_Char@y,w,c
  3156  00190E  0901               	iorlw	1
  3157  001910  EC85  F00D         	call	_Lcd_Port
  3158                           
  3159                           ;i2c_display.c: 105:    Lcd_Port(temp);
  3160  001914  5007               	movf	Lcd_Write_Char@temp,w,c
  3161  001916  EC85  F00D         	call	_Lcd_Port
  3162                           
  3163                           ;i2c_display.c: 108:    Lcd_Port(temp | 0x01 | 0x04 | 0x00);
  3164  00191A  5007               	movf	Lcd_Write_Char@temp,w,c
  3165  00191C  0905               	iorlw	5
  3166  00191E  EC85  F00D         	call	_Lcd_Port
  3167                           
  3168                           ;i2c_display.c: 109:    _delay((unsigned long)((40)*(64000000/4000000.0)));
  3169  001922  0ED5               	movlw	213
  3170  001924                     u1757:
  3171  001924  2EE8               	decfsz	wreg,f,c
  3172  001926  D7FE               	bra	u1757
  3173  001928  F000               	nop	
  3174                           
  3175                           ;i2c_display.c: 111:    Lcd_Port(temp | 0x01 | 0x00 | 0x00);
  3176  00192A  5007               	movf	Lcd_Write_Char@temp,w,c
  3177  00192C  0901               	iorlw	1
  3178  00192E  EC85  F00D         	call	_Lcd_Port
  3179  001932  0012               	return		;funcret
  3180  001934                     __end_of_Lcd_Write_Char:
  3181                           	opt callstack 0
  3182                           
  3183 ;; *************** function _Lcd_Port *****************
  3184 ;; Defined at:
  3185 ;;		line 19 in file "i2c_display.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;  data            1    wreg     unsigned char 
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;  data            1    3[COMRAM] unsigned char 
  3190 ;; Return value:  Size  Location     Type
  3191 ;;                  1    wreg      void 
  3192 ;; Registers used:
  3193 ;;		wreg, status,2, status,0, cstack
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3202 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3203 ;;Total ram usage:        1 bytes
  3204 ;; Hardware stack levels used:    1
  3205 ;; Hardware stack levels required when called:    2
  3206 ;; This function calls:
  3207 ;;		_I2C_Master_Start
  3208 ;;		_I2C_Master_Stop
  3209 ;;		_I2C_Write_Display
  3210 ;; This function is called by:
  3211 ;;		_Lcd_Cmd
  3212 ;;		_Lcd_Init
  3213 ;;		_Lcd_Write_Char
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217                           	psect	text23
  3218  001B0A                     __ptext23:
  3219                           	opt callstack 0
  3220  001B0A                     _Lcd_Port:
  3221                           	opt callstack 25
  3222                           
  3223                           ;incstack = 0
  3224                           ;Lcd_Port@data stored from wreg
  3225  001B0A  6E04               	movwf	Lcd_Port@data,c
  3226                           
  3227                           ;i2c_display.c: 19: void Lcd_Port(char data);i2c_display.c: 20: { I2C_Master_Start();
  3228  001B0C  ECC1  F00D         	call	_I2C_Master_Start	;wreg free
  3229                           
  3230                           ;i2c_display.c: 21:     I2C_Write_Display(0x70);
  3231  001B10  0E00               	movlw	0
  3232  001B12  6E03               	movwf	I2C_Write_Display@d+1,c
  3233  001B14  0E70               	movlw	112
  3234  001B16  6E02               	movwf	I2C_Write_Display@d,c
  3235  001B18  ECB8  F00D         	call	_I2C_Write_Display	;wreg free
  3236                           
  3237                           ;i2c_display.c: 22:  I2C_Write_Display(data);
  3238  001B1C  C004  F002         	movff	Lcd_Port@data,I2C_Write_Display@d
  3239  001B20  6A03               	clrf	I2C_Write_Display@d+1,c
  3240  001B22  ECB8  F00D         	call	_I2C_Write_Display	;wreg free
  3241                           
  3242                           ;i2c_display.c: 23:     I2C_Master_Stop();
  3243  001B26  ECBD  F00D         	call	_I2C_Master_Stop	;wreg free
  3244  001B2A  0012               	return		;funcret
  3245  001B2C                     __end_of_Lcd_Port:
  3246                           	opt callstack 0
  3247                           
  3248 ;; *************** function _I2C_Write_Display *****************
  3249 ;; Defined at:
  3250 ;;		line 205 in file "i2c_display.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;  d               2    1[COMRAM] unsigned int 
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;		None
  3255 ;; Return value:  Size  Location     Type
  3256 ;;                  1    wreg      void 
  3257 ;; Registers used:
  3258 ;;		wreg, status,2, status,0, cstack
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3264 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3267 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3268 ;;Total ram usage:        2 bytes
  3269 ;; Hardware stack levels used:    1
  3270 ;; Hardware stack levels required when called:    1
  3271 ;; This function calls:
  3272 ;;		_I2C_Master_Wait
  3273 ;; This function is called by:
  3274 ;;		_Lcd_Port
  3275 ;; This function uses a non-reentrant model
  3276 ;;
  3277                           
  3278                           	psect	text24
  3279  001B70                     __ptext24:
  3280                           	opt callstack 0
  3281  001B70                     _I2C_Write_Display:
  3282                           	opt callstack 25
  3283                           
  3284                           ;i2c_display.c: 205: void I2C_Write_Display(unsigned d);i2c_display.c: 206: {;i2c_displa
      +                          y.c: 207:     I2C_Master_Wait();
  3285                           
  3286                           ;incstack = 0
  3287  001B70  ECA1  F00D         	call	_I2C_Master_Wait	;wreg free
  3288                           
  3289                           ;i2c_display.c: 208:     SSP1BUF = d;
  3290  001B74  C002  FFC9         	movff	I2C_Write_Display@d,4041	;volatile
  3291  001B78  0012               	return		;funcret
  3292  001B7A                     __end_of_I2C_Write_Display:
  3293                           	opt callstack 0
  3294                           
  3295 ;; *************** function _I2C_Master_Stop *****************
  3296 ;; Defined at:
  3297 ;;		line 193 in file "i2c_display.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;		None
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;		None
  3302 ;; Return value:  Size  Location     Type
  3303 ;;                  1    wreg      void 
  3304 ;; Registers used:
  3305 ;;		wreg, status,2, status,0, cstack
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3315 ;;Total ram usage:        0 bytes
  3316 ;; Hardware stack levels used:    1
  3317 ;; Hardware stack levels required when called:    1
  3318 ;; This function calls:
  3319 ;;		_I2C_Master_Wait
  3320 ;; This function is called by:
  3321 ;;		_Lcd_Port
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           	psect	text25
  3326  001B7A                     __ptext25:
  3327                           	opt callstack 0
  3328  001B7A                     _I2C_Master_Stop:
  3329                           	opt callstack 25
  3330                           
  3331                           ;i2c_display.c: 195:     I2C_Master_Wait();
  3332                           
  3333                           ;incstack = 0
  3334  001B7A  ECA1  F00D         	call	_I2C_Master_Wait	;wreg free
  3335                           
  3336                           ;i2c_display.c: 196:     SSP1CON2bits.PEN = 1;
  3337  001B7E  84C5               	bsf	4037,2,c	;volatile
  3338  001B80  0012               	return		;funcret
  3339  001B82                     __end_of_I2C_Master_Stop:
  3340                           	opt callstack 0
  3341                           
  3342 ;; *************** function _I2C_Master_Start *****************
  3343 ;; Defined at:
  3344 ;;		line 181 in file "i2c_display.c"
  3345 ;; Parameters:    Size  Location     Type
  3346 ;;		None
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;		None
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  1    wreg      void 
  3351 ;; Registers used:
  3352 ;;		wreg, status,2, status,0, cstack
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3362 ;;Total ram usage:        0 bytes
  3363 ;; Hardware stack levels used:    1
  3364 ;; Hardware stack levels required when called:    1
  3365 ;; This function calls:
  3366 ;;		_I2C_Master_Wait
  3367 ;; This function is called by:
  3368 ;;		_Lcd_Port
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372                           	psect	text26
  3373  001B82                     __ptext26:
  3374                           	opt callstack 0
  3375  001B82                     _I2C_Master_Start:
  3376                           	opt callstack 25
  3377                           
  3378                           ;i2c_display.c: 183:     I2C_Master_Wait();
  3379                           
  3380                           ;incstack = 0
  3381  001B82  ECA1  F00D         	call	_I2C_Master_Wait	;wreg free
  3382                           
  3383                           ;i2c_display.c: 184:     SSP1CON2bits.SEN = 1;
  3384  001B86  80C5               	bsf	4037,0,c	;volatile
  3385  001B88  0012               	return		;funcret
  3386  001B8A                     __end_of_I2C_Master_Start:
  3387                           	opt callstack 0
  3388                           
  3389 ;; *************** function _I2C_Master_Wait *****************
  3390 ;; Defined at:
  3391 ;;		line 174 in file "i2c_display.c"
  3392 ;; Parameters:    Size  Location     Type
  3393 ;;		None
  3394 ;; Auto vars:     Size  Location     Type
  3395 ;;		None
  3396 ;; Return value:  Size  Location     Type
  3397 ;;                  1    wreg      void 
  3398 ;; Registers used:
  3399 ;;		wreg, status,2, status,0
  3400 ;; Tracked objects:
  3401 ;;		On entry : 0/0
  3402 ;;		On exit  : 0/0
  3403 ;;		Unchanged: 0/0
  3404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3407 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3408 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3409 ;;Total ram usage:        1 bytes
  3410 ;; Hardware stack levels used:    1
  3411 ;; This function calls:
  3412 ;;		Nothing
  3413 ;; This function is called by:
  3414 ;;		_I2C_Master_Start
  3415 ;;		_I2C_Master_Stop
  3416 ;;		_I2C_Write_Display
  3417 ;;		_I2C_Master_RepeatedStart
  3418 ;;		_I2C_Master_Write
  3419 ;;		_I2C_Master_Read
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           	psect	text27
  3424  001B42                     __ptext27:
  3425                           	opt callstack 0
  3426  001B42                     _I2C_Master_Wait:
  3427                           	opt callstack 25
  3428                           
  3429                           ;i2c_display.c: 176:    while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
  3430                           
  3431                           ;incstack = 0
  3432  001B42  B4C7               	btfsc	4039,2,c	;volatile
  3433  001B44  D7FE               	goto	_I2C_Master_Wait
  3434  001B46  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  3435  001B4A  0E1F               	movlw	31
  3436  001B4C  1601               	andwf	??_I2C_Master_Wait,f,c
  3437  001B4E  B4D8               	btfsc	status,2,c
  3438  001B50  0012               	return	
  3439  001B52  D7F7               	goto	_I2C_Master_Wait
  3440  001B54                     __end_of_I2C_Master_Wait:
  3441                           	opt callstack 0
  3442                           
  3443                           	psect	rparam
  3444  0000                     tosu	equ	0xFFF
  3445                           tosh	equ	0xFFE
  3446                           tosl	equ	0xFFD
  3447                           stkptr	equ	0xFFC
  3448                           pclatu	equ	0xFFB
  3449                           pclath	equ	0xFFA
  3450                           pcl	equ	0xFF9
  3451                           tblptru	equ	0xFF8
  3452                           tblptrh	equ	0xFF7
  3453                           tblptrl	equ	0xFF6
  3454                           tablat	equ	0xFF5
  3455                           prodh	equ	0xFF4
  3456                           prodl	equ	0xFF3
  3457                           indf0	equ	0xFEF
  3458                           postinc0	equ	0xFEE
  3459                           postdec0	equ	0xFED
  3460                           preinc0	equ	0xFEC
  3461                           plusw0	equ	0xFEB
  3462                           fsr0h	equ	0xFEA
  3463                           fsr0l	equ	0xFE9
  3464                           wreg	equ	0xFE8
  3465                           indf1	equ	0xFE7
  3466                           postinc1	equ	0xFE6
  3467                           postdec1	equ	0xFE5
  3468                           preinc1	equ	0xFE4
  3469                           plusw1	equ	0xFE3
  3470                           fsr1h	equ	0xFE2
  3471                           fsr1l	equ	0xFE1
  3472                           bsr	equ	0xFE0
  3473                           indf2	equ	0xFDF
  3474                           postinc2	equ	0xFDE
  3475                           postdec2	equ	0xFDD
  3476                           preinc2	equ	0xFDC
  3477                           plusw2	equ	0xFDB
  3478                           fsr2h	equ	0xFDA
  3479                           fsr2l	equ	0xFD9
  3480                           status	equ	0xFD8


Data Sizes:
    Strings     3
    Constant    0
    Data        0
    BSS         126
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     10     136
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 8
		 -> str_i(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> str_i(BANK0[8]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1696_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 8
		 -> str_i(BANK0[8]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> str_i(BANK0[8]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 8
		 -> str_i(BANK0[8]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _config->_I2C_Master_Init
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _Cursor_Off->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Port->_I2C_Write_Display
    _I2C_Write_Display->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    9812
                                             91 COMRAM     4     4      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                             _config
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    5834
                                             85 COMRAM     6     0      6
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5483
                                             77 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6    5130
                                             59 COMRAM    18    12      6
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    3759
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (1) _config                                               2     2      0    2548
                                             21 COMRAM     2     2      0
                         _Cursor_Off
                    _I2C_Master_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                          _USARTInit
 ---------------------------------------------------------------------------------
 (2) _USARTInit                                            4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1     777
                                             10 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     551
                                             10 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     355
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _Cursor_Off                                           0     0      0     355
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              6     6      0     355
                                              4 COMRAM     6     6      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     2      2     563
                                              7 COMRAM     4     2      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     397
                                              4 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     196
                                              3 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                  _I2C_Write_Display
 ---------------------------------------------------------------------------------
 (5) _I2C_Write_Display                                    2     0      2     174
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Write_Display
           _I2C_Master_Wait
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Write_Display
           _I2C_Master_Wait
   _config
     _Cursor_Off
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _I2C_Master_Init
       ___lldiv
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
       _Lcd_Port
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Write_Display
           _I2C_Master_Wait
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _USARTInit
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      A      88       5       85.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E7      12        0.0%
DATA                 0      0      E7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Apr 06 12:02:35 2019

        USARTInit@baud_rate 0001                __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000  
              __CFG_CP2$OFF 000000                __CFG_CP3$OFF 000000          I2C_Write_Display@d 0002  
                       l250 1784                         l410 102C                         l408 1024  
                       l460 170E                         l197 1824                         l398 1634  
                       l871 13CC                         l881 1542                __CFG_CPB$OFF 000000  
              __CFG_CPD$OFF 000000                         u810 15BC                         u901 1326  
                       u920 135E                         u950 14E8                         u790 1574  
                       u980 101A                         _pad 1604                         wreg 000FE8  
                _TXSTA1bits 000FAC                  _TXSTA2bits 000F72                __CFG_LVP$OFF 000000  
                      l2008 1062                        l2130 1734                        l2018 114E  
                      l2108 1700                        l2124 1728                        l2126 172C  
                      l2134 173A                        l2214 1948                        l2128 1730  
                      l2072 12CA                        l2216 196E                        l2066 128E  
                      l2082 12EC                        l2244 1AB6                        l2076 12D4  
                      l2182 1A04                        l2248 1ACC                        l2096 16C0  
                      l2098 16CC                        l2356 181C                        l1910 1A94  
                      l1906 1A7E                        l1914 1AEA                        l1916 1AEE  
                      l1942 162C                        l1952 1684                        l1944 163E  
                      l2770 1772                        l1962 1346                        l1938 161E  
                      l2772 177C                        l1964 135A                        l1892 157C  
                      l1948 1656                        l2766 175E                        l1974 13B6  
                      l1990 152C                        l1982 14D0                        ?_pad 0011  
                      l2768 1768                        l1984 14E4                        STR_1 1001  
                      u1010 1178                        u1011 1176                        u1020 1186  
                      u1030 118C                        u1105 18AC                        u1080 16D0  
                      _LATA 000F89                        _LATB 000F8A                        _LATC 000F8B  
                      _LATD 000F8C                        _LATE 000F8D                        u1707 17AC  
                      u1717 17C6                        u1727 17DC                        u1737 1A5C  
                      u1747 1906                        u1757 1924                        u1677 1832  
                      u1687 146C                        u1697 14A6                        _PEIE 007F96  
                      _data 00B2           ?_Lcd_Write_String 0008                        _dbuf 00B6  
                      _main 1818                        _prec 00AE                        _nout 00AA  
                      pad@i 0018                        pad@p 0015                        fsr1h 000FE2  
                      fsr2h 000FDA                        indf2 000FDF                        fsr1l 000FE1  
                      pad@w 001A                        fsr2l 000FD9                        _utoa 1006  
             __CFG_BORV$190 000000                        start 0000          ??_Lcd_Write_String 000A  
             __CFG_IESO$OFF 000000             __end_of_Lcd_Cmd 1A74                ___param_bank 000000  
                     ??_pad 0017            ?_I2C_Master_Init 000E            ?_I2C_Master_Wait 0001  
              _BAUDCON2bits 000F70            ?_I2C_Master_Stop 0001                       ?_main 0001  
           __end_of___lldiv 1720                       ?_utoa 001C             __end_of___lodiv 13EE  
           __end_of___lomod 1564                       _RCREG 000FAE                vfpfcnvrt@fmt 003E  
              vfpfcnvrt@llu 0046                       _PORTA 000F80                       _PORTB 000F81  
                     _PORTC 000F82                       _PORTD 000F83                       _PORTE 000F84  
   __size_of_Lcd_Set_Cursor 0050                       _TRISA 000F92                       _TRISB 000F93  
                     _TRISC 000F94                       _TRISD 000F95                       _TRISE 000F96  
                     _TXREG 000FAD                       _UQEnd 00B4               __CFG_WRT0$OFF 000000  
             __CFG_WRT1$OFF 000000               __CFG_WRT2$OFF 000000               __CFG_WRT3$OFF 000000  
            __CFG_EBTR0$OFF 000000              __CFG_FCMEN$OFF 000000              __CFG_EBTR1$OFF 000000  
            __CFG_EBTR2$OFF 000000              __CFG_EBTR3$OFF 000000               __CFG_WRTB$OFF 000000  
             __CFG_WRTC$OFF 000000               __CFG_WRTD$OFF 000000              __CFG_EBTRB$OFF 000000  
                     _flags 00B0                       _fputc 1564                       _fputs 1A74  
        __CFG_MCLRE$EXTMCLR 000000                       pad@fp 0011                       _width 00AC  
                     _putch 1B8A                       main@i 005E                       _str_i 00D6  
            __CFG_BOREN$OFF 000000                       tablat 000FF5          __size_of_USARTInit 007C  
                     utoa@d 001E                       utoa@i 003A                       utoa@n 0032  
                     utoa@p 002E                       utoa@w 0030                       status 000FD8  
           __end_of_sprintf 19DC              __CFG_HFOFST$ON 000000            ___lodiv@dividend 0001  
          __end_of_Lcd_Init 1818            __end_of_Lcd_Port 1B2C             __initialization 1B2C  
              __end_of_main 1882                __end_of_utoa 11B6                  _Cursor_Off 1B62  
                    ??_main 005C                      ??_utoa 0026          __size_of_Lcd_Clear 000E  
             __activetblptr 000002           ?_I2C_Master_Start 0001            ___lodiv@quotient 0011  
        ??_I2C_Master_Start 0002                      ?_fputc 0001                      ?_fputs 000A  
                    _ANSELA 000F38                      ?_putch 0001                      _ANSELB 000F39  
                    _ANSELC 000F3A                      _ANSELD 000F3B                      _ANSELE 000F3C  
            __CFG_WDTEN$OFF 000000                   ??_Lcd_Cmd 0005                      _SPBRG1 000FAF  
                    _SPBRG2 000F75     __size_of_Lcd_Write_Char 0058                      _SSPBUF 000FC9  
                    _TXREG2 000F73                      _URBuff 0060              __CFG_XINST$OFF 000000  
              vfprintf@cfmt 0054                   ??___lldiv 0009                   ??___lodiv 0011  
                 ??___lomod 0011                      _config 13EE                      clear_0 1B32  
         __end_of_USARTInit 179C                      pad@buf 0013                      _strlen 1AE0  
                    fputc@c 0001                      fputs@c 000E                      fputs@i 000F  
                    fputs@s 000A                __mediumconst 0000                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8                      putch@c 0001  
          __end_of_vfprintf 198A                      utoa@fp 001C                   ??_sprintf 005C  
           Lcd_Set_Cursor@a 000C             Lcd_Set_Cursor@b 000B             Lcd_Set_Cursor@y 000E  
           Lcd_Set_Cursor@z 000D                  __accesstop 0060     __end_of__initialization 1B38  
           __CFG_PBADEN$OFF 000000           __end_of_Lcd_Clear 1B62               ___rparam_used 000001  
            __pcstackCOMRAM 0001               __end_of_fputc 1604               __end_of_fputs 1AAC  
               ?_Cursor_Off 0001               __end_of_putch 1B8C              _Lcd_Set_Cursor 19DC  
                 ?_Lcd_Init 0001                   ?_Lcd_Port 0001                     ??_fputc 0005  
                   ??_fputs 000E                     ??_putch 0001                  __pbssBANK0 0060  
           __CFG_PLLCFG$OFF 000000          __CFG_CCP2MX$PORTC1 000000          __CFG_CCP3MX$PORTB5 000000  
                   ?_config 0001           _I2C_Write_Display 1B70   __size_of_Lcd_Write_String 0034  
    __end_of_Lcd_Set_Cursor 1A2C          ?_I2C_Write_Display 0002                     ?_strlen 0001  
        __size_of_vfpfcnvrt 016A                     _SPBRGH2 000F76         ??_I2C_Write_Display 0004  
                ??_Lcd_Init 000B                     _SSP1ADD 000FC8                     _SSP1BUF 000FC9  
                ??_Lcd_Port 0004          USARTWriteInt@F6042 00A5            ___lomod@dividend 0001  
                   _UQFront 00B5              _Lcd_Write_Char 18DC                     _Lcd_Cmd 1A2C  
       __size_of_Cursor_Off 000E             __CFG_PWRTEN$OFF 000000                     __Hparam 0000  
                   __Lparam 0000   __end_of_I2C_Write_Display 1B7A                     ___lldiv 169E  
                   ___lodiv 1320                     ___lomod 14B6                   ?_vfprintf 004E  
              __psmallconst 1000             __size_of_config 00C8             __CFG_STVREN$OFF 000000  
                   __pcinit 1B2C                     __ramtop 1000             ?_Lcd_Set_Cursor 000B  
                   __ptext0 1818                     __ptext1 198A                     __ptext2 1934  
                   __ptext3 11B6                     __ptext4 1006                     __ptext5 1604  
                   __ptext6 1AE0                     __ptext7 1A74                     __ptext8 1564  
                   __ptext9 1B8A             __size_of_strlen 002A                __size_of_pad 009A  
  __size_of_I2C_Master_Init 005A    __size_of_I2C_Master_Wait 0012    __size_of_I2C_Master_Stop 0008  
                   _sprintf 198A      __end_of_Lcd_Write_Char 1934        end_of_initialization 1B38  
                   fputc@fp 0003               __Lmediumconst 0000                     fputs@fp 000C  
 __size_of_I2C_Master_Start 0008             ___lldiv@divisor 0005             ___lldiv@counter 000D  
         __end_of_vfpfcnvrt 1320            I2C_Master_Init@c 000E                     postdec2 000FDD  
                   postinc0 000FEE                     postinc1 000FE6                     postinc2 000FDE  
                ??_vfprintf 0054                     strlen@a 0003                     strlen@s 0001  
                 _PORTBbits 000F81                   _USARTInit 1720                   _TRISCbits 000F94  
                 _TRISDbits 000F95             ?_Lcd_Write_Char 0001           Lcd_Write_String@a 0008  
         Lcd_Write_String@i 000A                   _Lcd_Clear 1B54  __size_of_I2C_Write_Display 000A  
              ??_Cursor_Off 000B                 vfpfcnvrt@ap 0040                 vfpfcnvrt@fp 003C  
          _Lcd_Write_String 1AAC              __end_of_config 14B6              __end_of_strlen 1B0A  
       start_initialization 1B2C             ___lodiv@divisor 0009                  ?_USARTInit 0001  
           ___lodiv@counter 0019                 __end_of_pad 169E           __size_of_Lcd_Init 007C  
         __size_of_Lcd_Port 0022           ??_I2C_Master_Init 0012           ??_I2C_Master_Wait 0001  
         ??_I2C_Master_Stop 0002          __end_of_Cursor_Off 1B70                 vfprintf@fmt 0050  
                ?_Lcd_Clear 0001                    ??_config 0016             Lcd_Write_Char@a 0005  
           Lcd_Write_Char@y 0006                    ??_strlen 0003               __pcstackBANK0 00DE  
                  ?_Lcd_Cmd 0001            _I2C_Master_Start 1B82            ??_Lcd_Set_Cursor 000C  
                  ?___lldiv 0001                    ?___lodiv 0001                    ?___lomod 0001  
          __CFG_PRICLKEN$ON 000000           __size_of_vfprintf 0056         USART2WriteInt@F6062 00A0  
           ___lomod@divisor 0009                 __smallconst 1000             ___lomod@counter 0011  
               ??_USARTInit 0003                    ?_sprintf 0056              __size_of_fputc 00A0  
            __size_of_fputs 0038              __size_of_putch 0002                    _PIE1bits 000F9D  
                  _PIE3bits 000FA3                    Lcd_Cmd@a 000A                    _PIR1bits 000F9E  
                  _PIR3bits 000FA4                 ??_Lcd_Clear 000B            __CFG_WDTPS$32768 000000  
                  _SSP1CON1 000FC6                    _SSP1CON2 000FC5                    _SSP1STAT 000FC7  
                 _vfpfcnvrt 11B6            ??_Lcd_Write_Char 0005                    _Lcd_Init 179C  
                  _Lcd_Port 1B0A    __end_of_Lcd_Write_String 1AE0            __size_of_Lcd_Cmd 0048  
              Lcd_Port@data 0004                    __Hrparam 0000                  vfprintf@ap 0052  
                  __Lrparam 0000                  vfprintf@fp 004E           __CFG_P2BMX$PORTD2 000000  
          __size_of___lldiv 0082            __size_of___lodiv 00CE            __size_of___lomod 00AE  
                ?_vfpfcnvrt 003C                  sprintf@fmt 0058             _I2C_Master_Init 1882  
           _I2C_Master_Wait 1B42             _I2C_Master_Stop 1B7A                    __ptext10 14B6  
                  __ptext11 1320                    __ptext20 1A2C                    __ptext12 13EE  
                  __ptext21 1AAC                    __ptext13 1720                    __ptext22 18DC  
                  __ptext14 19DC                    __ptext23 1B0A                    __ptext15 179C  
                  __ptext24 1B70                    __ptext16 1B54                    __ptext25 1B7A  
                  __ptext17 1882                    __ptext26 1B82                    __ptext18 169E  
                  __ptext27 1B42                    __ptext19 1B62                _SSP1CON2bits 000FC5  
          __size_of_sprintf 0052                 Lcd_Cmd@buff 0008               __size_of_main 006A  
             __size_of_utoa 01B0                    _vfprintf 1934    __end_of_I2C_Master_Start 1B8A  
               _OSCTUNEbits 000F9B                  _INTCONbits 000FF2          Lcd_Write_Char@temp 0007  
                 sprintf@ap 00E0            ___lldiv@dividend 0001                  _RCSTA1bits 000FAB  
                _RCSTA2bits 000F71                  _OSCCONbits 000FD3     __end_of_I2C_Master_Init 18DC  
   __end_of_I2C_Master_Wait 1B54     __end_of_I2C_Master_Stop 1B82                 ??_vfpfcnvrt 0042  
        Lcd_Set_Cursor@temp 000F                    sprintf@f 00E2                    sprintf@s 0056  
          ___lldiv@quotient 0009           __CFG_T3CMX$PORTC0 000000           __CFG_FOSC$INTIO67 000000  
